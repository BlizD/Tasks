
Процедура ПриЗаписи(Отказ)
	СформироватьЗаписиВРС_узИсторияХранилища(Отказ);
	
	РегистрацияАктивностиПользователя(Отказ);
КонецПроцедуры

Процедура РегистрацияАктивностиПользователя(Отказ)
	РегистрыСведений.узАктивностиПользователей.ДобавитьАктивностьПользователя(ЭтотОбъект,,Отказ);
КонецПроцедуры

Процедура СформироватьЗаписиВРС_узИсторияХранилища(Отказ)
	ТЗДанныеДляЗаписи = ПолучитьТЗДанныеДляЗаписи();
	Для каждого СтрокаТЗДанныеДляЗаписи из ТЗДанныеДляЗаписи цикл
		МенеджерЗаписи = РегистрыСведений.узЗаписиИсторииКонфигурации.СоздатьМенеджерЗаписи();	
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи,СтрокаТЗДанныеДляЗаписи);
		МенеджерЗаписи.Записать();
	Конеццикла;
КонецПроцедуры 

Функция ПолучитьТЗДанныеДляЗаписи() 
	ТЗДанныеДляЗаписи = РегистрыСведений.узЗаписиИсторииКонфигурации.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Для каждого СтрокаИзмененныеОбъекты из ИзмененныеОбъекты цикл
		пИдентификаторОбъектаМетаданных = СтрокаИзмененныеОбъекты.ИдентификаторОбъектаМетаданных;		
		ДобавитьВТЗДанныеДляЗаписи(пИдентификаторОбъектаМетаданных,ТЗДанныеДляЗаписи);
	Конеццикла;
	Возврат ТЗДанныеДляЗаписи;
КонецФункции 

Процедура ДобавитьВТЗДанныеДляЗаписи(ЗНАЧ ИдентификаторОбъектаМетаданныхРебенок,ТЗДанныеДляЗаписи)
	Если ТЗДанныеДляЗаписи.Найти(ИдентификаторОбъектаМетаданныхРебенок,"ИдентификаторОбъектаМетаданных") = Неопределено Тогда
		СтрокаТЗДанныеДляЗаписи = ТЗДанныеДляЗаписи.Добавить();	
		СтрокаТЗДанныеДляЗаписи.Период = ДатаВерсии;
		СтрокаТЗДанныеДляЗаписи.ИдентификаторОбъектаМетаданных = ИдентификаторОбъектаМетаданныхРебенок;
		СтрокаТЗДанныеДляЗаписи.ЗаписьИсторииХранилища = Ссылка;		
	Конецесли;
	
	РодительИдентификатораОбъектаМетаданных = ИдентификаторОбъектаМетаданныхРебенок.Родитель; 
	Если ЗначениеЗаполнено(РодительИдентификатораОбъектаМетаданных) Тогда
		ДобавитьВТЗДанныеДляЗаписи(РодительИдентификатораОбъектаМетаданных,ТЗДанныеДляЗаписи)	
	Конецесли;
КонецПроцедуры 

Процедура ПередЗаписью(Отказ)
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Наименование = Справочники.узИсторияКонфигураций.ПолучитьНаименование(Версия,ДатаВерсии);
	Конецесли;
	Если ЭтоНовый() Тогда
		ЗаполнитьВерсиюДляВводаВручную();
	Конецесли;
	
КонецПроцедуры



Процедура ЗаполнитьВерсиюДляВводаВручную()
	Если НЕ ВводВручную Тогда
		Возврат;
	Конецесли;
	Если ЗначениеЗаполнено(Версия) Тогда
		Возврат;	
	Конецесли;
	Версия = Справочники.узИсторияКонфигураций.ПолучитьНовуюВерсиюДляВводаВручную(Владелец);
КонецПроцедуры 
