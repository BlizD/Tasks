#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов	
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ИспользоватьФорматированиеВСодержании = Истина;
		Объект.Автор = Пользователи.ТекущийПользователь();
		Объект.Важность = ПредопределенноеЗначение("Справочник.узВариантыВажностиЗадачи.Обычная");
		Если Объект.ИспользоватьФорматированиеВСодержании Тогда
			ФорматированныйТекст = Параметры.ЗначениеКопирования.Содержание.Получить();
		Конецесли;
		Если Параметры.Свойство("ПараметрыНовойЗадачи") Тогда
			ПараметрыНовойЗадачи = Параметры.ПараметрыНовойЗадачи; 	
			ЗаполнитьЗначенияСвойств(Объект,ПараметрыНовойЗадачи);
		Конецесли;
		Если Параметры.Свойство("ТребоватьЗаполнитьРодителя") Тогда
			ТребоватьЗаполнитьРодителя = Параметры.ТребоватьЗаполнитьРодителя;
		Конецесли;
	Иначе
		
	КонецЕсли;
	КомментарииПометка = Ложь;
	Для каждого СтрокаКомментарии из Объект.Комментарии цикл
		Если СтрокаКомментарии.Выполнено Тогда
			Продолжить;
		Конецесли;
		КомментарииПометка = Истина;
	Конеццикла;
	Элементы.КомандаПоказатьСкрытьКомментарии.Пометка = КомментарииПометка;	
	УстановитьВидимостьДоступность();
	УстановитьПараметрыИзмененныеОбъекты();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если Объект.ИспользоватьФорматированиеВСодержании Тогда
		ФорматированныйТекст = ТекущийОбъект.Содержание.Получить();
	Конецесли;
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("СправочникЗадачаЗаписана");
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Объект.ИспользоватьФорматированиеВСодержании Тогда
		ТекущийОбъект.Содержание = Новый ХранилищеЗначения(ФорматированныйТекст, Новый СжатиеДанных(9));
		
		пТекстСодержания = ПолучитьСодержаниеТекстИзФорматированногоТекста();
		ТекущийОбъект.ТекстСодержания = пТекстСодержания;
	Конецесли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ТребоватьЗаполнитьРодителя
		И НЕ ЗначениеЗаполнено(Объект.Родитель) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! необходимо указать родителя для задачи";
		Сообщение.Поле = "Объект.Родитель"; //имя реквизита 
		Сообщение.УстановитьДанные(Объект.Родитель); //Ссылка на объект ИБ
		Сообщение.Сообщить();
		Отказ = Истина;
	Конецесли;
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()	
	
	Элементы.Родитель.АвтоОтметкаНезаполненного = ТребоватьЗаполнитьРодителя;
	Элементы.Родитель.АвтоВыборНезаполненного = ТребоватьЗаполнитьРодителя;
	Элементы.ГруппаСодержаниеФорматированное.Видимость = Ложь;
	Элементы.ТекстСодержания.Видимость = Ложь;
	Элементы.ГруппаСтраницаИзмененныеОбъектыДетали.Видимость = Ложь;
	Элементы.ГруппаСтраницаСписокИзмененныхОбъектов.Видимость = Ложь;
	Элементы.ГруппаКомментарии.Видимость = Ложь;
	Элементы.КомментарииДобавить.Видимость = Ложь;
	Элементы.КомментарииВывестиСписок.Видимость = Ложь;
	Элементы.КомментарииПереместитьВверх.Видимость = Ложь;
	Элементы.КомментарииПереместитьВниз.Видимость = Ложь;
	
	Если Объект.ИспользоватьФорматированиеВСодержании Тогда
		Элементы.ГруппаСодержаниеФорматированное.Видимость = Истина;	
	Иначе
		Элементы.ТекстСодержания.Видимость = Истина;
	Конецесли;
	Если ТолькоСписокИзмененныхОбъектов Тогда
		Элементы.ГруппаСтраницаСписокИзмененныхОбъектов.Видимость = Истина;	
	Иначе
	    Элементы.ГруппаСтраницаИзмененныеОбъектыДетали.Видимость = Истина;
	Конецесли;
	Если Элементы.КомандаПоказатьСкрытьКомментарии.Пометка Тогда
		Элементы.ГруппаКомментарии.Видимость = Истина;	
		Элементы.КомментарииДобавить.Видимость = Истина;
		Элементы.КомментарииВывестиСписок.Видимость = Истина;		
		Элементы.КомментарииПереместитьВверх.Видимость = Истина;
		Элементы.КомментарииПереместитьВниз.Видимость = Истина;		
	Конецесли;
	
	Элементы.ДекорацияИнформацияОСлежениеЗаЗадачей.Видимость = Ложь;
	пЕстьЛиСлежение = РегистрыСведений.узНаблюдателиЗаЗадачами.ЕстьЛиСлежениеЗаЗадачейУТекущегоПользователя(Объект.Ссылка);
	Если пЕстьЛиСлежение Тогда
		Элементы.ДекорацияИнформацияОСлежениеЗаЗадачей.Видимость = Истина;
	Конецесли;
	
	ОбновитьЗаголовокПоказатьСкрытьКомментарии();
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокПоказатьСкрытьКомментарии()
	Элементы.КомандаПоказатьСкрытьКомментарии.Заголовок = "Комментарии("+Объект.Комментарии.Количество()+")";
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьЗаголовокПоказатьСкрытьКомментарииНаКлиенте()
	Элементы.КомандаПоказатьСкрытьКомментарии.Заголовок = "Комментарии("+Объект.Комментарии.Количество()+")";
КонецПроцедуры 


&НаСервере
Функция ПолучитьСодержаниеТекстИзФорматированногоТекста() 
	ТекстHTML = "";
	Вложения = Новый Структура;
	ФорматированныйТекст.ПолучитьHTML(ТекстHTML, Вложения);
	
	пТекстСодержания = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ТекстHTML);
	Возврат пТекстСодержания;
КонецФункции 

&НаСервере
Процедура УстановитьПараметрыИзмененныеОбъекты()
	ИзмененныеОбъекты.Параметры.УстановитьЗначениеПараметра("Задача",Объект.Ссылка);
	ИзмененныеОбъекты.Параметры.УстановитьЗначениеПараметра("ЭтоНовый",Объект.Ссылка.Пустая());
	ИзмененныеОбъектыСписок.Параметры.УстановитьЗначениеПараметра("Задача",Объект.Ссылка);
	ИзмененныеОбъектыСписок.Параметры.УстановитьЗначениеПараметра("ЭтоНовый",Объект.Ссылка.Пустая());
КонецПроцедуры 

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы


&НаКлиенте
Процедура КомментарииВКодеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФИОИсполнителя = Неопределено;
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда
		МассивПодстрок = СтрРазделить(Объект.Исполнитель," ");
		КоличествоСлов = МассивПодстрок.Количество();
		Если КоличествоСлов > 0 Тогда
			ФИОИсполнителя = " "+ МассивПодстрок[0];
		Конецесли;
		Если КоличествоСлов > 1 Тогда
			ФИОИсполнителя = ФИОИсполнителя + " " + Лев(МассивПодстрок[1],1)+".";
		Конецесли;
		Если КоличествоСлов > 2 Тогда
			ФИОИсполнителя = ФИОИсполнителя + "" + Лев(МассивПодстрок[2],1)+".";
		Конецесли;	
	Конецесли;
	//+ Иванов А.Б. 2016-09-07
	//+ #4Иванов Антон. Борисович.2016-09-07
	Объект.КомментарииВКоде = "//+ #"+Объект.Код 
		+ ?(ЗначениеЗаполнено(Объект.НомерВнешнейЗаявки)," "+Объект.НомерВнешнейЗаявки,"")
		+ ФИОИсполнителя
		+ " " + Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd"); 
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	Объект.СрокИсполнения = КонецДня(Объект.СрокИсполнения);
КонецПроцедуры

&НаКлиенте
Процедура КомментарииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьВводКомментария", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЭтоДобавлениеКомментария",Истина);
	ОткрытьФорму("Справочник.узЗадачи.Форма.ФормаВводаКомментария",ПараметрыФормы,,,,,ОповещениеОЗакрытии);	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВводКомментария(РезультатЗакрытия, ДопПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	Конецесли;
	Модифицированность = Истина;
	ЭтоДобавлениеКомментария = РезультатЗакрытия.ЭтоДобавлениеКомментария; 
	Если ЭтоДобавлениеКомментария Тогда
		СтрокаКомментарии = Объект.Комментарии.Добавить();
	Иначе
		ПараметрыОтбора=Новый Структура();
		ПараметрыОтбора.Вставить("Автор",РезультатЗакрытия.Автор);
		ПараметрыОтбора.Вставить("ДатаКомментария",РезультатЗакрытия.ДатаКомментария);
		НайденныеСтроки = Объект.Комментарии.НайтиСтроки(ПараметрыОтбора);
		ВсегоНайденныеСтроки = НайденныеСтроки.Количество();
		ТекстОшибки = "";
		Если ВсегоНайденныеСтроки = 1 тогда
			СтрокаКомментарии = НайденныеСтроки[0];	
		ИначеЕсли ВсегоНайденныеСтроки > 1 Тогда
			ТекстОшибки = "Ошибка! Найдено более 1 строки";
		Иначе
			ТекстОшибки = "Ошибка! Не найдена строка";
		Конецесли;
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			ТекстОшибки = ТекстОшибки  
				+" в ""Комментарии"" для ";
			Для каждого ЭлементОтбора из ПараметрыОтбора цикл
				ТекстОшибки = ТекстОшибки  
					+" "+ ЭлементОтбора.Ключ + " = "+ЭлементОтбора.Значение;				
			Конеццикла;
			ВызватьИсключение ТекстОшибки;	
		Конецесли;
	Конецесли;
	ЗаполнитьЗначенияСвойств(СтрокаКомментарии,РезультатЗакрытия);
	ОбновитьЗаголовокПоказатьСкрытьКомментарииНаКлиенте();
	//Объект.Комментарии.Сортировать("ДатаКомментария УБЫВ");
КонецПроцедуры 


&НаКлиенте
Процедура КомментарииПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомментарииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Возврат;
	Конецесли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СтрокаКомментарии = Элементы.Комментарии.ТекущиеДанные;	
	Если СтрокаКомментарии = Неопределено тогда
		Возврат;	
	Конецесли;	
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьВводКомментария", ЭтаФорма);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДатаКомментария",СтрокаКомментарии.ДатаКомментария);
	ПараметрыФормы.Вставить("Автор",СтрокаКомментарии.Автор);
	ПараметрыФормы.Вставить("Комментарий",СтрокаКомментарии.Комментарий);
	ПараметрыФормы.Вставить("Выполнено",СтрокаКомментарии.Выполнено);
	ОткрытьФорму("Справочник.узЗадачи.Форма.ФормаВводаКомментария",ПараметрыФормы,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
	Элементы.Комментарии.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	//ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОЗаписи", ЭтаФорма);
	//ВызватьИсключение "Надо поправить";
	//ПоказатьВопрос(ОповещениеОЗакрытии,"Перед тем как указать исполнителя, необходимо записать задачу. Продолжить?",РежимДиалогаВопрос.ДаНет,,,"Записать задачу?");	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	Заголовок = ?(ЗначениеЗаполнено(Объект.Код), "#"+ Объект.Код+" ", "") + Объект.Наименование;
КонецПроцедуры 

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьФорматированиеВСодержанииПриИзменении(Элемент)
	ПриИзмененииИспользоватьФорматированиеВСодержанииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииИспользоватьФорматированиеВСодержанииНаСервере()
	Если Объект.ИспользоватьФорматированиеВСодержании Тогда
		ФорматированныйТекст = Объект.ТекстСодержания;
	Иначе
		пТекстСодержания = ПолучитьСодержаниеТекстИзФорматированногоТекста();
		Объект.ТекстСодержания = пТекстСодержания;				
	Конецесли;
	УстановитьВидимостьДоступность();	
КонецПроцедуры 

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.ГруппаСтраницаИзмененныеОбъекты Тогда
		УстановитьПараметрыИзмененныеОбъекты();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСписокИзмененныхОбъектовПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьСкрытьКомментарии(Команда)
	Элементы.КомандаПоказатьСкрытьКомментарии.Пометка = НЕ Элементы.КомандаПоказатьСкрытьКомментарии.Пометка;
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзмененныеОбъектыДобавить(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Конфигурация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! сначала необходимо заполнить реквизит [Конфигурация]";
		Сообщение.Поле = "Объект.Конфигурация";
		Сообщение.Сообщить();
		Возврат;
	Конецесли;
	Если Объект.Ссылка.Пустая() Тогда
		Сообщить("Ошибка! Необходимо записать элемент, перед добавлением информации об измененных объектах");
		Возврат;
	Конецесли;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДобавитьНовыйЭлемент",Истина);
	ПараметрыФормы.Вставить("Конфигурация",Объект.Конфигурация);
	ПараметрыФормы.Вставить("Задача",Объект.Ссылка);
	ОткрытьФорму("Справочник.узИсторияКонфигураций.Форма.ФормаЭлемента",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "узИсторияХранилища_ЗаписанЭлемент" Тогда
		Если ТолькоСписокИзмененныхОбъектов Тогда
			Элементы.ИзмененныеОбъектыСписок.Обновить();
		Иначе
			Элементы.ИзмененныеОбъекты.Обновить();
		Конецесли;
	Конецесли;
	Если ИмяСобытия = "КомандаСледитьЗаЗадачей"
		ИЛИ ИмяСобытия = "КомандаНеСледитьЗаЗадачей" Тогда
		УстановитьВидимостьДоступность();
	Конецесли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьВерсию(Команда)
	СтрокаИзмененныеОбъекты = Элементы.ИзмененныеОбъекты.ТекущиеДанные;	
	Если СтрокаИзмененныеОбъекты = Неопределено тогда
		Возврат;	
	Конецесли;	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ",СтрокаИзмененныеОбъекты.Ссылка);
	ОткрытьФорму("Справочник.узИсторияКонфигураций.Форма.ФормаЭлемента",ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

