////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ НАСТРОЙКИ ПОРЯДКА ЭЛЕМЕНТОВ
&НаКлиенте
Процедура ПереместитьЭлементВверх(Команда)
    НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
КонецПроцедуры    
&НаКлиенте
Процедура ПереместитьЭлементВниз(Команда)	
    НастройкаПорядкаЭлементовКлиент.ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Поддержка группового изменения объектов.

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Список);	
КонецПроцедуры

&НаКлиенте
Процедура НаблюдательПриИзменении(Элемент)
	УстановитьПараметрыСписка();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидимостьДоступность();
	УстановитьПараметрыСписка();
	ВыполнитьЛокализацию();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЛокализацию()
	МассивКодовСообщений = Новый Массив();
	МассивКодовСообщений.Добавить(70);//Наблюдатель
	
	РегистрыСведений.узСловарь.ВыполнитьЛокализацию(Элементы,МассивКодовСообщений);
КонецПроцедуры //ВыполнитьЛокализацию()

&НаСервере
Процедура УстановитьПараметрыСписка()
	Список.Параметры.УстановитьЗначениеПараметра("ИспользоватьОтборПоНаблюдателю",ЗначениеЗаполнено(Наблюдатель));	
	Список.Параметры.УстановитьЗначениеПараметра("Наблюдатель",Наблюдатель);
	Список.Параметры.УстановитьЗначениеПараметра("СкрыватьЗадачиСОпределеннымСтатусом",Истина);
	
	// _Демо начало примера
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.АвторизованныйПользователь());
	// _Демо конец примера	
КонецПроцедуры //УстановитьПараметрыСписка

&НаСервере
Процедура УстановитьВидимостьДоступность()
	Элементы.ЕстьЗаметки.Видимость = Ложь;
	пИспользоватьЗаметки = Константы.ИспользоватьЗаметки.Получить(); 
	Если пИспользоватьЗаметки Тогда
		Элементы.ЕстьЗаметки.Видимость = Истина;
	Конецесли;
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьСкрытьЗадачи(Команда)
	Список_Параметры = Список.Параметры;
	ПараметрКомпоновки = Список_Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СкрыватьЗадачиСОпределеннымСтатусом"));	
	Список_Параметры.УстановитьЗначениеПараметра("СкрыватьЗадачиСОпределеннымСтатусом",НЕ ПараметрКомпоновки.Значение);
КонецПроцедуры

&НаСервере
Функция ПолучитьПолныйПутьЗадачи(ЗадачаСсылка)
	
	ПолныйПутьЗадачи = Справочники.узЗадачи.ПолучитьПолныйПутьЗадачи(ЗадачаСсылка);
	Возврат ПолныйПутьЗадачи;
	
КонецФункции

&НаКлиенте
Процедура СоздатьИерархиюЗадачНаДиске(Команда)
		
	Каталог = ВыбратьКаталог(РежимДиалогаВыбораФайла.ВыборКаталога, "Выберите каталог");
	
	Если Каталог = Неопределено  тогда
        Возврат;
	КонецЕсли;
	
	ПолныйПутьЗадачи = ПолучитьПолныйПутьЗадачи(Элементы.Список.ТекущиеДанные.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(ПолныйПутьЗадачи) Тогда
		Сообщить("Не удалось получить путь для задачи");
		Возврат;
	КонецЕсли;
	
	ОбъедененныйПуть = Каталог + ПолучитьРазделительПутиКлиента() + ПолныйПутьЗадачи;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьИерархиюЗадачНаДиске_Продолжение", ЭтотОбъект);
	НачатьСозданиеКаталога(ОписаниеОповещения, ОбъедененныйПуть);
		
КонецПроцедуры

Процедура СоздатьИерархиюЗадачНаДиске_Продолжение(ИмяКаталога, ДополнительныеПараметры) Экспорт
	
	Сообщить("Создан каталог "+ИмяКаталога);
	
КонецПроцедуры	

&НаКлиенте
Функция ВыбратьКаталог(Режим, Заголовок)

    Диалог = Новый ДиалогВыбораФайла(Режим);
    Диалог.Заголовок = Заголовок;
    Диалог.ПредварительныйПросмотр = Ложь;

    Если Диалог.Выбрать() Тогда
        Возврат Диалог.Каталог;
    КонецЕсли;

КонецФункции
