
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.узЗадачи") Тогда
		Задача = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	ДатаПоследнегоИзменения = ТекущаяДата();
	
	ТЗСобытия = ПолучитьТЗСобытия();
	ДополнительныеСвойства.Вставить("ТЗСобытия",ТЗСобытия);
КонецПроцедуры

Функция ПолучитьТЗСобытия()
	ТЗСобытия = Новый ТаблицаЗначений();
	ТЗСобытия.Колонки.Добавить("ВидСобытия",Новый ОписаниеТипов("ПеречислениеСсылка.узВидыСобытий"));
	
	Если ЭтоНовый() Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ДобавленВопрос");
		Возврат ТЗСобытия;
	Конецесли;
	
	Если Ссылка.ВопросЗакрыт = Ложь
		И ВопросЗакрыт = Истина  Тогда
		СтрокаТЗСобытия = ТЗСобытия.Добавить();
		СтрокаТЗСобытия.ВидСобытия = ПредопределенноеЗначение("Перечисление.узВидыСобытий.ЗакрытВопрос");
	Конецесли;
	
	Возврат ТЗСобытия;
КонецФункции

Процедура ПриЗаписи(Отказ)
	Если ДополнительныеСвойства.Свойство("узЭтоОбработка") Тогда
		Возврат;
	Конецесли;
	
	
	РегистрацияАктивностиПользователя(ДополнительныеСвойства.ТЗСобытия,Отказ);
	
	ДополнительныеСвойства.Удалить("ТЗСобытия");
КонецПроцедуры

Процедура РегистрацияАктивностиПользователя(ТЗСобытия,Отказ)
	ВТДопПараметры = Новый Структура();
	ВТДопПараметры.Вставить("ТЗСобытия",ТЗСобытия);
	РегистрыСведений.узАктивностиПользователей.ДобавитьАктивностьПользователя(ЭтотОбъект,ВТДопПараметры,Отказ);
КонецПроцедуры 
