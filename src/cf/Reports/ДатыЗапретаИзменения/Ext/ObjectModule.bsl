#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - Структура - см. возвращаемое значение
//       ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.ФормироватьСразу = Истина;
	
	Если Форма <> Неопределено Тогда
		УстановитьПредопределенныйПоВариантуВнедрения(Форма, КлючВарианта);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// Установка обязательных параметров.
	ПараметрыДанных = Новый Структура;
	ПараметрыДанных.Вставить("Пользовательские", КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных);
	ПараметрыДанных.Вставить("Текущие",          КомпоновщикНастроек.Настройки.ПараметрыДанных);
	
	УстановитьОбязательныйПараметр("Пользователи", "ЗаданныеПользователи", Ложь, Истина, ПараметрыДанных);
	УстановитьОбязательныйПараметр("Разделы",      "ЗаданныеРазделы",      Ложь, Истина, ПараметрыДанных);
	УстановитьОбязательныйПараметр("Объекты",      "ЗаданныеОбъекты",      Ложь, Истина, ПараметрыДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОбязательныйПараметр(ИмяПараметра, ИмяОбязательногоПараметра, ЗначениеКогдаНеИспользуется, ЗначениеПриНеопределено, ПараметрыДанных)
	
	Параметр = ПараметрыДанных.Пользовательские.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр.Использование Тогда
		ЗаданноеЗначение = Параметр.Значение;
	Иначе
		// Установка значения, когда пользователь не использовал отбор.
		ЗаданноеЗначение = ЗначениеКогдаНеИспользуется;
	КонецЕсли;
	
	Если ТипЗнч(ЗаданноеЗначение) = Тип("СписокЗначений") Тогда
		// Создание нового списка для расширения состава типов значения.
		НовыйСписок = Новый СписокЗначений;
		НовыйСписок.ЗагрузитьЗначения(ЗаданноеЗначение.ВыгрузитьЗначения());
		ЗаданноеЗначение = НовыйСписок;
		// Установка значения, когда пользователь задал Неопределено.
		Элемент = ЗаданноеЗначение.НайтиПоЗначению(Неопределено);
		Если Элемент <> Неопределено Тогда
			Элемент.Значение = ЗначениеПриНеопределено;
		КонецЕсли;
		//
	ИначеЕсли ЗаданноеЗначение = Неопределено Тогда
		// Установка значения, когда пользователь задал Неопределено.
		ЗаданноеЗначение = ЗначениеПриНеопределено;
	КонецЕсли;
	
	ПараметрыДанных.Текущие.УстановитьЗначениеПараметра(ИмяОбязательногоПараметра, ЗаданноеЗначение);
	
КонецПроцедуры

Процедура УстановитьПредопределенныйПоВариантуВнедрения(Форма, КлючВарианта)
	
	Если Форма.Параметры.КлючВарианта <> Неопределено Тогда
		Возврат; // Вариант отчета указан при открытии.
	КонецЕсли;
	
	Свойства = ДатыЗапретаИзмененияСлужебный.СвойстваРазделов();
	
	Если Свойства.ПоказыватьРазделы И НЕ Свойства.ВсеРазделыБезОбъектов Тогда
		
		Если КлючВарианта <> "ДатыЗапретаИзмененияПоПользователям"
		   И КлючВарианта <> "ДатыЗапретаИзмененияПоРазделамОбъектамДляПользователей" Тогда
		   
			Форма.Параметры.КлючВарианта = "ДатыЗапретаИзмененияПоПользователям";
		КонецЕсли;
		
	ИначеЕсли Свойства.ВсеРазделыБезОбъектов Тогда
		
		Если КлючВарианта <> "ДатыЗапретаИзмененияПоПользователямБезОбъектов"
		   И КлючВарианта <> "ДатыЗапретаИзмененияПоРазделамДляПользователей" Тогда
		   
			Форма.Параметры.КлючВарианта = "ДатыЗапретаИзмененияПоПользователямБезОбъектов";
		КонецЕсли;
	Иначе
		Если КлючВарианта <> "ДатыЗапретаИзмененияПоПользователямБезРазделов"
		   И КлючВарианта <> "ДатыЗапретаИзмененияПоОбъектамДляПользователей" Тогда
			
			Форма.Параметры.КлючВарианта = "ДатыЗапретаИзмененияПоПользователямБезРазделов";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли