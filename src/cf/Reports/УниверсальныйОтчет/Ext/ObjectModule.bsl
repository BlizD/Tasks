#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - Структура -
//       
//       * ФормироватьСразу - Булево - Значение по умолчанию для флажка "Формировать сразу".
//           Когда флажок включен, то отчет будет формироваться:
//             - После открытия;
//             - После выбора пользовательских настроек;
//             - После выбора другого варианта отчета.
//       
//       * ВыводитьСуммуВыделенныхЯчеек - Булево - Если Истина, то в отчете будет выводиться поле автосуммы.
//       
//       * СоответствиеПериодичностиПараметров - Соответствие - Ограничение списка выбора полей "СтандартныйПериод".
//           ** Ключ - ПараметрКомпоновкиДанных - Имя параметра отчета, к которому применятся ограничения.
//           ** Значение - ПеречислениеСсылка.ДоступныеПериодыОтчета - Ограничение периода отчета "снизу".
//       
//       * Печать - Структура - Параметры печати табличного документа "по умолчанию".
//           ** ПолеСверху - Число - Отступ сверху при печати (в миллиметрах).
//           ** ПолеСлева  - Число - Отступ слева  при печати (в миллиметрах).
//           ** ПолеСнизу  - Число - Отступ снизу  при печати (в миллиметрах).
//           ** ПолеСправа - Число - Отступ справа при печати (в миллиметрах).
//           ** ОриентацияСтраницы - ОриентацияСтраницы - "Портрет" или "Ландшафт".
//           ** АвтоМасштаб - Булево - Автоматически подгонять масштаб под размер страницы.
//           ** МасштабПечати - Число - Масштаб изображения (в процентах).
//       
//       * События - Структура - События, для которых определены обработчики в модуле объекта отчета.
//           
//           ** ПриСозданииНаСервере - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   Отказ - Передается из параметров обработчика "как есть".
//               //   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//               //
//               // См. также:
//               //   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//               //
//               // Пример 1 - Добавление команды с обработчиком в ОтчетыКлиентПереопределяемый.ОбработчикКоманды:
//               //	Команда = Форма.Команды.Добавить("МояОсобеннаяКоманда");
//               //	Команда.Действие  = "Подключаемый_Команда";
//               //	Команда.Заголовок = НСтр("ru = 'Моя команда...'");
//               //	
//               //	Кнопка = Форма.Элементы.Добавить(Команда.Имя, Тип("КнопкаФормы"), Форма.Элементы.<ИмяПодменю>);
//               //	Кнопка.ИмяКоманды = Команда.Имя;
//               //	
//               //	Форма.ПостоянныеКоманды.Добавить(КомандаСоздать.Имя);
//               //
//               Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПередЗагрузкойВариантаНаСервере - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
//               //
//               // См. также:
//               //   "Расширение управляемой формы для отчета.ПриЗагрузкеВариантаНаСервере" в синтакс-помощнике.
//               //
//               Процедура ПередЗагрузкойВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПриЗагрузкеВариантаНаСервере - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
//               //
//               // См. также:
//               //   "Расширение управляемой формы для отчета.ПриЗагрузкеВариантаНаСервере" в синтакс-помощнике.
//               //
//               Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПриЗагрузкеПользовательскихНастроекНаСервере - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных -
//               //       Пользовательские настройки для загрузки в компоновщик настроек.
//               //
//               // См. также:
//               //   "Расширение управляемой формы для отчета.ПриЗагрузкеПользовательскихНастроекНаСервере"
//               //    в синтакс-помощнике.
//               //
//               Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПередЗаполнениемПанелиБыстрыхНастроек - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается до перезаполнения панели настроек формы отчета.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   ПараметрыЗаполнения - Структура - Параметры, которые будут загружены в отчет.
//               //
//               Процедура ПередЗаполнениемПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПослеЗаполненияПанелиБыстрыхНастроек - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается после перезаполнения панели настроек формы отчета.
//               //
//               // Параметры:
//               //   Форма - УправляемаяФорма - Форма отчета.
//               //   ПараметрыЗаполнения - Структура - Параметры, которые будут загружены в отчет.
//               //
//               Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** КонтекстныйВызовСервера - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Обработчик контекстного вызова сервера.
//               //   Позволяет выполнить контекстный вызов сервера когда это требуется из клиентского общего модуля.
//               //   Например, из ОтчетыКлиентПереопределяемый.ОбработчикКоманды().
//               //
//               // Параметры:
//               //   Форма  - УправляемаяФорма
//               //   Ключ      - Строка    - Ключ операции, которую необходимо выполнить в контекстном вызове.
//               //   Параметры - Структура - Параметры вызова сервера.
//               //   Результат - Структура - Результат работы сервера, возвращается на клиент.
//               //
//               // См. также:
//               //   ОбщаяФорма.ФормаОтчета.ВыполнитьКонтекстныйВызовСервера().
//               //
//               Процедура КонтекстныйВызовСервера(Форма, Ключ, Параметры, Результат) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ПриОпределенииПараметровВыбора - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Вызывается в форме отчета перед выводом настройки.
//               //   Подробнее - см. ОтчетыПереопределяемый.ПриОпределенииПараметровВыбора().
//               //
//               Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//           
//           ** ДополнитьСвязиОбъектовМетаданных - Булево - Если Истина, то в модуле объекта отчета
//               следует определить обработчик события по шаблону:
//               
//               // Дополнительные связи настроек этого отчета.
//               //   Подробнее - см. ОтчетыПереопределяемый.ДополнитьСвязиОбъектовМетаданных().
//               //
//               Процедура ДополнитьСвязиОбъектовМетаданных(СвязиОбъектовМетаданных) Экспорт
//               	// Обработка события.
//               КонецПроцедуры
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗаполнениемПанелиБыстрыхНастроек = Истина;
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма отчета.
//   СвойстваНастройки - Структура - Описание настройки отчета, которая будет выведена в форме отчета.
//       * ОписаниеТипов - ОписаниеТипов -
//           Тип настройки.
//       * ЗначенияДляВыбора - СписокЗначений -
//           Объекты, которые будут предложены пользователю в списке выбора.
//           Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос -
//           Возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево -
//           Когда Истина, то выбор пользователя будет ограничен значениями,
//           указанными в ЗначенияДляВыбора (его конечным состоянием).
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	
	Если СвойстваНастройки.Тип = "ЗначениеПараметраНастроек" Тогда
		ИмяПараметра = Строка(СвойстваНастройки.ПолеКД);
		Если ИмяПараметра = "ПараметрыДанных.ТипОбъектаМетаданных" Тогда
			СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;
			СвойстваНастройки.ЗначенияДляВыбора = Отчеты.УниверсальныйОтчет.ДоступныеТипыОбъектовМетаданных();
		ИначеЕсли ИмяПараметра = "ПараметрыДанных.ПолноеИмяОбъектаМетаданных" Тогда
			СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;
			СвойстваНастройки.ЗначенияДляВыбора = Отчеты.УниверсальныйОтчет.ДоступныеОбъектыМетаданных(КомпоновщикНастроек);
		ИначеЕсли ИмяПараметра = "ПараметрыДанных.ИмяТаблицы" Тогда
			СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;
			СвойстваНастройки.ЗначенияДляВыбора = Отчеты.УниверсальныйОтчет.ДоступныеТаблицы(КомпоновщикНастроек);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаполнениемПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
	Если Форма.ИмяФормы <> "Отчет.УниверсальныйОтчет.Форма.ФормаОтчета" Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиПоУмолчанию = Неопределено;
	
	ЭтоЗагруженнаяСхема = Форма.Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Свойство("СхемаКомпоновкиДанных");
	
	Если Форма.Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Свойство("ОтчетИнициализирован") Тогда
		ОтчетИнициализирован = Форма.Отчет.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.ОтчетИнициализирован;
	Иначе
		НастройкиПоУмолчанию = Новый Структура;
		ТипОбъектаМетаданных = Отчеты.УниверсальныйОтчет.ТипОбъектаМетаданныхПоУмолчанию();
		НастройкиПоУмолчанию.Вставить("ТипОбъектаМетаданных", ТипОбъектаМетаданных);
		НастройкиПоУмолчанию.Вставить("ПолноеИмяОбъектаМетаданных", Отчеты.УниверсальныйОтчет.ПолноеИмяОбъектаМетаданныхПоУмолчанию(Форма.Отчет.КомпоновщикНастроек, ТипОбъектаМетаданных));
		НастройкиПоУмолчанию.Вставить("ИмяТаблицы", Отчеты.УниверсальныйОтчет.ИмяТаблицыПоУмолчанию(Форма.Отчет.КомпоновщикНастроек, ТипОбъектаМетаданных, НастройкиПоУмолчанию.ПолноеИмяОбъектаМетаданных));
		ОтчетИнициализирован = Ложь;
	КонецЕсли;
	
	Форма.НастройкиОтчета.АдресСхемы = 
		Отчеты.УниверсальныйОтчет.ИнициализироватьОтчет(Форма.Отчет.КомпоновщикНастроек, Не ОтчетИнициализирован, Форма.УникальныйИдентификатор,,НастройкиПоУмолчанию);
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ОтчетИнициализирован = КомпоновщикНастроек.Настройки.ДополнительныеСвойства.ОтчетИнициализирован;
	
	АдресСхемы = Отчеты.УниверсальныйОтчет.ИнициализироватьОтчет(КомпоновщикНастроек, Не ОтчетИнициализирован);
	
	СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемы);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
