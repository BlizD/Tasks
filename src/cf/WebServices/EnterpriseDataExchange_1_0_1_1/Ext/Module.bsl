#Область СлужебныеПроцедурыИФункции
////////////////////////////////////////////////////////////////////////////////
// Обработчики операций

Функция Ping()
	Возврат "";
КонецФункции

Функция ПроверкаПодключения(ИмяПланаОбмена, КодУзлаПланаОбмена, СообщениеОбОшибке)
	
	СообщениеОбОшибке = "";
	
	// Проверяем, что информационная база не является файловой.
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		СообщениеОбОшибке = НСтр("ru = 'Подключаемая информационная база является файловой,
			|в связи с чем не поддерживает работу методов web-сервиса.'");
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем наличие прав для выполнения обмена.
	Попытка
		ОбменДаннымиСлужебный.ПроверитьВозможностьВыполненияОбменов();
	Исключение
		СообщениеОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Ложь;
	КонецПопытки;
	
	// Проверяем блокировку информационной базы для обновления.
	Попытка
		ОбменДаннымиСлужебный.ПроверитьБлокировкуИнформационнойБазыДляОбновления();
	Исключение
		СообщениеОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат Ложь;
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Проверяем наличие узла плана обмена (возможно узел уже удален).
	Если ПланыОбмена[ИмяПланаОбмена].НайтиПоКоду(КодУзлаПланаОбмена).Пустая() Тогда
		СообщениеОбОшибке = НСтр("ru = 'Заданный узел плана обмена не найден. Обратитесь к администратору приложения.'; en = 'Presetting not foung. Please contact with application administrator'");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ПодтвердитьПолучениеДанных(ИдентификаторФайла, ПодтверждениеПолученияФайла, СообщениеОбОшибке)
	
	СообщениеОбОшибке = "";
	
	Попытка
		УдалитьФайлы(ОбменДаннымиСлужебный.ВременныйКаталогВыгрузки(ИдентификаторФайла));
	Исключение
		
		СообщениеОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрации(ОбменДаннымиСервер.СобытиеЖурналаРегистрацииУдалениеВременногоФайла(),
			УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
	КонецПопытки;
		
КонецФункции

Функция ПолучитьРезультатЗагрузкиДанных(ИдентификаторФоновогоЗадания, СообщениеОбОшибке)
	Возврат ОбменДаннымиСлужебный.ПолучитьСтатусВыполненияПолученияДанных(ИдентификаторФоновогоЗадания, СообщениеОбОшибке);
КонецФункции

Функция ПолучитьРезультатПодготовкиДанныхКВыгрузке(ИдентификаторФоновогоЗадания, СообщениеОбОшибке)
	Возврат ОбменДаннымиСлужебный.ПолучитьСтатусВыполненияПодготовкиДанныхКОтправке(ИдентификаторФоновогоЗадания, СообщениеОбОшибке);
КонецФункции

Функция ЗагрузитьЧастьФайла(ИдентификаторФайла, НомерЗагружаемойЧастиФайла, ЗагружаемаяЧастьФайла, СообщениеОбОшибке)
	ОбменДаннымиСлужебный.ЗагрузитьЧастьФайла(ИдентификаторФайла, НомерЗагружаемойЧастиФайла, ЗагружаемаяЧастьФайла, СообщениеОбОшибке);
КонецФункции

Функция ВыгрузитьЧастьФайла(ИдентификаторФайла, НомерВыгружаемойЧастиФайла, СообщениеОбОшибке)
	Возврат ОбменДаннымиСлужебный.ВыгрузитьЧастьФайла(ИдентификаторФайла, НомерВыгружаемойЧастиФайла, СообщениеОбОшибке);
КонецФункции

Функция ЗагрузитьДанныеВИнформационнуюБазу(ИмяПланаОбмена, КодУзлаПланаОбмена, ИдентификаторФайла, ИдентификаторФоновогоЗадания, СообщениеОбОшибке)
	
	СообщениеОбОшибке = "";
	
	СтруктураПараметров = ОбменДаннымиСлужебный.ИнициализироватьПараметрыWebСервиса();
	СтруктураПараметров.ИмяПланаОбмена                         = ИмяПланаОбмена;
	СтруктураПараметров.КодУзлаПланаОбмена                     = КодУзлаПланаОбмена;
	СтруктураПараметров.ИдентификаторФайлаВоВременномХранилище = ОбменДаннымиСлужебный.ПодготовитьФайлДляЗагрузки(ИдентификаторФайла, СообщениеОбОшибке);
	СтруктураПараметров.ИмяWEBСервиса                          = "EnterpriseDataExchange_1_0_1_1";
	
	// Загружаем в информационную базу.
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(СтруктураПараметров);
	МассивПараметров.Добавить(СообщениеОбОшибке);
	ФоновоеЗаданиеЗагрузкиДанных = ФоновыеЗадания.Выполнить("ОбменДаннымиСлужебный.ЗагрузитьДанныеXDTOВИнформационнуюБазу", 
		МассивПараметров, 
		Строка(Новый УникальныйИдентификатор()), 
		НСтр("ru = 'Загрузка данных в информационную базу через web-сервис ""Enterprise Data Exchange""'"));
	ИдентификаторФоновогоЗадания = Строка(ФоновоеЗаданиеЗагрузкиДанных.УникальныйИдентификатор);
	
КонецФункции

Функция ПодготовитьДанныеКПолучению(ИмяПланаОбмена, КодУзлаПланаОбмена, РазмерЧастиФайла, ИдентификаторФоновогоЗадания, СообщениеОбОшибке)
	
	СообщениеОбОшибке = "";
	
	СтруктураПараметров = ОбменДаннымиСлужебный.ИнициализироватьПараметрыWebСервиса();
	СтруктураПараметров.ИмяПланаОбмена                         = ИмяПланаОбмена;
	СтруктураПараметров.КодУзлаПланаОбмена                     = КодУзлаПланаОбмена;
	СтруктураПараметров.РазмерЧастиФайла                       = РазмерЧастиФайла;
	СтруктураПараметров.ИдентификаторФайлаВоВременномХранилище = Новый УникальныйИдентификатор();
	СтруктураПараметров.ИмяWEBСервиса                          = "EnterpriseDataExchange_1_0_1_1";
	
	// Подготавливаем данные к выгрузке из информационной базы.
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(СтруктураПараметров);
	МассивПараметров.Добавить(СообщениеОбОшибке);
	ФоновоеЗаданиеЗагрузкиДанных = ФоновыеЗадания.Выполнить("ОбменДаннымиСлужебный.ПодготовитьДанныеДляВыгрузкиИзИнформационнойБазы", 
		МассивПараметров, 
		Строка(Новый УникальныйИдентификатор()),
		НСтр("ru = 'Подготовка к выгрузке данных из информационной базы через web-сервис ""Enterprise Data Exchange""'"));
	ИдентификаторФоновогоЗадания = Строка(ФоновоеЗаданиеЗагрузкиДанных.УникальныйИдентификатор);
	
КонецФункции

#КонецОбласти