
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТекущийПользовательСсылка = Пользователи.ТекущийПользователь();
	ТекущийПользовательИнформационнойБазы = Обработки.НастройкиПользователей.ИмяПользователяИБ(ТекущийПользовательСсылка);
	
	Если Параметры.Пользователь <> Неопределено Тогда
		
		ИдентификаторПользователяИБ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Пользователь, "ИдентификаторПользователяИБ");
		УстановитьПривилегированныйРежим(Истина);
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторПользователяИБ);
		УстановитьПривилегированныйРежим(Ложь);
		Если ПользовательИБ = Неопределено Тогда
			Элементы.ОтчетИлиПредупреждение.ТекущаяСтраница = Элементы.ОтображатьПредупреждение;
			Возврат;
		КонецЕсли;
		
		ПользовательСсылка = Параметры.Пользователь;
		Элементы.ПользовательСсылка.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Настройки пользователя'");
		ПользовательИнформационнойБазы = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	Иначе
		ПользовательСсылка = Пользователи.ТекущийПользователь();
		ПользовательИнформационнойБазы = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	КонецЕсли;
	
	ИспользоватьВнешнихПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьВнешнихПользователей");
	
	ИмяФормыПерсональныхНастроек = ОбщегоНазначения.ОбщиеПараметрыБазовойФункциональности().ИмяФормыПерсональныхНастроек;
	
	ВыбраннаяСтраницаНастроек = Элементы.ВидыНастроек.ТекущаяСтраница.Имя;
	ЗаполнитьСпискиНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПоискСписокВыбора = Настройки.Получить("ПоискСписокВыбора");
	Если ТипЗнч(ПоискСписокВыбора) = Тип("Массив") Тогда
		Элементы.Поиск.СписокВыбора.ЗагрузитьЗначения(ПоискСписокВыбора);
	КонецЕсли;
	Поиск = "";
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПоискСписокВыбора", Элементы.Поиск.СписокВыбора.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПараметрыОбработкиОповещения = Новый Структура("ИмяСобытия, Параметр", ИмяСобытия, Параметр);
	ПодключитьОбработчикОжидания("Подключаемый_ВыполнитьОбработкуОповещения", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСсылкаПриИзменении(Элемент)
	Элементы.КоманднаяПанель.Доступность = Не ПустаяСтрока(Элемент.ВыделенныйТекст);
	
	Если РезультатПолученияНастроек() = "НетПользователяИБ" Тогда
		ТекстСообщения = НСтр("ru = 'У выбранного пользователя ""%1"" не указан
			|пользователь информационной базы, просмотреть его настройки невозможно.
			|Устранить проблему можно в карточке данного пользователя.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ПользовательСсылка);
		ПоказатьПредупреждение(, ТекстСообщения);
		ПользовательСсылка = ТекущийПользовательСсылка;
		Возврат;
	КонецЕсли;
	
	РазвернутьДеревоЗначений();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ВыбраннаяСтраницаНастроек = ТекущаяСтраница.Имя;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Поиск) Тогда
		СписокВыбора = Элементы.Поиск.СписокВыбора;
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(Поиск);
		Если ЭлементСписка = Неопределено Тогда
			СписокВыбора.Вставить(0, Поиск);
			Если СписокВыбора.Количество() > 10 Тогда
				СписокВыбора.Удалить(10);
			КонецЕсли;
		Иначе
			Индекс = СписокВыбора.Индекс(ЭлементСписка);
			Если Индекс <> 0 Тогда
				СписокВыбора.Сдвинуть(Индекс, -Индекс);
			КонецЕсли;
		КонецЕсли;
		ТекущийЭлемент = Элементы.Поиск;
	КонецЕсли;
	
	ЗаполнитьСпискиНастроек();
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура("РежимВыбора", Истина);
	
	Если ИспользоватьВнешнихПользователей Тогда
		ВыборТипаПользователей = Новый СписокЗначений;
		ВыборТипаПользователей.Добавить("ВнешниеПользователи", НСтр("ru = 'Внешние пользователи'"));
		ВыборТипаПользователей.Добавить("Пользователи", НСтр("ru = 'Пользователи'"));
		
		Оповещение = Новый ОписаниеОповещения("ПользовательСсылкаНачалоВыбораЗавершение", ЭтотОбъект, ПараметрыОтбора);
		ВыборТипаПользователей.ПоказатьВыборЭлемента(Оповещение);
	Иначе
		ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательСсылкаНачалоВыбораЗавершение(ВыбранныйВариант, ПараметрыОтбора) Экспорт
	
	Если ВыбранныйВариант = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныйВариант.Значение = "Пользователи" Тогда
		ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
	ИначеЕсли ВыбранныйВариант.Значение = "ВнешниеПользователи" Тогда
		ОткрытьФорму("Справочник.ВнешниеПользователи.Форма.ФормаСписка", ПараметрыОтбора, Элементы.ПользовательСсылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетовИВнешнийВидПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СкопироватьНастройки();
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ТекстВопроса = НСтр("ru = 'Очистить выбранные настройки?'");
	Оповещение = Новый ОписаниеОповещения("НастройкиПередУдалениемЗавершение", ЭтотОбъект, Элемент);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПользователиСлужебныйКлиент.ОткрытьОтчетИлиФорму(
		ТекущийЭлемент, ПользовательИнформационнойБазы, ТекущийПользовательИнформационнойБазы, ИмяФормыПерсональныхНастроек);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьСпискиНастроек();
	РазвернутьДеревоЗначений();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьДругим(Команда)
	
	СкопироватьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьВсеНастройки(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	КопируемыеНастройки.Добавить("ДанныеФорм", НСтр("ru='Данные форм'"));
	КопируемыеНастройки.Добавить("ПерсональныеНастройки", НСтр("ru='Персональные настройки'"));
	КопируемыеНастройки.Добавить("Избранное", НСтр("ru='Избранное'"));
	КопируемыеНастройки.Добавить("НастройкиПечати", НСтр("ru='Настройки печати'"));
	КопируемыеНастройки.Добавить(
		"ПрочиеПользовательскиеНастройки", НСтр("ru='Настройки дополнительных отчетов и обработок'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия", 
										ПользовательСсылка, ТипПользователя, "КопироватьВсе");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиОтчетов(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия", 
										ПользовательСсылка, ТипПользователя, "КопироватьВсе");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиВнешнегоВида(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия", 
										ПользовательСсылка, ТипПользователя, "КопироватьВсе");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиОтчетовИВнешнегоВида(Команда)
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	КопируемыеНастройки.Очистить();
	КопируемыеНастройки.Добавить("НастройкиОтчетов", НСтр("ru='Настройки отчетов'"));
	КопируемыеНастройки.Добавить("НастройкиВнешнегоВида", НСтр("ru='Настройки внешнего вида'"));
	
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия", 
										ПользовательСсылка, ТипПользователя, "КопироватьВсе");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'Необходимо выбрать настройки, которые требуется удалить.'"));
		Возврат;
		
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьЗавершение", ЭтотОбъект, ДеревоНастроек);
	ТекстВопроса = НСтр("ru = 'Очистить выделенные настройки?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВыбраннымПользователям(Команда)
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'Необходимо выбрать настройки, которые требуется удалить.'"));
		Возврат;
		
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Очистить выделенные настройки?
		|Откроется окно выбора пользователей, которым необходимо очистить настройки.'");
	Оповещение = Новый ОписаниеОповещения("ОчиститьНастройкиВыбраннымПользователямЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеНастройки(Команда)
	
	ТекстВопроса = НСтр("ru = 'Очистить все настройки у пользователя ""%1""?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Строка(ПользовательСсылка));
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить("Очистить", НСтр("ru='Очистить'"));
	КнопкиВопроса.Добавить("Отмена", НСтр("ru='Отмена'"));
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьВсеНастройкиЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиОтчетовИВнешнегоВида(Команда)
	
	ТекстВопроса = НСтр("ru = 'Очистить все настройки отчетов и внешнего вида у пользователя ""%1""?'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Строка(ПользовательСсылка));
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить("Очистить", НСтр("ru='Очистить'"));
	КнопкиВопроса.Добавить("Отмена", НСтр("ru='Отмена'"));
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьНастройкиОтчетовИВнешнегоВидаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройку(Команда)
	
	ПользователиСлужебныйКлиент.ОткрытьОтчетИлиФорму(
		ТекущийЭлемент, ПользовательИнформационнойБазы, ТекущийПользовательИнформационнойБазы, ИмяФормыПерсональныхНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВсехПользователей(Команда)
	
	ТекстВопроса = НСтр("ru = 'Сейчас будут очищены все настройки всех пользователей.
		                      |Продолжить?'");
	КнопкиВопроса = Новый СписокЗначений;
	КнопкиВопроса.Добавить("ОчиститьВсе", НСтр("ru='Очистить все'"));
	КнопкиВопроса.Добавить("Отмена", НСтр("ru='Отмена'"));
	
	Оповещение = Новый ОписаниеОповещения("ОчиститьНастройкиВсехПользователейЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[1].Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьОт(Команда)
	
	ПараметрыФормы = Новый Структура("Пользователь, РежимОткрытияФормы", ПользовательСсылка, "СкопироватьОт");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.КопированиеНастроекПользователей", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для вывода списков настроек.

&НаСервере
Процедура ЗаполнитьСпискиНастроек()
	
	Обработки.НастройкиПользователей.ЗаполнитьСпискиНастроек(ЭтотОбъект);
	РассчитатьКоличествоНастроек();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для расчета количества настроек.

&НаСервере
Процедура РассчитатьКоличествоНастроек()
	
	СписокНастроек = НастройкиОтчетов.ПолучитьЭлементы();
	
	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если КоличествоНастроек <> 0 Тогда
		Элементы.НастройкиОтчетовСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Настройки отчетов (%1)'"), КоличествоНастроек);
	Иначе
		Элементы.НастройкиОтчетовСтраница.Заголовок = НСтр("ru='Настройки отчетов'");
	КонецЕсли;
	
	КоличествоНастроекОтчетов = КоличествоНастроек;
	СписокНастроек = ВнешнийВид.ПолучитьЭлементы();
	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если КоличествоНастроек <> 0 Тогда
		Элементы.ВнешнийВидСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Внешний вид (%1)'"), КоличествоНастроек);
	Иначе
		Элементы.ВнешнийВидСтраница.Заголовок = НСтр("ru='Внешний вид'");
	КонецЕсли;
	
	КоличествоНастроекВнешнегоВида = КоличествоНастроек;
	СписокНастроек = ПрочиеНастройки.ПолучитьЭлементы();
	КоличествоНастроек = КоличествоНастроекВДереве(СписокНастроек);
	
	Если КоличествоНастроек <> 0 Тогда
		Элементы.ПрочиеНастройкиСтраница.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Прочие настройки (%1)'"), КоличествоНастроек);
	Иначе
		Элементы.ПрочиеНастройкиСтраница.Заголовок = НСтр("ru='Прочие настройки'");
	КонецЕсли;
	
	КоличествоПрочихНастроек = КоличествоНастроек;
	ВсегоНастроек = КоличествоПрочихНастроек + КоличествоНастроекОтчетов;
	
КонецПроцедуры

&НаСервере
Функция КоличествоНастроекВДереве(СписокНастроек)
	
	КоличествоНастроек = 0;
	Для Каждого Настройка Из СписокНастроек Цикл
		
		КоличествоПодчиненныхНастроек = Настройка.ПолучитьЭлементы().Количество();
		Если КоличествоПодчиненныхНастроек = 0 Тогда
			КоличествоНастроек = КоличествоНастроек + 1;
		Иначе
			КоличествоНастроек = КоличествоНастроек + КоличествоПодчиненныхНастроек;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоличествоНастроек;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции, отвечающие за копирование, удаление и очистку настроек.

&НаСервере
Процедура СкопироватьНаСервере(ПользователиПриемник, ЛичныхНастроекОтчетов, Отчет)
	
	Результат = ВыделенныеНастройки();
	ТаблицаВыделенныхВариантовОтчетов = Новый ТаблицаЗначений;
	ТаблицаВыделенныхВариантовОтчетов.Колонки.Добавить("Представление");
	ТаблицаВыделенныхВариантовОтчетов.Колонки.Добавить("СтандартнаяОбработка");
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		
		Для Каждого Настройка Из Результат.МассивНастроек Цикл
			
			Для Каждого Элемент Из Настройка Цикл
				
				Если Элемент.Пометка Тогда
					ЛичныхНастроекОтчетов = ЛичныхНастроекОтчетов + 1;
					КлючОтчета = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Элемент.Значение, "/");
					ПараметрОтбора = Новый Структура("КлючОбъекта", КлючОтчета[0]);
					МассивСтрок = ТаблицаПользовательскихВариантовОтчетов.НайтиСтроки(ПараметрОтбора);
					Если МассивСтрок.Количество() <> 0 Тогда
						СтрокаТаблицы = ТаблицаВыделенныхВариантовОтчетов.Добавить();
						СтрокаТаблицы.Представление = МассивСтрок[0].Представление;
						СтрокаТаблицы.СтандартнаяОбработка = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		НеСкопированныеНастройкиОтчетов = Новый ТаблицаЗначений;
		НеСкопированныеНастройкиОтчетов.Колонки.Добавить("Пользователь");
		НеСкопированныеНастройкиОтчетов.Колонки.Добавить("СписокОтчетов", Новый ОписаниеТипов("СписокЗначений"));
		
		Обработки.НастройкиПользователей.СкопироватьНастройкиОтчетовИПерсональныеНастройки(ХранилищеПользовательскихНастроекОтчетов,
			ПользовательИнформационнойБазы, ПользователиПриемник, Результат.МассивНастроек, НеСкопированныеНастройкиОтчетов);
		// Копирование вариантов отчетов.
		Обработки.НастройкиПользователей.СкопироватьВариантыОтчетов(Результат.МассивВариантовОтчетов,
			ТаблицаПользовательскихВариантовОтчетов, ПользовательИнформационнойБазы, ПользователиПриемник);
			
		Если НеСкопированныеНастройкиОтчетов.Количество() <> 0
			Или ТаблицаПользовательскихВариантовОтчетов.Количество() <> 0 Тогда
			Отчет = Обработки.НастройкиПользователей.ФормированиеОтчетаОКопировании(
				НеСкопированныеНастройкиОтчетов, ТаблицаВыделенныхВариантовОтчетов);
		КонецЕсли;
		
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Обработки.НастройкиПользователей.СкопироватьНастройкиВнешнегоВида(ПользовательИнформационнойБазы, ПользователиПриемник, Результат.МассивНастроек);
	Иначе
		
		Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
			Обработки.НастройкиПользователей.СкопироватьНастройкиОтчетовИПерсональныеНастройки(ХранилищеОбщихНастроек,
				ПользовательИнформационнойБазы, ПользователиПриемник, Результат.МассивПерсональныхНастроек);
		КонецЕсли;
			
		Если Результат.МассивПользовательскихНастроек.Количество() <> 0 Тогда
			Для Каждого ПрочиеПользовательскиеНастройки Из Результат.МассивПользовательскихНастроек Цикл
				Для Каждого ПользовательПриемник Из ПользователиПриемник Цикл
					СведенияОПользователе = Новый Структура;
					СведенияОПользователе.Вставить("ПользовательСсылка", ПользовательПриемник);
					СведенияОПользователе.Вставить("ИмяПользователяИнформационнойБазы",
						Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательПриемник));
					
					ПользователиСлужебный.ПриСохраненииПрочихНастроек(
						СведенияОПользователе, ПрочиеПользовательскиеНастройки);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Обработки.НастройкиПользователей.СкопироватьНастройкиВнешнегоВида(
			ПользовательИнформационнойБазы, ПользователиПриемник, Результат.МассивНастроек);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СкопироватьВсеНастройкиНаСервере(Пользователь, ПользователиПриемник, МассивНастроек, Отчет)
	
	НеСкопированныеНастройкиОтчетов = Новый ТаблицаЗначений;
	НеСкопированныеНастройкиОтчетов.Колонки.Добавить("Пользователь");
	НеСкопированныеНастройкиОтчетов.Колонки.Добавить("СписокОтчетов", Новый ОписаниеТипов("СписокЗначений"));
	Обработки.НастройкиПользователей.КопированиеНастроекПользователей(
		ПользовательСсылка, ПользователиПриемник, МассивНастроек, НеСкопированныеНастройкиОтчетов);
		
	Если НеСкопированныеНастройкиОтчетов.Количество() <> 0
		Или ТаблицаПользовательскихВариантовОтчетов.Количество() <> 0 Тогда
		Отчет = Обработки.НастройкиПользователей.ФормированиеОтчетаОКопировании(
			НеСкопированныеНастройкиОтчетов, ТаблицаПользовательскихВариантовОтчетов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере(Пользователи = Неопределено, ВыбраннымПользователям = Ложь)
	
	Результат = ВыделенныеНастройки();
	НазваниеХранилища = ХранилищеНастроекДляВыбраннойСтраницы();
	
	Если ВыбраннымПользователям Тогда
		
		Обработки.НастройкиПользователей.УдалитьНастройкиВыбраннымПользователям(Пользователи, Результат.МассивНастроек, НазваниеХранилища);
		Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
			Обработки.НастройкиПользователей.УдалитьНастройкиВыбраннымПользователям(Пользователи,
				Результат.МассивПерсональныхНастроек, "ХранилищеОбщихНастроек");
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	// Очистка настроек
	СведенияОПользователе = Новый Структура;
	СведенияОПользователе.Вставить("ИмяПользователяИнформационнойБазы", ПользовательИнформационнойБазы);
	СведенияОПользователе.Вставить("ПользовательСсылка", ПользовательСсылка);
	
	Обработки.НастройкиПользователей.УдалитьВыбранныеНастройки(СведенияОПользователе, Результат.МассивНастроек, НазваниеХранилища);
	Если Результат.МассивПерсональныхНастроек.Количество() <> 0 Тогда
		Обработки.НастройкиПользователей.УдалитьВыбранныеНастройки(
			СведенияОПользователе, Результат.МассивПерсональныхНастроек, "ХранилищеОбщихНастроек");
	КонецЕсли;
	
	Если Результат.МассивПользовательскихНастроек.Количество() <> 0 Тогда
		Для Каждого ПрочиеПользовательскиеНастройки Из Результат.МассивПользовательскихНастроек Цикл
			ПользователиСлужебный.ПриУдаленииПрочихНастроек(
				СведенияОПользователе, ПрочиеПользовательскиеНастройки);
		КонецЦикла;
	КонецЕсли;
	
	// Очистка вариантов отчетов
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		
		Обработки.НастройкиПользователей.УдалитьВариантыОтчетов(
			Результат.МассивВариантовОтчетов, ТаблицаПользовательскихВариантовОтчетов, ПользовательИнформационнойБазы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки)
	
	МассивПользователей = Новый Массив;
	МассивПользователей.Добавить(ПользовательСсылка);
	Обработки.НастройкиПользователей.УдалитьНастройкиПользователей(
		ОчищаемыеНастройки, МассивПользователей, ТаблицаПользовательскихВариантовОтчетов);
	
	ЗаполнитьСпискиНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНастройкиВсехПользователейНаСервере()
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ПерсональныеНастройки");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	ОчищаемыеНастройки.Добавить("Избранное");
	ОчищаемыеНастройки.Добавить("НастройкиПечати");
	
	МассивПользователей = Новый Массив;
	ТаблицаПользователей = Новый ТаблицаЗначений;
	ТаблицаПользователей.Колонки.Добавить("Пользователь");
	ТаблицаПользователей = Обработки.НастройкиПользователей.ПользователиДляКопирования("", ТаблицаПользователей, ИспользоватьВнешнихПользователей);
	
	Для Каждого СтрокаТаблицы Из ТаблицаПользователей Цикл
		МассивПользователей.Добавить(СтрокаТаблицы.Пользователь);
	КонецЦикла;
	
	Обработки.НастройкиПользователей.УдалитьНастройкиПользователей(ОчищаемыеНастройки, МассивПользователей, ТаблицаПользовательскихВариантовОтчетов);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки)
	
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		
		Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
			УдалитьСтрокуНастроек(НастройкиОтчетов, ВыделеннаяСтрока);
		ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
			УдалитьСтрокуНастроек(ВнешнийВид, ВыделеннаяСтрока);
		Иначе
			УдалитьСтрокуНастроек(ПрочиеНастройки, ВыделеннаяСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	РассчитатьКоличествоНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗавершение(Ответ, ДеревоНастроек) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
	
	ОчиститьНаСервере();
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
	Если КоличествоНастроек = 1 Тогда
		
		НазваниеНастройки = ДеревоНастроек.ТекущиеДанные.Настройка;
		Если СтрДлина(НазваниеНастройки) > 24 Тогда
			НазваниеНастройки = Лев(НазваниеНастройки, 24) + "...";
		КонецЕсли;
		
	КонецЕсли;
	
	УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки);
	
	ОповеститьОбУдалении(КоличествоНастроек, НазваниеНастройки);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции.

&НаКлиенте
Процедура Подключаемый_ВыполнитьОбработкуОповещения()
	
	ИмяСобытия = ПараметрыОбработкиОповещения.ИмяСобытия;
	Параметр   = ПараметрыОбработкиОповещения.Параметр;
	
	Если ВРег(ИмяСобытия) = ВРег("ВыборПользователя") Тогда
		
		ПользователиПриемник = Параметр.ПользователиПриемник;
		КоличествоПользователей = ПользователиПриемник.Количество();
		
		ПояснениеКомуСкопированыНастройки = ПользователиСлужебныйКлиент.ПояснениеПользователи(
			КоличествоПользователей, ПользователиПриемник[0]);
		
		Если Параметр.КопироватьВсе Тогда
			
			МассивНастроек = Новый Массив;
			ИменаНастроек = "";
			Для Каждого Настройка Из КопируемыеНастройки Цикл 
				
				ИменаНастроек = ИменаНастроек + НРег(Настройка.Представление) + ", ";
				МассивНастроек.Добавить(Настройка.Значение);
				
			КонецЦикла;
				
			ИменаНастроек = Лев(ИменаНастроек, СтрДлина(ИменаНастроек)-2);
			
			Если МассивНастроек.Количество() = 7 Тогда
				ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Скопированы все настройки %1'"), ПояснениеКомуСкопированыНастройки);
			Иначе
				ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 скопированы %2'"), ИменаНастроек, ПояснениеКомуСкопированыНастройки);
			КонецЕсли;
				
			Состояние(НСтр("ru = 'Выполняется копирование настроек'"));
			
			Отчет = Неопределено;
			СкопироватьВсеНастройкиНаСервере(ПользовательИнформационнойБазы, ПользователиПриемник, МассивНастроек, Отчет);
			
			Если Отчет <> Неопределено Тогда
				ТекстВопроса = НСтр("ru = 'Не все варианты отчетов и настройки были скопированы.'");
				КнопкиВопроса = Новый СписокЗначений;
				КнопкиВопроса.Добавить("Ок", НСтр("ru='ОК'"));
				КнопкиВопроса.Добавить("ПоказатьОтчет", НСтр("ru='Показать отчет'"));
				
				Оповещение = Новый ОписаниеОповещения("ОбработкаОповещенияПоказатьВопрос", ЭтотОбъект, Отчет);
				ПоказатьВопрос(Оповещение, ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[0].Значение);
				
				Возврат;
			КонецЕсли;
				
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Копирование настроек'"), , ТекстПояснения, БиблиотекаКартинок.Информация32);
			
			Возврат;
		КонецЕсли;
		
		Если Параметр.ОчисткаНастроек Тогда
			
			ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
			КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
			
			ОчиститьНаСервере(ПользователиПриемник, Истина);
			
			Если КоличествоНастроек = 1 Тогда
				
				НазваниеНастройки = ДеревоНастроек.ТекущиеДанные.Настройка;
				Если СтрДлина(НазваниеНастройки) > 24 Тогда
					НазваниеНастройки = Лев(НазваниеНастройки, 24) + "...";
				КонецЕсли;
				
			КонецЕсли;
			
			КоличествоПользователей = Параметр.ПользователиПриемник.Количество();
			ОповеститьОбУдалении(КоличествоНастроек, НазваниеНастройки, КоличествоПользователей);
			
			Возврат;
		КонецЕсли;
		
		ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
		КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек);
		
		ЛичныхНастроекОтчетов = 0;
		Отчет = Неопределено;
		СкопироватьНаСервере(ПользователиПриемник, ЛичныхНастроекОтчетов, Отчет);
		
		Если Отчет <> Неопределено Тогда
			ТекстВопроса = НСтр("ru = 'Не все варианты отчетов и настройки были скопированы.'");
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить("Ок", НСтр("ru='ОК'"));
			КнопкиВопроса.Добавить("ПоказатьОтчет", НСтр("ru='Показать отчет'"));
			
			Оповещение = Новый ОписаниеОповещения("ОбработкаОповещенияПоказатьВопрос", ЭтотОбъект, Отчет);
			ПоказатьВопрос(Оповещение, ТекстВопроса, КнопкиВопроса,, КнопкиВопроса[0].Значение);
			
			Возврат;
		Иначе
			
			Если КоличествоНастроек = 1 Тогда
				ПредставлениеНастройки = ДеревоНастроек.ТекущиеДанные.Настройка;
			КонецЕсли;
			
			ТекстПояснения = ПользователиСлужебныйКлиент.ФормированиеПоясненияПриКопировании(
				ПредставлениеНастройки, КоличествоНастроек, ПояснениеКомуСкопированыНастройки);
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Копирование настроек'"), , ТекстПояснения, БиблиотекаКартинок.Информация32);
			
		КонецЕсли;
		
	ИначеЕсли ВРег(ИмяСобытия) = ВРег("СкопированыНастройки") Тогда
		ЗаполнитьСпискиНастроек();
		РазвернутьДеревоЗначений();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВыбраннымПользователямЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия",
		ПользовательСсылка, ТипПользователя, "Очистка");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиВсехПользователейЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьНастройкиВсехПользователейНаСервере();
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), ,
		НСтр("ru='Очищены все настройки всех пользователя'"), БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеНастройкиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	ОчищаемыеНастройки.Добавить("ПерсональныеНастройки");
	ОчищаемыеНастройки.Добавить("Избранное");
	ОчищаемыеНастройки.Добавить("НастройкиПечати");
	ОчищаемыеНастройки.Добавить("ПрочиеПользовательскиеНастройки");
	
	ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки);
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
	ТекстПояснения = НСтр("ru = 'Очищены все настройки пользователя ""%1""'");
	ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, ПользовательСсылка);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиОтчетовИВнешнегоВидаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	ОчищаемыеНастройки = Новый Массив;
	ОчищаемыеНастройки.Добавить("НастройкиОтчетов");
	ОчищаемыеНастройки.Добавить("НастройкиВнешнегоВида");
	ОчищаемыеНастройки.Добавить("ДанныеФорм");
	
	ОчиститьВсеНастройкиНаСервере(ОчищаемыеНастройки);
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
	ТекстПояснения = НСтр("ru = 'Очищены все настройки отчетов и внешнего вида у пользователя ""%1""'");
	ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, Строка(ПользовательСсылка));
	ПоказатьОповещениеПользователя(НСтр("ru = 'Очистка настроек'"), , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПередУдалениемЗавершение(Ответ, Элемент) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьНаСервере();
	ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	
	ВыделенныеСтроки = Элемент.ВыделенныеСтроки;
	КоличествоНастроек = КоличествоСкопированныхИлиУдаленныхНастроек(Элемент);
	
	Если КоличествоНастроек = 1 Тогда
		
		ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
		НазваниеНастройки = ДеревоНастроек.ТекущиеДанные.Настройка;
		
		Если СтрДлина(НазваниеНастройки) > 24 Тогда
			НазваниеНастройки = Лев(НазваниеНастройки, 24) + "...";
		КонецЕсли;
		
	КонецЕсли;
	
	УдалитьНастройкиИЗДереваЗначений(ВыделенныеСтроки);
	
	ОповеститьОбУдалении(КоличествоНастроек, НазваниеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещенияПоказатьВопрос(Ответ, Отчет) Экспорт
	
	Если Ответ = "Ок" Тогда
		Возврат;
	Иначе
		Отчет.ОтображатьГруппировки = Истина;
		Отчет.ОтображатьСетку = Ложь;
		Отчет.ОтображатьЗаголовки = Ложь;
		Отчет.Показать();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоЗначений()
	
	Строки = НастройкиОтчетов.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Элементы.НастройкиОтчетовДерево.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	Строки = ВнешнийВид.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Элементы.ВнешнийВид.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ТаблицаФормыВыбраннойСтраницыНастроек()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат Элементы.НастройкиОтчетовДерево;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат Элементы.ВнешнийВид;
	Иначе
		Возврат Элементы.ПрочиеНастройки;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция КоличествоСкопированныхИлиУдаленныхНастроек(ДеревоНастроек)
	
	ВыделенныеСтроки = ДеревоНастроек.ВыделенныеСтроки;
	// Переносим массив выделенных строк в список значений, чтобы отсортировать выбранные строки.
	СписокВыделенныхСтрок = Новый СписокЗначений;
	Для Каждого Элемент Из ВыделенныеСтроки Цикл
		СписокВыделенныхСтрок.Добавить(Элемент);
	КонецЦикла;
	
	СписокВыделенныхСтрок.СортироватьПоЗначению();
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		ТекущееДеревоЗначений = НастройкиОтчетов;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		ТекущееДеревоЗначений = ВнешнийВид;
	Иначе
		ТекущееДеревоЗначений = ПрочиеНастройки;
	КонецЕсли;
	
	КоличествоНастроек = 0;
	Для Каждого ВыделеннаяСтрока Из СписокВыделенныхСтрок Цикл
		ЭлементДерева = ТекущееДеревоЗначений.НайтиПоИдентификатору(ВыделеннаяСтрока.Значение);
		КоличествоПодчиненныхЭлементов = ЭлементДерева.ПолучитьЭлементы().Количество();
		РодительЭлемента = ЭлементДерева.ПолучитьРодителя();
		
		Если КоличествоПодчиненныхЭлементов <> 0 Тогда
			КоличествоНастроек = КоличествоНастроек + КоличествоПодчиненныхЭлементов;
			ЭлементВерхнегоУровня = ЭлементДерева;
		ИначеЕсли КоличествоПодчиненныхЭлементов = 0
			И РодительЭлемента = Неопределено Тогда
			КоличествоНастроек = КоличествоНастроек + 1;
		Иначе
			
			Если РодительЭлемента <> ЭлементВерхнегоУровня Тогда
				КоличествоНастроек = КоличествоНастроек + 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоличествоНастроек;
КонецФункции

&НаКлиенте
Процедура УдалитьСтрокуНастроек(ДеревоНастроек, ВыделеннаяСтрока)
	
	ЭлементНастроек = ДеревоНастроек.НайтиПоИдентификатору(ВыделеннаяСтрока);
	Если ЭлементНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РодительЭлементаНастроек = ЭлементНастроек.ПолучитьРодителя();
	Если РодительЭлементаНастроек <> Неопределено Тогда
		
		КоличествоПодчиненныхСтрок = РодительЭлементаНастроек.ПолучитьЭлементы().Количество();
		Если КоличествоПодчиненныхСтрок = 1 Тогда
			
			Если РодительЭлементаНастроек.Тип <> "ВариантЛичный" Тогда
				ДеревоНастроек.ПолучитьЭлементы().Удалить(РодительЭлементаНастроек);
			КонецЕсли;
			
		Иначе
			РодительЭлементаНастроек.ПолучитьЭлементы().Удалить(ЭлементНастроек);
		КонецЕсли;
		
	Иначе
		ДеревоНастроек.ПолучитьЭлементы().Удалить(ЭлементНастроек);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбУдалении(КоличествоНастроек, НазваниеНастройки = Неопределено, КоличествоПользователей = Неопределено)
	
	ПрописьПредмета = Формат(КоличествоНастроек, "ЧДЦ=0") + " "
		+ ПользователиСлужебныйКлиентСервер.ПредметЦелогоЧисла(КоличествоНастроек,
			"Л = ru_RU", НСтр("ru = 'настройка,настройки,настроек,,,,,,0'"));
	
	Если КоличествоНастроек = 1
		И КоличествоПользователей = Неопределено Тогда
		ТекстПояснения = НСтр("ru = '""%1"" очищена пользователю ""%2""'");
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, НазваниеНастройки, Строка(ПользовательСсылка));
	ИначеЕсли КоличествоПользователей = Неопределено Тогда
		ТекстПояснения = НСтр("ru = 'Очищено %1 пользователю ""%2""'");
		ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, ПрописьПредмета, Строка(ПользовательСсылка));
	КонецЕсли;
	
	ПояснениеКомуОчищатьНастройки = ПользователиСлужебныйКлиент.ПояснениеПользователи(
		КоличествоПользователей, Строка(ПользовательСсылка));
	
	Если КоличествоПользователей <> Неопределено Тогда
		
		Если КоличествоНастроек = 1 Тогда
			ТекстПояснения = НСтр("ru = '""%1"" очищена %2'");
			ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, НазваниеНастройки, ПояснениеКомуОчищатьНастройки);
		Иначе
			ТекстПояснения = НСтр("ru = 'Очищено %1 %2'");
			ТекстПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПояснения, ПрописьПредмета, ПояснениеКомуОчищатьНастройки);
		КонецЕсли;
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Очистка настроек'"), , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройки()
	
	ДеревоНастроек = ТаблицаФормыВыбраннойСтраницыНастроек();
	Если ДеревоНастроек.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Необходимо выбрать настройки, которые требуется скопировать.'"));
		Возврат;
	ИначеЕсли ДеревоНастроек.ВыделенныеСтроки.Количество() = 1 Тогда
		
		Если ДеревоНастроек.ТекущиеДанные.Тип = "ВариантЛичный" Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Невозможно скопировать личный вариант отчета.
			|Для того чтобы личный вариант отчета стал доступен другим пользователям, необходимо
			|его пересохранить со снятой пометкой ""Только для автора"".'"));
			Возврат;
		ИначеЕсли ДеревоНастроек.ТекущиеДанные.Тип = "НастройкаЛичная" Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Невозможно скопировать настройку личного варианта отчета.
			|Копирование настроек личных вариантов отчетов не предусмотрено.'"));
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТипПользователя = ТипЗнч(ПользовательСсылка);
	ПараметрыФормы = Новый Структура("Пользователь, ТипПользователя, ТипДействия", 
										ПользовательСсылка, ТипПользователя, "");
	ОткрытьФорму("Обработка.НастройкиПользователей.Форма.ВыборПользователей", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Функция РезультатПолученияНастроек()
	
	Если Не ЗначениеЗаполнено(ПользовательСсылка) Тогда
		ПользовательСсылка = Справочники.Пользователи.ПустаяСсылка();
		ПользовательИнформационнойБазы = "";
	Иначе
		ПользовательИнформационнойБазы = Обработки.НастройкиПользователей.ИмяПользователяИБ(ПользовательСсылка);
	КонецЕсли;
	
	Если ПользовательИнформационнойБазы = "" Тогда
		Возврат "НетПользователяИБ";
	КонецЕсли;
	
	ЗаполнитьСпискиНастроек();
	
	Возврат "Успешно";
	
КонецФункции

&НаСервере
Функция ДеревоНастроекДляВыбраннойСтраницы()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат НастройкиОтчетов;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат ВнешнийВид;
	Иначе
		Возврат ПрочиеНастройки;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ХранилищеНастроекДляВыбраннойСтраницы()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат "ХранилищеПользовательскихНастроекОтчетов";
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница"
		Или ВыбраннаяСтраницаНастроек = "ПрочиеНастройкиСтраница" Тогда
		Возврат "ХранилищеСистемныхНастроек";
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ВыделенныеЭлементыНастроек()
	
	Если ВыбраннаяСтраницаНастроек = "НастройкиОтчетовСтраница" Тогда
		Возврат Элементы.НастройкиОтчетовДерево.ВыделенныеСтроки;
	ИначеЕсли ВыбраннаяСтраницаНастроек = "ВнешнийВидСтраница" Тогда
		Возврат Элементы.ВнешнийВид.ВыделенныеСтроки;
	Иначе
		Возврат Элементы.ПрочиеНастройки.ВыделенныеСтроки;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ВыделенныеНастройки()
	
	ДеревоНастроек = ДеревоНастроекДляВыбраннойСтраницы();
	МассивНастроек = Новый Массив;
	МассивПерсональныхНастроек = Новый Массив;
	МассивВариантовОтчетов = Новый Массив;
	МассивПользовательскихНастроек = Новый Массив;
	ТекущийВариантОтчета = Неопределено;
	
	ВыделенныеЭлементы = ВыделенныеЭлементыНастроек();
	
	Для Каждого ВыделенныйЭлемент Из ВыделенныеЭлементы Цикл
		ВыделеннаяНастройка = ДеревоНастроек.НайтиПоИдентификатору(ВыделенныйЭлемент);
		
		// Заполнение массива персональных настроек.
		Если ВыделеннаяНастройка.Тип = "ПерсональныеНастройки" Тогда
			МассивПерсональныхНастроек.Добавить(ВыделеннаяНастройка.Ключи);
			Продолжить;
		КонецЕсли;
		
		// Заполнение массива прочих пользовательских настроек.
		Если ВыделеннаяНастройка.Тип = "ПрочаяПользовательскаяНастройка" Тогда
			ПрочиеПользовательскиеНастройки = Новый Структура;
			ПрочиеПользовательскиеНастройки.Вставить("ИдентификаторНастройки", ВыделеннаяНастройка.ТипСтроки);
			ПрочиеПользовательскиеНастройки.Вставить("ЗначениеНастройки", ВыделеннаяНастройка.Ключи);
			МассивПользовательскихНастроек.Добавить(ПрочиеПользовательскиеНастройки);
			Продолжить;
		КонецЕсли;
		
		// Для личных настроек проставляем в списке ключей пометку об этом.
		Если ВыделеннаяНастройка.Тип = "ВариантЛичный" Тогда
			
			Для Каждого Элемент Из ВыделеннаяНастройка.Ключи Цикл
				Элемент.Пометка = Истина;
			КонецЦикла;
			ТекущийВариантОтчета = ВыделеннаяНастройка.Ключи.Скопировать();
			// Заполнение массива личных вариантов отчетов.
			МассивВариантовОтчетов.Добавить(ВыделеннаяНастройка.Ключи);
			
		ИначеЕсли ВыделеннаяНастройка.Тип = "СтандартныйВариантЛичный" Тогда
			МассивВариантовОтчетов.Добавить(ВыделеннаяНастройка.Ключи);
		КонецЕсли;
		
		Если ВыделеннаяНастройка.Тип = "НастройкаЛичная" Тогда
			
			Если ТекущийВариантОтчета <> Неопределено
				И ТекущийВариантОтчета.НайтиПоЗначению(ВыделеннаяНастройка.Ключи[0].Значение) <> Неопределено Тогда
				Продолжить;
			Иначе
				ВыделеннаяНастройка.Ключи[0].Пометка = Истина;
				МассивНастроек.Добавить(ВыделеннаяНастройка.Ключи);
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		МассивНастроек.Добавить(ВыделеннаяНастройка.Ключи);
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("МассивНастроек", МассивНастроек);
	Результат.Вставить("МассивПерсональныхНастроек", МассивПерсональныхНастроек);
	Результат.Вставить("МассивВариантовОтчетов", МассивВариантовОтчетов);
	Результат.Вставить("МассивПользовательскихНастроек", МассивПользовательскихНастроек);
	
	Возврат Результат;
КонецФункции

#КонецОбласти
