
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		Элементы.История.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ВидКонтактнойИнформации = Параметры.ВидКонтактнойИнформации;
	ТипКонтактнойИнформации = Параметры.ВидКонтактнойИнформации.Тип;
	ПроверятьКорректность = ВидКонтактнойИнформации.ПроверятьКорректность;
	ПредставлениеКонтактнойИнформации = Параметры.ВидКонтактнойИнформации.Наименование;
	
	Если ТипЗнч(Параметры.СписокКонтактнойИнформации) = Тип("Массив") Тогда
		Для каждого СтрокаКонтактнойИнформации Из Параметры.СписокКонтактнойИнформации Цикл
			СтрокаТаблицы = История.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаКонтактнойИнформации);
			СтрокаТаблицы.Тип = ТипКонтактнойИнформации;
			СтрокаТаблицы.Вид = ВидКонтактнойИнформации;
		КонецЦикла;
		ЭтотОбъект.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'История изменений (%1)'"), ПредставлениеКонтактнойИнформации);
		Элементы.ИсторияПредставление.Заголовок = ПредставлениеКонтактнойИнформации;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		ИмяФормыРедактирования = "ВводаАдреса";
	ИначеЕсли ВидКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		ИмяФормыРедактирования = "ВводаТелефона";
	Иначе
		ИмяФормыРедактирования = "";
		Элементы.ИсторияПредставление.КнопкаВыбора = Ложь;
	КонецЕсли;
	
	История.Сортировать("ДействуетС Убыв");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Не ЗакрытиеФормыБезСохранения Тогда
		СтандартнаяОбработка = Ложь;
		Если КонтактнаяИнформациюПодготовлена() Тогда
			Закрыть(История);
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсторияПредставлениеПриИзменении(Элемент)
	ЭтотОбъект.ТекущийЭлемент.ТекущиеДанные.ЗначенияПолей = КонтактнаяИнформацияXMLПоПредставлению(Элемент.ТекстРедактирования, ВидКонтактнойИнформации);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуРедактированияАдреса(Знач ВыбраннаяСтрока)
	
		ДанныеСтроки = История.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВидКонтактнойИнформации);
		ПараметрыОткрытия.Вставить("ЗначенияПолей", ДанныеСтроки.ЗначенияПолей);
		ПараметрыОткрытия.Вставить("Представление", ДанныеСтроки.Представление);
		ПараметрыОткрытия.Вставить("ДействуетС", ДанныеСтроки.ДействуетС);
		ПараметрыОткрытия.Вставить("ДействуетДо", ОпределитьДатуДействия(ДанныеСтроки.ДействуетС));
		
		ДополнительныеПараметры = Новый Структура("ДействуетС, Новый", ДанныеСтроки.ДействуетС, НЕ ЗначениеЗаполнено(ДанныеСтроки.ЗначенияПолей));
		Оповещение = Новый ОписаниеОповещения("ПослеРедактированияАдреса", ЭтотОбъект, ДополнительныеПараметры);
		
		УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьДатуДействия(ДействуетС)
	
	ДействуетДо = Неопределено;
	Минимум = -1;
	Для каждого СтрокаИстория Из История Цикл
		Дельта = СтрокаИстория.ДействуетС - ДействуетС;
		Если Минимум = -1 Тогда
			Минимум = Дельта + 1;
		КонецЕсли;
		Если Дельта > 0 И Дельта < Минимум Тогда
			ДействуетДо = СтрокаИстория.ДействуетС;
			Минимум = Дельта;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДействуетДо;
КонецФункции

&НаКлиенте
Процедура ИсторияПередУдалением(Элемент, Отказ)
	// Если есть хотя бы одна запись старше удаляемой, то удалять можно 
	ДействуетС = Элемент.ТекущиеДанные.ДействуетС;
	Если ЭтоПерваяДата(ДействуетС) Тогда
		Отказ = Истина;
	КонецЕсли;
	Если НЕ Отказ Тогда
		ДополнительныеПараметры = Новый Структура("ИдентификаторСтроки", Элемент.ТекущаяСтрока);
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопросПроУдаление", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Вы хотите удалить адрес действующий с'") + " " + Формат(ДействуетС, "ДЛФ=DD")+ "?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросПроУдаление(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		История.Удалить(История.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	Строка = История.Вставить(0);
	Строка.ДействуетС = ОбщегоНазначенияКлиент.ДатаСеанса();
	Строка.ЗначенияПолей = "";
	Строка.Вид = ВидКонтактнойИнформации;
	Строка.Тип = ТипКонтактнойИнформации;
	Элементы.История.ТекущаяСтрока = 0;
	Элементы.История.ТекущийЭлемент = Элементы.История.ПодчиненныеЭлементы.ИсторияПредставление;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "ИсторияДействуетС" Тогда
		Если ЭтоПерваяДата(Элемент.ТекущиеДанные.ДействуетС) Тогда
			Отказ = Истина;
		КонецЕсли;
		ПредыдущаяДата = Элемент.ТекущиеДанные.ДействуетС;
		
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ИсторияПредставление" Тогда
		Если ИмяФормыРедактирования = "ВводАдреса" Тогда
			ОткрытьФормуРедактированияАдреса(Элементы.История.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПриИзменении(Элемент)
	
	Если Элемент.ТекущийЭлемент.Имя = "ИсторияДействуетС" Тогда
		ЭтотОбъект.ТекущийЭлемент.ТекущиеДанные.ДействуетС = ДопустимаяДатаИстории(ПредыдущаяДата, ЭтотОбъект.ТекущийЭлемент.ТекущиеДанные.ДействуетС);
		История.Сортировать("ДействуетС Убыв");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПриАктивизацииСтроки(Элемент)
	
	Элементы.ИсторияИзменить.Доступность = НЕ ЭтоПерваяДата(Элемент.ТекущиеДанные.ДействуетС) И НЕ ЭтотОбъект.ТолькоПросмотр;
	Элементы.ИсторияУдалить.Доступность = НЕ ЭтоПерваяДата(Элемент.ТекущиеДанные.ДействуетС) И НЕ ЭтотОбъект.ТолькоПросмотр;
	Элементы.ИсторияКонтекстноеМенюИзменить.Доступность = НЕ ЭтоПерваяДата(Элемент.ТекущиеДанные.ДействуетС) И НЕ ЭтотОбъект.ТолькоПросмотр;;
	Элементы.ИсторияКонтекстноеМенюУдалить.Доступность = НЕ ЭтоПерваяДата(Элемент.ТекущиеДанные.ДействуетС) И НЕ ЭтотОбъект.ТолькоПросмотр;;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	ЗакрытиеФормыБезСохранения = Ложь;
	Закрыть(История);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЗакрытиеФормыБезСохранения = Истина;
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ИсторияДействуетС.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("История.ДействуетС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Первоначальное значение'"));

КонецПроцедуры

&НаКлиенте
Функция ДопустимаяДатаИстории(СтараяДата, НоваяДата)
	
	Отбор = Новый Структура("ДействуетС", НоваяДата);
	НайденныеСтроки = История.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 1 Тогда
		Возврат СтараяДата;
	КонецЕсли;
	
	Возврат НоваяДата;
КонецФункции

&НаКлиенте
Функция КонтактнаяИнформациюПодготовлена()
	
	История.Сортировать("ДействуетС Убыв");
	ЭтоИсторическаяКонтактнаяИнформация = Ложь;
	
	Если ПроверятьКорректность Тогда
		Если КонтактнаяИнформацияНеКорректная() Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаКонтактнойИнформации Из История Цикл
		СтрокаКонтактнойИнформации.ХранитьИсториюИзменений = Истина;
		СтрокаКонтактнойИнформации.ЭтоИсторическаяКонтактнаяИнформация = ЭтоИсторическаяКонтактнаяИнформация;
		ЭтоИсторическаяКонтактнаяИнформация = Истина;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция КонтактнаяИнформацияНеКорректная()
	
	ТекущийУровеньОшибок = 0;
	Для Индекс = 0 По История.Количество() - 1 Цикл
		СтрокаИстории = История.Получить(Индекс);
		Если ПустаяСтрока(СтрокаИстории.ЗначенияПолей) ИЛИ ПустаяСтрока(СтрокаИстории.Представление)Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Поле ""%1"" не может быть пустым.'"), ПредставлениеКонтактнойИнформации),, "История[" + Строка(Индекс) + "].Представление");
			ТекущийУровеньОшибок = ТекущийУровеньОшибок + 1;
		Иначе
			ТекущийУровеньОшибок = ТекущийУровеньОшибок + УправлениеКонтактнойИнформацией.ПроверитьЗаполнениеКонтактнойИнформации(
				СтрокаИстории.Представление, СтрокаИстории.ЗначенияПолей, ВидКонтактнойИнформации, 
				ВидКонтактнойИнформации.Тип, "История[" + Строка(Индекс) + "].Представление");
		КонецЕсли;
	КонецЦикла;
	
	Возврат ?(ТекущийУровеньОшибок > 0, Истина, Ложь);

КонецФункции

&НаКлиенте
Процедура ПослеРедактированияАдреса(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДействуетС = ДополнительныеПараметры.ДействуетС;
	
	Отбор = Новый Структура("ДействуетС", ДействуетС);
	НайденныеСтроки = История.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НайденныеСтроки[0].Представление = РезультатЗакрытия.Представление;
		НайденныеСтроки[0].ЗначенияПолей = РезультатЗакрытия.КонтактнаяИнформация;
		НайденныеСтроки[0].Комментарий = РезультатЗакрытия.Комментарий;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоПерваяДата(ДействуетС)
	
	Для каждого СтрокаИстории Из История Цикл
		Если СтрокаИстории.ДействуетС < ДействуетС Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ИсторияАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ИмяФормыРедактирования = "ВводаАдреса" Тогда
		ОткрытьФормуРедактированияАдреса(Элементы.История.ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция КонтактнаяИнформацияXMLПоПредставлению(Текст, ВидКонтактнойИнформации)
	Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияXMLПоПредставлению(Текст, ВидКонтактнойИнформации);
КонецФункции

#КонецОбласти