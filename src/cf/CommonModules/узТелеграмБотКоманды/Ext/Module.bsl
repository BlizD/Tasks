
// #240 Пиганов Г.В. 2020-09-08
// Обрабатывает команды в переданном сообщении
//
// Параметры:
//  Текст - Строка - Текст или заголовок сообшения. Может быть изменен при обработке
//  Обработано - Булево - Признак обработки команды. Имеет смысл при обработке
//                        команд в расширении до стандартных комманд
//  ДатаУниверсальная - Дата и время - дата сообщения (UTC+0:00)
//  Дата  - Дата и время - Дата сообщения в текущем часовом поясе сеанса
//  Пользователь - СправочникСсылка.Пользователи - Ссылка на пользователя
//  ПользовательИД - Строка- ИД пользователя телеграмм
//  ПользовательИмя - Строка - имя пользователя телеграмм
//  ПользовательНаименование - Строка - представление пользователя телеграмм
//  Номер - Строка - номер текущего сообщения в чате телеграмм
//  Файлы - Массив структур - массив файлов или фото в сообщении
//  * ИД - Строка - идентификатор файла в телеграмм. Для получения файла через узТелеграммБот.ПолучитьФайл()
//  * Имя - Строка - имя файла с расширением. Для фото не заполнено
//
// Возвращаемое значение:
//  Булево - Истина, если команда обработана
//
Процедура ОбработатьКомандыСообщения(НастройкиБота, Сообщение) Экспорт
	
	//НастройкиБота = Неопределено; // Для сохранения настроек при необходимости
	
	Если ПроверитьСправка(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Сообщение.Пользователь) Тогда
		Возврат; // Неизвестный пользователь
	КонецЕсли;
	
	Если ПроверитьНовоеДело(Сообщение)
	ИЛИ ПроверитьНовыйВопрос(Сообщение) Тогда
		Возврат;
	КонецЕсли;
	
	// Команды связанные с указанной задачей в начале сообщения
	ЗадачаСсылка = Неопределено;
	Если НачинаетсяСНомераЗадачи(Сообщение, ЗадачаСсылка) Тогда
		Если ПроверитьНовыйФайл(Сообщение, ЗадачаСсылка, НастройкиБота)
		ИЛИ ПроверитьНовуюЗадачу(Сообщение, ЗадачаСсылка)
		ИЛИ ПроверитьНовыйВопрос(Сообщение, ЗадачаСсылка)
		ИЛИ ПроверитьНовыйКомментарий(Сообщение, ЗадачаСсылка) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьНовуюЗадачу(Сообщение);
	
КонецПроцедуры

// #247 Пиганов Г.В. 2020-09-10
// Возвращает доступные команды. Может быть переопределена в расширении
//
Функция ДоступныеКоманды()
	
	ДоступныеКоманды = Новый Массив;
	ДоступныеКоманды.Добавить("!ТекстОписания - новое дело");
	ДоступныеКоманды.Добавить("?ТекстОписания - новый вопрос");
	ДоступныеКоманды.Добавить("#ТекстОписания - новая задача");
	ДоступныеКоманды.Добавить("#НомерЗадачи ТекстКомментария - новый комментарий к задаче");
	ДоступныеКоманды.Добавить("#НомерЗадачи ?ТекстВопроса - новый вопрос к задаче");
	//ДоступныеКоманды.Добавить("#НомерЗадачи #ТекстОписания - новая подзадача к задаче");
	ДоступныеКоманды.Добавить("#НомерЗадачи в заголовке файла/фото - новый файл к задаче");
	
	Возврат ДоступныеКоманды;
	
КонецФункции

// #247 Пиганов Г.В. 2020-09-10
Функция ПроверитьСправка(Сообщение)
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СокрП(Сообщение.Текст) <> "/help" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Справка - "/help"
	ТекстСообщения = "Доступные команды:";
	Для Каждого ОписаниеКоманды Из ДоступныеКоманды() Цикл
		ТекстСообщения = ТекстСообщения + Символы.ПС + ОписаниеКоманды;
	КонецЦикла;
	узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);
	
	Сообщение.Обработано = Истина;
	
	Возврат Истина;
	
КонецФункции

// #240 Пиганов Г.В. 2020-09-08
Функция ПроверитьНовоеДело(Сообщение)
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	//НовоеДело - "!ТекстОписания"
	
	Если СтрНачинаетсяС(Сообщение.Текст, "!") Тогда
		Сообщение.Текст = СокрЛ(Сред(Сообщение.Текст, 2));
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	ТекущиеДелаОбъект = Справочники.узТекущиеДела.СоздатьЭлемент();
	ТекущиеДелаОбъект.Автор = Сообщение.Пользователь;
	ТекущиеДелаОбъект.ТекстСодержания = СокрЛ(Сообщение.Текст);
	ТекущиеДелаОбъект.Записать();
	
	ТекстСообщения = "Добавлено новое дело: " + ТекущиеДелаОбъект.ТекстСодержания;
	узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);
	
	Возврат Истина;
	
Конецфункции

// #240 Пиганов Г.В. 2020-09-08
Функция ПроверитьНовыйВопрос(Сообщение, ЗадачаСсылка = Неопределено)
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	//НовыйВопрос - "?ТекстВопроса"
	//НовыйВопросКЗадаче - "#НомерЗадачи ?ТекстВопроса"
	
	Если СтрНачинаетсяС(Сообщение.Текст, "?") Тогда
		Сообщение.Текст = СокрЛ(Сред(Сообщение.Текст, 2));
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	// Новый вопрос
	ВопросОбъект = Справочники.узВопросыОтветы.СоздатьЭлемент();
	ВопросОбъект.Задача = ЗадачаСсылка;
	ВопросОбъект.Автор = Сообщение.Пользователь;
	ВопросОбъект.Вопрос = Сообщение.Текст;
	ВопросОбъект.ДатаСоздания = Сообщение.Дата;
	ВопросОбъект.Наименование = Сообщение.Текст;
	ВопросОбъект.Записать();
	
	пНомерЗадачи = Справочники.узЗадачи.ПолучитьНомерЗадачи(ЗадачаСсылка);
	ТекстСообщения = "Добавлена новый вопрос: " + ВопросОбъект.Наименование 
		+ " к задаче #" + пНомерЗадачи
		+ " " + ЗадачаСсылка;	
	узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);	
	
	Возврат Истина;
	
КонецФункции

// #240 Пиганов Г.В. 2020-09-08
Функция ПроверитьНовыйФайл(Сообщение, ЗадачаСсылка, НастройкиБота = Неопределено)
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Сообщение.Файлы.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НастройкиБота = Неопределено Тогда
		НастройкиБота = узТелеграмБот.НастройкиБота();
	КонецЕсли;
	
	Для Каждого ДанныеФайла Из Сообщение.Файлы Цикл
		АдресФайла = узТелеграмБот.ПолучитьФайл(ДанныеФайла.ИД, НастройкиБота);
		Если АдресФайла <> Неопределено Тогда
			
			Если ПустаяСтрока(ДанныеФайла.Имя) Тогда
				// Картинка добавленная как фото не имеет имени
				ИмяБезРасширения = СтрЗаменить(Новый УникальныйИдентификатор(), "-", "");
				Картинка = Новый Картинка(ПолучитьИзВременногоХранилища(АдресФайла));
				КартинкаФормат = Картинка.Формат();
				Если КартинкаФормат = ФорматКартинки.PNG Тогда
					РасширениеБезТочки = "png";
				ИначеЕсли КартинкаФормат = ФорматКартинки.GIF Тогда
					РасширениеБезТочки = "gif";
				ИначеЕсли КартинкаФормат = ФорматКартинки.JPEG Тогда
					РасширениеБезТочки = "jpeg";
				ИначеЕсли КартинкаФормат = ФорматКартинки.SVG Тогда
					РасширениеБезТочки = "svg";
				ИначеЕсли КартинкаФормат = ФорматКартинки.TIFF Тогда
					РасширениеБезТочки = "tiff";
				Иначе
					РасширениеБезТочки = "";
				КонецЕсли;
			Иначе
				// Файл добавленный как документ
				ПозТочки = СтрНайти(ДанныеФайла.Имя, ".", НаправлениеПоиска.СКонца);
				Если ПозТочки = 0 Тогда
					ИмяБезРасширения = Лев(ДанныеФайла.Имя, ПозТочки - 1);
					РасширениеБезТочки = Сред(ДанныеФайла.Имя, ПозТочки + 1);
				Иначе
					ИмяБезРасширения = ДанныеФайла.Имя;
					РасширениеБезТочки = "";
				КонецЕсли;
			КонецЕсли;
			
			ПараметрыФайла = Новый Структура;
			ПараметрыФайла.Вставить("Автор", Сообщение.Пользователь);
			ПараметрыФайла.Вставить("ВладелецФайлов", ЗадачаСсылка);
			ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Сообщение.ДатаУниверсальная);
			ПараметрыФайла.Вставить("ИмяБезРасширения", ИмяБезРасширения);
			ПараметрыФайла.Вставить("РасширениеБезТочки", РасширениеБезТочки);
			РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресФайла);
			
			пНомерЗадачи = Справочники.узЗадачи.ПолучитьНомерЗадачи(ЗадачаСсылка);
			ТекстСообщения = "Прикреплен новый файл: " + ИмяБезРасширения 
				+ " для задачи #" + пНомерЗадачи + " " + ЗадачаСсылка;
			узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);	
			
		КонецЕсли;
	КонецЦикла;
	
	Сообщение.Обработано = Истина;
	
	Возврат Истина;
	
КонецФункции

// #240 Пиганов Г.В. 2020-09-08
Функция ПроверитьНовуюЗадачу(Сообщение, ЗадачаСсылка = Неопределено)
	
	//НоваяЗадача - "#ТекстОписания"
	//НоваяПодзадача - "#НомерЗадачи #ТекстОписания"
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрНачинаетсяС(Сообщение.Текст, "#") Тогда
		Сообщение.Текст = СокрЛ(Сред(Сообщение.Текст, 2));
	//ИначеЕсли СтрНачинаетсяС(Сообщение.Текст, "/#") Тогда
	//	ТекстСообщения = Сред(Сообщение.Текст, 3);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
	
	пСтатусДляЗадачи = Справочники.узКонстанты.ПолучитьЗначениеКонстанты(
		"СтатусЗадачиПоУмолчанию", 
		Тип("СправочникСсылка.узСтатусыЗадачи"),
		,
		Ложь);
		
	пРодительДляЗадачи = Справочники.узКонстанты.ПолучитьЗначениеКонстанты(
		"ТелеграммРодительДляНовойЗадачиПоУмолчанию", 
		Тип("СправочникСсылка.узЗадачи"),
		,
		Ложь);		
	
	ЗадачаОбъект = Справочники.узЗадачи.СоздатьЭлемент();
	ЗадачаОбъект.Автор = Сообщение.Пользователь;
	ЗадачаОбъект.ДатаСоздания = Сообщение.Дата;
	ЗадачаОбъект.ТекстСодержания = Сообщение.Текст;
	ЗадачаОбъект.Наименование = Сообщение.Текст;
	ЗадачаОбъект.ОформлениеТекста = Перечисления.узОформлениеТекста.Текст;
	ЗадачаОбъект.Статус = пСтатусДляЗадачи;
	ЗадачаОбъект.Родитель = пРодительДляЗадачи;
	ЗадачаОбъект.ПоказыватьВОтчетахИКанбанДоске = Истина;
	ЗадачаОбъект.Записать();
	
	Сообщение.Обработано = Истина;
	
	пНомерЗадачи = Справочники.узЗадачи.ПолучитьНомерЗадачи(ЗадачаОбъект.Ссылка);
	ТекстСообщения = "Добавлена новая задача #" + пНомерЗадачи
		+ " " + ЗадачаОбъект.Наименование;
	узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);		
	
	Возврат Истина;
	
КонецФункции

// #240 Пиганов Г.В. 2020-09-08
Функция ПроверитьНовыйКомментарий(Сообщение, ЗадачаСсылка)
	
	Если Сообщение.Обработано Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(Сообщение.Текст) Тогда
		// Пустой комментарий - был указан только номер задачи
		Возврат Ложь;
	КонецЕсли;
	
	//НовыйКомментарий - #НомерЗадачи ТекстКомментария"
	
	ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
	
	// Ключ строки нового комментария
	НовыйКлючСтроки = 1;
	Если ЗадачаОбъект.Комментарии.Количество() = 0 Тогда
		НовыйКлючСтроки = 1;
	Иначе
		ТЗ = ЗадачаОбъект.Комментарии.Выгрузить();
		ТЗ.Сортировать("КлючСтроки УБЫВ");
		НовыйКлючСтроки = ТЗ[0].КлючСтроки + 1;
	Конецесли;
	
	// Новый комментарий
	СтрокаКомментария = ЗадачаОбъект.Комментарии.Добавить();
	СтрокаКомментария.КлючСтроки = НовыйКлючСтроки;
	СтрокаКомментария.ДатаКомментария = Сообщение.Дата;
	СтрокаКомментария.Автор = Сообщение.Пользователь;
	СтрокаКомментария.Комментарий = Сообщение.Текст;
	ЗадачаОбъект.Записать();
	
	Сообщение.Обработано = Истина;
	
	пНомерЗадачи = Справочники.узЗадачи.ПолучитьНомерЗадачи(ЗадачаОбъект.Ссылка);
	ТекстСообщения = "Добавлен новый комментарий: " + СтрокаКомментария.Комментарий
		+ " к задаче #" + пНомерЗадачи + " " + ЗадачаСсылка;
	узТелеграмБот.ОтправитьСообщение(ТекстСообщения, Сообщение.Пользователь);	
	
	Возврат Истина;
	
КонецФункции

// #240 Пиганов Г.В. 2020-09-08
Функция НачинаетсяСНомераЗадачи(Сообщение, ЗадачаСсылка)
	
	ТекстСообщения = Сообщение.Текст;
	
	НомерЗадачи = "";
	Если Лев(ТекстСообщения, 1) = "#" Тогда
		Для ПозЧисла = 2 По СтрДлина(ТекстСообщения) Цикл
			КодСимволаЧисла = КодСимвола(ТекстСообщения, ПозЧисла);
			Если КодСимволаЧисла < 48 ИЛИ КодСимволаЧисла > 57 Тогда // "0" - "9"
				Если НЕ ПустаяСтрока(Символ(КодСимволаЧисла)) ИЛИ НомерЗадачи = "" Тогда
					// Если после номера найден не пробельный символ или пробельный при
					// пустом номере задачи, то сообщение начинается не с номера задачи
					НомерЗадачи = "";
				ИначеЕсли ПозЧисла > 1 Тогда
					// Удаление из текста сообщения номера задачи
					Сообщение.Текст = СокрЛ(Сред(ТекстСообщения, ПозЧисла));
				КонецЕсли;
				Прервать;
			КонецЕсли;
			НомерЗадачи = НомерЗадачи + Символ(КодСимволаЧисла);
		КонецЦикла;
	КонецЕсли;
	Если НомерЗадачи = "" Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	узЗадачи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.узЗадачи КАК узЗадачи
	|ГДЕ
	|	узЗадачи.Код = &НомерЗадачи";
	Запрос.УстановитьПараметр("НомерЗадачи", Число(НомерЗадачи));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗадачаСсылка = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
