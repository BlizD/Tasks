Процедура ПриДобавленииПодсистемы(Описание) Экспорт
    Описание.Имя = "УправлениеЗадачами";
    Описание.Версия = "1.0.1.007";
    // Требуется библиотека стандартных подсистем.
    Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
КонецПроцедуры
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "";
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.Процедура = "узОбновлениеИнформационнойБазы.узНачальноеЗаполнение";
	Обработчик.ОбщиеДанные = Истина;
	Обработчик.Комментарий = "Выполняется начальное заполнение данных";
	
КонецПроцедуры
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
КонецПроцедуры
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
        Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
КонецПроцедуры
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
КонецПроцедуры
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
КонецПроцедуры
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
КонецПроцедуры 
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
КонецПроцедуры

Процедура узНачальноеЗаполнение() Экспорт
	узДобавитьАдминистраторИБ();
	узОбработатьСправочники("узВидыСтатусов");
	узОбработатьСправочники("узВариантыВажностиЗадачи");
	узОбработатьСправочники("узСтатусыЗадачи");
	узПроставитьВидСтатусаВСтатусахЗадачи();
	Константы.ЗаголовокСистемы.Установить("Управление задачами");
	Константы.ИспользоватьНапоминанияПользователя.Установить(Истина);
	Сообщить("После первоначального заполнения, необходимо перезапустить программу");
КонецПроцедуры 

Процедура узДобавитьАдминистраторИБ()
	ИмяПользователя = "Администратор";
	Если ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя)<>Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	ПользовательИБ.Имя = ИмяПользователя;
	ПользовательИБ.ПоказыватьВСпискеВыбора = Истина;
	ПользовательИБ.ПолноеИмя = ИмяПользователя;
	ПользовательИБ.АутентификацияСтандартная = Истина;
	ПользовательИБ.Роли.Добавить(Метаданные.Роли.АдминистраторСистемы);
	ПользовательИБ.Роли.Добавить(Метаданные.Роли.ПолныеПрава);
	ПользовательИБ.Роли.Добавить(Метаданные.Роли.ИнтерактивноеОткрытиеВнешнихОтчетовИОбработок);
	ПользовательИБ.Язык = Метаданные.Языки.Русский;
	ПользовательИБ.Записать();
КонецПроцедуры 

Процедура узПроставитьВидСтатусаВСтатусахЗадачи()
	ТЗНастройки = Новый ТаблицаЗначений();
	ТЗНастройки.Колонки.Добавить("СтатусЗадачи");
	ТЗНастройки.Колонки.Добавить("ВидСтатуса");
	ТЗНастройки.Колонки.Добавить("ВидимостьПоУмолчанию");

	ВидСтатуса_Backlog = Справочники.узВидыСтатусов.Backlog;
	ВидСтатуса_ВРаботе = Справочники.узВидыСтатусов.ВРаботе;
	ВидСтатуса_Готово = Справочники.узВидыСтатусов.Готово;
	
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Отменена,ВидСтатуса_Backlog,Ложь,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Backlog,ВидСтатуса_Backlog,Истина,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Отложена,ВидСтатуса_Backlog,Ложь,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Зарегистрирована,ВидСтатуса_Backlog,Истина,ТЗНастройки);
	
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.ОжидаетОтвета,ВидСтатуса_ВРаботе,Истина,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.ВПроцессеВыполнения,ВидСтатуса_ВРаботе,Истина,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.НаТестированииПоказПользователям,ВидСтатуса_ВРаботе,Истина,ТЗНастройки);
	
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Готово,ВидСтатуса_Готово,Истина,ТЗНастройки);
	узДобавитьВТЗНастройки(Справочники.узСтатусыЗадачи.Архив,ВидСтатуса_Готово,Ложь,ТЗНастройки);
	
	Для каждого СтрокаТЗНастройки из ТЗНастройки цикл
		СпрОбъект = СтрокаТЗНастройки.СтатусЗадачи.ПолучитьОбъект();
		СпрОбъект.ВидСтатуса = СтрокаТЗНастройки.ВидСтатуса;
		СпрОбъект.ВидимостьПоУмолчанию = СтрокаТЗНастройки.ВидимостьПоУмолчанию;
		СпрОбъект.Записать();
	Конеццикла;
КонецПроцедуры 

Процедура узДобавитьВТЗНастройки(СтатусЗадачи,ВидСтатуса,ВидимостьПоУмолчанию,ТЗНастройки)
	СтрокаТЗНастройки = ТЗНастройки.Добавить();
	СтрокаТЗНастройки.СтатусЗадачи = СтатусЗадачи; 
	СтрокаТЗНастройки.ВидСтатуса = ВидСтатуса;
	СтрокаТЗНастройки.ВидимостьПоУмолчанию = ВидимостьПоУмолчанию;
КонецПроцедуры 

Процедура узОбработатьСправочники(ИмяСправочника)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТСправочник.Ссылка,
	|	ВТСправочник.Код КАК Код
	|ИЗ
	|	Справочник."+ИмяСправочника+" КАК ВТСправочник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СпрОбъект.Записать();
	КонецЦикла;
КонецПроцедуры 