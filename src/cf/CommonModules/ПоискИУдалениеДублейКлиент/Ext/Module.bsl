////////////////////////////////////////////////////////////////////////////////
// Подсистема "Поиск и удаление дублей".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму объединения элементов справочников, планов видов характеристик, видов расчетов и счетов.
//
// Параметры:
//     ОбъединяемыеЭлементы - ТаблицаФормы, Массив, СписокЗначений - список элементов к объединению.
//                            Также можно передать произвольную коллекцию элементов с реквизитом "Ссылка".
//
Процедура ОбъединитьВыделенные(Знач ОбъединяемыеЭлементы) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НаборСсылок", МассивСсылок(ОбъединяемыеЭлементы));
	ОткрытьФорму("Обработка.ЗаменаИОбъединениеЭлементов.Форма.ОбъединениеЭлементов", ПараметрыФормы); 
	
КонецПроцедуры

// Открывает форму замены и удаления элементов справочников, планов видов характеристик, видов расчетов и счетов.
//
// Параметры:
//     ЗаменяемыеЭлементы - ТаблицаФормы, Массив, СписокЗначений - список элементов, которые нужно заменить и удалить.
//                          Также можно передать произвольную коллекцию элементов с реквизитом "Ссылка".
//
Процедура ЗаменитьВыделенные(Знач ЗаменяемыеЭлементы) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НаборСсылок", МассивСсылок(ЗаменяемыеЭлементы));
	ПараметрыФормы.Вставить("ОткрытаПоСценарию");
	ОткрытьФорму("Обработка.ЗаменаИОбъединениеЭлементов.Форма.ЗаменаЭлементов", ПараметрыФормы); 
	
КонецПроцедуры

// Открывает отчет о местах использования ссылок.
// В отчет не включаются вспомогательные данные, такие как наборы записей с ведущим измерением и т.п.
//
// Параметры:
//     Элементы - ТаблицаФормы, Массив, СписокЗначений - Список элементов для анализа.
//         Также можно передать произвольную коллекцию элементов с реквизитом "Ссылка".
//     ПараметрыОткрытия - Структура - Необязательный. Параметры открытия формы. Состоит из необязательных полей.
//         Владелец, Уникальность, Окно, НавигационнаяСсылка, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкна,
//         соответствующих параметрам функции ОткрытьФорму.
// 
Процедура ПоказатьМестаИспользования(Знач Элементы, Знач ПараметрыОткрытия = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура);
	ПараметрыФормы.Отбор.Вставить("НаборСсылок", МассивСсылок(Элементы));
	
	ПараметрыОткрытияФормы = Новый Структура("Владелец, Уникальность, Окно, НавигационнаяСсылка, ОписаниеОповещенияОЗакрытии, РежимОткрытияОкна");
	Если ПараметрыОткрытия <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыОткрытияФормы, ПараметрыОткрытия);
	КонецЕсли;
	
	ОткрытьФорму(
		"Отчет.МестаИспользованияСсылок.Форма",
		ПараметрыФормы,
		ПараметрыОткрытияФормы.Владелец,
		ПараметрыОткрытияФормы.Уникальность,
		ПараметрыОткрытияФормы.Окно,
		ПараметрыОткрытияФормы.НавигационнаяСсылка,
		ПараметрыОткрытияФормы.ОписаниеОповещенияОЗакрытии,
		ПараметрыОткрытияФормы.РежимОткрытияОкна);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Обработчики условных вызовов в эту подсистему.

Функция ИмяФормыОбработкиПоискИУдалениеДублей() Экспорт
	Возврат "Обработка.ПоискИУдалениеДублей.Форма.ПоискДублей";
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МассивСсылок(Знач Элементы)
	
	ТипПараметра = ТипЗнч(Элементы);
	
	Если ТипЗнч(Элементы) = Тип("ТаблицаФормы") Тогда
		Ссылки = Новый Массив;
		Для Каждого Элемент Из Элементы.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.ДанныеСтроки(Элемент);
			Если ДанныеСтроки <> Неопределено Тогда
				Ссылки.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ТипПараметра = Тип("СписокЗначений") Тогда
		Ссылки = Новый Массив;
		Для Каждого Элемент Из Элементы Цикл
			Ссылки.Добавить(Элемент.Значение);
		КонецЦикла;
		
	Иначе
		Ссылки = Элементы;
		
	КонецЕсли;
	
	Возврат Ссылки;
КонецФункции

#КонецОбласти
