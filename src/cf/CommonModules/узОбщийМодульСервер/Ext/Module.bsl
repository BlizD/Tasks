
Процедура ОтправитьПисьмо(ДопПараметры) Экспорт
	
	ВажностьЗадачи = ДопПараметры.ВажностьЗадачи;
	ТекстПисьма = ДопПараметры.ТекстПисьма;
	ТемаПисьма = ДопПараметры.ТемаПисьма;

	Если ДопПараметры.Свойство("МассивПользователейКому") Тогда
		МассивПользователей = ДопПараметры.МассивПользователейКому;
	Иначе		
		МассивПользователей = Новый Массив();
		МассивПользователей.Добавить(ДопПараметры.ПользовательКому);
	Конецесли;
	
	ТЗАдресаЭлектроннойПочты = ПолучитьТЗАдресаЭлектроннойПочты(МассивПользователей);	
	
	Для каждого СтрокаТЗАдресаЭлектроннойПочты из ТЗАдресаЭлектроннойПочты цикл
		ПользовательКому = СтрокаТЗАдресаЭлектроннойПочты.Пользователь;
		Если НЕ ЗначениеЗаполнено(СтрокаТЗАдресаЭлектроннойПочты.АдресЭлектроннойПочты) Тогда
			Сообщить("Ошибка! при отправке письма не удалось получить адреса электронной почты для ["+ПользовательКому+"]");	
		Конецесли;
	Конеццикла;
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	ДокОбъект = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();	
	ДокОбъект.Дата = ТекущаяДата();
	ДокОбъект.Автор = ТекПользователь;
	
	Если ЗначениеЗаполнено(ВажностьЗадачи) Тогда
		ДокОбъект.Важность = Перечисления.ВариантыВажностиВзаимодействия[""+ВажностьЗадачи];
	Конецесли;
	ДокОбъект.Кодировка = "UTF-8";
	ДокОбъект.Ответственный = ТекПользователь;
	ДокОбъект.ОтправительПредставление = "1с: Управление задачами";
	ДокОбъект.СтатусПисьма = ПредопределенноеЗначение("Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Исходящее");
	ДокОбъект.Текст = ТекстПисьма;
	ДокОбъект.Тема = ТемаПисьма;
	ДокОбъект.ТипТекста = ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.ПростойТекст");
	ДокОбъект.УчетнаяЗапись = ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты");
	ДокОбъект.УдалятьПослеОтправки = Истина;
	
	//ДокОбъект.ДатаКогдаОтправить = ;
	
	Для каждого СтрокаТЗАдресаЭлектроннойПочты из ТЗАдресаЭлектроннойПочты цикл
		АдресЭлектроннойПочты = СтрокаТЗАдресаЭлектроннойПочты.АдресЭлектроннойПочты;
		ПользовательКому = СтрокаТЗАдресаЭлектроннойПочты.Пользователь;
		
		СтрокаПолучателиПисьма = ДокОбъект.ПолучателиПисьма.Добавить();
		СтрокаПолучателиПисьма.Адрес         = АдресЭлектроннойПочты;
		СтрокаПолучателиПисьма.Представление = ""+ПользовательКому+" <"+АдресЭлектроннойПочты+">";
		СтрокаПолучателиПисьма.Контакт       = ПользовательКому;
	Конеццикла;
	ДокОбъект.СформироватьПредставленияКонтактов();
	ДокОбъект.Записать();	
КонецПроцедуры 

Функция ПолучитьТЗАдресаЭлектроннойПочты(МассивПользователей) 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПользователиКонтактнаяИнформация.Ссылка КАК Пользователь,
	|	ПользователиКонтактнаяИнформация.АдресЭП КАК АдресЭлектроннойПочты
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиКонтактнаяИнформация
	|ГДЕ
	|	ПользователиКонтактнаяИнформация.Ссылка В(&МассивПользователей)
	|	И ПользователиКонтактнаяИнформация.Тип = &Тип
	|	И ПользователиКонтактнаяИнформация.Вид = &Вид
	|";
	
	Запрос.УстановитьПараметр("Вид", ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя"));
	Запрос.УстановитьПараметр("МассивПользователей", МассивПользователей);
	Запрос.УстановитьПараметр("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗАдресаЭлектроннойПочты = РезультатЗапроса.Выгрузить();
	Возврат ТЗАдресаЭлектроннойПочты;
КонецФункции 

Процедура узЗагрузкаИзмененийИзХранилища() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.узЗагрузкаИзмененийИзХранилища);	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	узКонфигурации.Ссылка КАК Конфигурация,
	|	узКонфигурации.ПолучатьИзмененияИзХранилища
	|ИЗ
	|	Справочник.узКонфигурации КАК узКонфигурации
	|ГДЕ
	|	узКонфигурации.ПолучатьИзмененияИзХранилища
	|	И НЕ узКонфигурации.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	Конецесли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		пКонфигурация = Выборка.Конфигурация;
		
		ОбрОбъект = Обработки.узЗагрузкаИзмененийИзХранилища.Создать();
		ОбрОбъект.Конфигурация = пКонфигурация;
		ОбрОбъект.ВерсияС = Справочники.узИсторияКонфигураций.ПолучитьПоследнююЗагруженнуюВерсию(пКонфигурация);
		РезультатФункции = ОбрОбъект.ЗагрузитьИзмененияИзХранилища();
		Сообщить("Загружены изменения для конфигурации ["+пКонфигурация+"] с версии ["+ОбрОбъект.ВерсияС+"]");
	КонецЦикла;
КонецПроцедуры

Функция узОткрыватьСправочникЗадачиПриНачалеРаботыСистемы() Экспорт
	пТекущийПользователь = Пользователи.ТекущийПользователь();
	Возврат пТекущийПользователь.узОткрыватьСправочникЗадачиПриНачалеРаботыСистемы;
КонецФункции 