
Процедура узСообщить(ТекстРусский, КодСообщения) Экспорт
	ТекстСообщения = ПолучитьТекстСообщения(ТекстРусский, КодСообщения);
	Сообщить(ТекстСообщения);
КонецПроцедуры 

Функция ПолучитьТекстСообщения(ТекстРусский, КодСообщения) Экспорт
	Перем ТекстСообщения;
	
	Если РусскийЯзыкУПользователя() Тогда
		Возврат ТекстРусский;
	Конецесли;
	
	МассивКодовСообщений = Новый Массив();
	МассивКодовСообщений.Добавить(КодСообщения);
	
	СтруктураСообщений = ПолучитьСтруктуруСообщений(МассивКодовСообщений);
	Если СтруктураСообщений.Количество() = 1 Тогда
		Для каждого ЭлСтруктураСообщений из СтруктураСообщений цикл
			ТекстСообщения = ЭлСтруктураСообщений.Значение;		
		Конеццикла;
	Конецесли;
	
	Если НЕ ЗначениеЗаполнено(ТекстСообщения) Тогда
		ТекстСообщения = ТекстРусский;
	Конецесли;
	
	Возврат ТекстСообщения;
КонецФункции

Функция РусскийЯзыкУПользователя() Экспорт 
	Возврат ПользователиИнформационнойБазы.ТекущийПользователь().Язык = Метаданные.Языки.Русский;
КонецФункции //

Функция ПолучитьСтруктуруСообщений(МассивКодовСообщений) Экспорт 
	СтруктураСообщений = Новый Структура();
	
	ВыборкаСловарьПоКодуСообщения = ПолучитьВыборкуСловарьСообщений(МассивКодовСообщений);	
	Для каждого ЭлМассивКодовСообщений из МассивКодовСообщений цикл
		ЕстьКодВСловаре = ВыборкаСловарьПоКодуСообщения.НайтиСледующий(ЭлМассивКодовСообщений,"КодСообщения");
		Если ЕстьКодВСловаре = Ложь Тогда
			Сообщить("Ошибка! Нет данных в словаре для кода сообщения ["+ЭлМассивКодовСообщений+"]."
				+ "Необходимо перезаполнить регистр сведений ""Словарь""");
		Конецесли;
	Конеццикла;	
	
	ВыборкаСловарьПоКодуСообщения.Сбросить();
	
	Пока ВыборкаСловарьПоКодуСообщения.Следующий() Цикл
		пКодСообщения = ВыборкаСловарьПоКодуСообщения.КодСообщения;
		ТекстСообщения = "";
		
		ВыборкаПоКодуЯзыка = ВыборкаСловарьПоКодуСообщения.Выбрать();
		
		пТекстЯзыкаПоУмолчанию = "";
		Пока ВыборкаПоКодуЯзыка.Следующий() Цикл
			Если ВыборкаПоКодуЯзыка.КодЯзыка = "en" Тогда
				пТекстЯзыкаПоУмолчанию = ВыборкаПоКодуЯзыка.ТекстЯзыка; 
			Конецесли;
		Конеццикла;
		
		пИмяЭлемента = "";
		ВыборкаПоКодуЯзыка.Сбросить();
		Пока ВыборкаПоКодуЯзыка.Следующий() Цикл
			пИмяЭлемента = ВыборкаПоКодуЯзыка.ИмяЭлемента;
			пКодЯзыка = ВыборкаПоКодуЯзыка.КодЯзыка;
			пТекстЯзыка = ВыборкаПоКодуЯзыка.ТекстЯзыка;
			
			Если НЕ ЗначениеЗаполнено(пТекстЯзыка) Тогда
				пТекстЯзыка = пТекстЯзыкаПоУмолчанию;	
			Конецесли;
			
			ТекстСообщения = ТекстСообщения + 
				""+пКодЯзыка+" = '"+пТекстЯзыка+"';"		
		Конеццикла;
		ТекстСообщения = НСтр(ТекстСообщения);
		
		Если ЗначениеЗаполнено(пИмяЭлемента) Тогда
			СтруктураСообщений.Вставить(""+пИмяЭлемента,ТекстСообщения);
		Иначе
			СтруктураСообщений.Вставить("Текст"+пКодСообщения,ТекстСообщения);
		Конецесли;
	Конеццикла;
	
	//Для каждого КодСообщения из МассивКодовСообщений цикл
	//	ТекстСообщения = "";
	//	
	//	СтрокаТЗСловарьСообщений = ПолучитьСтрокуИзТЗСловарьСообщений(ТЗСловарьСообщений, КодСообщения);		
	//	
	//	ТекстРусский = СтрокаТЗСловарьСообщений.ТекстРусский;
	//	ТекстАнглийский = СтрокаТЗСловарьСообщений.ТекстАнглийский;
	//	ТекстРумынский = СтрокаТЗСловарьСообщений.ТекстРумынский;
	//	
	//	Если НЕ ЗначениеЗаполнено(ТекстРумынский) Тогда
	//		ТекстРумынский = ТекстАнглийский;	
	//	Конецесли;
	//	
	//	ТекстСообщения = "ru = '"+ТекстРусский+"';"
	//		+ " en = '"+ТекстАнглийский+"';"
	//		+ " ro = '"+ТекстРумынский+"'"
	//		;
	//	ТекстСообщения = НСтр(ТекстСообщения);
	//	
	//	СтруктураСообщений.Вставить("Текст"+КодСообщения,ТекстСообщения);
	//Конеццикла;
	
	Возврат СтруктураСообщений;
КонецФункции 

Функция ПолучитьВыборкуСловарьСообщений(МассивКодовСообщений)
	
	Если НЕ СловарьЗаполен() Тогда	
		ЗаполнитьСловарьПоУмолчанию();
	Конецесли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	узСловарь.КодСообщения КАК КодСообщения,
	|	узСловарь.КодЯзыка,
	|	узСловарь.ТекстЯзыка,
	|	узСловарь.ИмяЭлемента
	|ИЗ
	|	РегистрСведений.узСловарь КАК узСловарь
	|ГДЕ
	|	узСловарь.КодСообщения В(&МассивКодовСообщений)
	|ИТОГИ ПО
	|	КодСообщения";
	
	Запрос.УстановитьПараметр("МассивКодовСообщений", МассивКодовСообщений);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Возврат Выборка;
	
	//ТЗСловарьСообщений = Новый ТаблицаЗначений();
	//ТЗСловарьСообщений.Колонки.Добавить("КодСообщения");
	//ТЗСловарьСообщений.Колонки.Добавить("ТекстРусский");
	//ТЗСловарьСообщений.Колонки.Добавить("ТекстАнглийский");
	//ТЗСловарьСообщений.Колонки.Добавить("ТекстРумынский");
	//
	//узМакетСловарь = ПолучитьОбщийМакет("узСловарь");
	//
	//МассивКодовСообщенийКоличество = МассивКодовСообщений.Количество();
	//
	//НачинаяСНомераСтроки = 2;
	//Если МассивКодовСообщенийКоличество = 1 Тогда
	//	КодСообщения = МассивКодовСообщений[0];
	//	Если ЗначениеЗаполнено(КодСообщения) Тогда
	//		НачинаяСНомераСтроки = КодСообщения + 1;
	//	Конецесли;
	//Конецесли;
	//
	//КоличествоНайденныхСообщений = 0;
	//Для НомерСтроки = НачинаяСНомераСтроки По узМакетСловарь.ВысотаТаблицы Цикл
	//	
	//	КодСообщенияИзМакета = Число(СокрЛП(узМакетСловарь.Область(НомерСтроки,1).Текст));
	//	
	//	Если МассивКодовСообщений.Найти(КодСообщенияИзМакета) = Неопределено Тогда
	//		Продолжить;
	//	Конецесли;
	//	
	//	ТекстРусский = СокрЛП(узМакетСловарь.Область(НомерСтроки,2).Текст);
	//	ТекстАнглийский = СокрЛП(узМакетСловарь.Область(НомерСтроки,3).Текст);
	//	ТекстРумынский = СокрЛП(узМакетСловарь.Область(НомерСтроки,4).Текст);
	//	
	//	СтрокаТЗСловарьСообщений = ТЗСловарьСообщений.Добавить();
	//	СтрокаТЗСловарьСообщений.КодСообщения = КодСообщенияИзМакета;
	//	СтрокаТЗСловарьСообщений.ТекстРусский = ТекстРусский;
	//	СтрокаТЗСловарьСообщений.ТекстАнглийский = ТекстАнглийский;
	//	СтрокаТЗСловарьСообщений.ТекстРумынский = ТекстРумынский;
	//	
	//	КоличествоНайденныхСообщений = КоличествоНайденныхСообщений + 1;
	//	Если МассивКодовСообщенийКоличество = КоличествоНайденныхСообщений Тогда
	//		Прервать;
	//	Конецесли;
	//КонецЦикла;
	//
	//Возврат ТЗСловарьСообщений;
КонецФункции 

Функция СловарьЗаполен() Экспорт 
	пСловарьЗаполен	= Ложь;
	//Если РусскийЯзыкУПользователя() Тогда
	//	пСловарьЗаполен = Истина;
	//	Возврат пСловарьЗаполен;
	//Конецесли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	узСловарь.КодСообщения,
	|	узСловарь.КодЯзыка,
	|	узСловарь.ТекстЯзыка,
	|	узСловарь.ИмяЭлемента
	|ИЗ
	|	РегистрСведений.узСловарь КАК узСловарь";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		пСловарьЗаполен = Истина;
	Конецесли;
	Возврат пСловарьЗаполен;
КонецФункции 

Процедура ЗаполнитьСловарьПоУмолчанию() Экспорт
	НаборЗаписей = РегистрыСведений.узСловарь.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
	узМакетСловарь = ПолучитьОбщийМакет("узСловарьПоУмолчанию");
	
	НомерКолонкиЯзыки = 4;
	
	МассивКодовЯзыка = Новый Массив();
	Для НомерКолонки = НомерКолонкиЯзыки По узМакетСловарь.ШиринаСтраницы Цикл
		КодЯзыкаИзМакета = СокрЛП(узМакетСловарь.Область(1,НомерКолонки).Текст);
		Если НЕ ЗначениеЗаполнено(КодЯзыкаИзМакета) Тогда
			Продолжить;
		Конецесли;
		МассивКодовЯзыка.Добавить(КодЯзыкаИзМакета);
	КонецЦикла;
	
	Для НомерСтроки = 2 По узМакетСловарь.ВысотаТаблицы Цикл
		
		КодСообщенияИзМакета = Число(СокрЛП(узМакетСловарь.Область(НомерСтроки,1).Текст));
		пИмяЭлемента = СокрЛП(узМакетСловарь.Область(НомерСтроки,2).Текст);
		пОбъектЛокализации = СокрЛП(узМакетСловарь.Область(НомерСтроки,3).Текст);
		
		НомерКолонки = НомерКолонкиЯзыки;
		Для каждого КодЯзыкаИзМакета из МассивКодовЯзыка цикл
			пТекстЯзыка = СокрЛП(узМакетСловарь.Область(НомерСтроки,НомерКолонки).Текст);	
			
			//Если НЕ ЗначениеЗаполнено(пТекстЯзыка) Тогда 
			//	Продолжить;
			//Конецесли;
			
			МенеджерЗаписи = РегистрыСведений.узСловарь.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.КодСообщения = КодСообщенияИзМакета;
			МенеджерЗаписи.КодЯзыка = КодЯзыкаИзМакета;
			МенеджерЗаписи.ТекстЯзыка = пТекстЯзыка;
			МенеджерЗаписи.ИмяЭлемента = пИмяЭлемента;
			МенеджерЗаписи.ОбъектЛокализации = пОбъектЛокализации;
			МенеджерЗаписи.Записать();
			
			НомерКолонки = НомерКолонки + 1;
		Конеццикла;
	КонецЦикла;
КонецПроцедуры 

Процедура ЗаполнитьСловарьПоКодамСообщений(МассивКодовСообщений) Экспорт
	
	узМакетСловарь = ПолучитьОбщийМакет("узСловарьПоУмолчанию");
	
	НомерКолонкиЯзыки = 4;
	
	МассивКодовЯзыка = Новый Массив();
	Для НомерКолонки = НомерКолонкиЯзыки По узМакетСловарь.ШиринаСтраницы Цикл
		КодЯзыкаИзМакета = СокрЛП(узМакетСловарь.Область(1,НомерКолонки).Текст);
		Если НЕ ЗначениеЗаполнено(КодЯзыкаИзМакета) Тогда
			Продолжить;
		Конецесли;
		МассивКодовЯзыка.Добавить(КодЯзыкаИзМакета);
	КонецЦикла;
	
	Для НомерСтроки = 2 По узМакетСловарь.ВысотаТаблицы Цикл
		
		КодСообщенияИзМакета = Число(СокрЛП(узМакетСловарь.Область(НомерСтроки,1).Текст));
		
		Если МассивКодовСообщений.Найти(КодСообщенияИзМакета) = Неопределено Тогда
			Продолжить;
		Конецесли;
		
		пИмяЭлемента = СокрЛП(узМакетСловарь.Область(НомерСтроки,2).Текст);
		пОбъектЛокализации = СокрЛП(узМакетСловарь.Область(НомерСтроки,3).Текст);
		
		НомерКолонки = НомерКолонкиЯзыки;
		Для каждого КодЯзыкаИзМакета из МассивКодовЯзыка цикл
			пТекстЯзыка = СокрЛП(узМакетСловарь.Область(НомерСтроки,НомерКолонки).Текст);	
			
			//Если НЕ ЗначениеЗаполнено(пТекстЯзыка) Тогда 
			//	Продолжить;
			//Конецесли;
			
			МенеджерЗаписи = РегистрыСведений.узСловарь.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.КодСообщения = КодСообщенияИзМакета;
			МенеджерЗаписи.КодЯзыка = КодЯзыкаИзМакета;
			МенеджерЗаписи.ТекстЯзыка = пТекстЯзыка;
			МенеджерЗаписи.ИмяЭлемента = пИмяЭлемента;
			МенеджерЗаписи.ОбъектЛокализации = пОбъектЛокализации;
			МенеджерЗаписи.Записать();
			
			НомерКолонки = НомерКолонки + 1;
		Конеццикла;
	КонецЦикла;
КонецПроцедуры 


Процедура ВыполнитьЛокализацию(Элементы,МассивКодовСообщений) Экспорт
	
	Если РусскийЯзыкУПользователя() Тогда
		Возврат;
	Конецесли;
	
	СтруктураСообщений = узОбщийМодульСервер.ПолучитьСтруктуруСообщений(МассивКодовСообщений);
	
	Для каждого ЭлСтруктураСообщений из СтруктураСообщений цикл
		пИмяЭлемента = ЭлСтруктураСообщений.Ключ;
		Элементы[пИмяЭлемента].Заголовок = ЭлСтруктураСообщений.Значение;		
	Конеццикла;	
КонецПроцедуры 