<?xml version="1.0" encoding="UTF-8"?>
<Rights xmlns="http://v8.1c.ru/8.2/roles" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="Rights" version="2.8">
	<setForNewObjects>false</setForNewObjects>
	<setForAttributesByDefault>true</setForAttributesByDefault>
	<independentRightsOfChildObjects>false</independentRightsOfChildObjects>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.ПоказыватьОповещение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Resource.НаЧтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.TabularSection.ДополнительныеСведения.Attribute.Свойство</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиПисьма.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.Пользователи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ДанныеУспешноЗагружены</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.РезультатВыполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Редактирует</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиСкрытыхКопий.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Дата</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.Dimension.Папка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ПодписанЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.AddressingAttribute.ДополнительныйОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.КоличествоОбъектовНесопоставленных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.БлокировкаРаботыПользователей.Attribute.СообщениеДляПользователей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаСортировки.Attribute.ИмяПоля</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ДатаОтправления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Удалить_Рассмотрено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Том</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.УдалитьКлючОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.ДатаОкончания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ХранимыеФайлыВерсий</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("РегистрСведений.ХранимыеФайлыВерсий", "", "",
"",
"",
"Объект","Т.ВерсияФайла.Владелец.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.Размещение.Attribute.УдалитьНазвание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Удалить_Рассмотрено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.Attribute.РольИсполнителя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Редактирует</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ДатаПолучения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаНеутвержденныхСвязей.Attribute.УникальныйИдентификаторПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.НаборыЗначенийДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ДатаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Выполнено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.СписокПолучателейКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FILEСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.УдалитьПароль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ПрефиксИнформационнойБазыИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Attribute.ОписаниеДатыЗапрета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ТекстHTML</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.НаборыЗначенийДоступа.Attribute.Чтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Изменил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.АбонентПредставление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.СпособSMTPАутентификации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.ValueType</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.РазделыДатЗапретаИзменения.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.Attribute.РегламентноеЗаданиеGUID</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.EMAILУчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.Attribute.АдресТолькоРоссийский</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ПравилаXML</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ГрупповоеИзменениеРеквизитов.Attribute.ИспользуютсяДопСведения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Resource.Путь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.ValueType</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеПорт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ГрупповоеИзменениеРеквизитов.Attribute.ПрерыватьПриОшибке</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFILE.Attribute.FILEСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.Размещение.Attribute.УдалитьПредопределенная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.УчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.Dimension.Объект</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.Resource.ДатаОкончания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Модификатор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.УдалитьПарольSMTP</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ПоляТаблицы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ЗагружатьДанныеВРежимеОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFILE.Attribute.ШаблонИмениФайлаСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаEMAIL.Attribute.EMAILУчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиПисьма.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОбъектыПоСсылкеЗагружатьБезПометкиУдаления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Resource.ДатаЗапрета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаНеутвержденныхСвязей.Attribute.УникальныйИдентификаторИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.AddressingAttribute.ОсновнойОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.Dimension.ОсновнойОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Страна</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.ЭтоДополнительноеСведение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.TabularSection.ДополнительныеСведения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.СписокПолучателейКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.РегламентноеЗаданиеGUID</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.КодНовогоУзлаВторойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникПоле3</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ТипТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Завершен</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИмяПланаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.СписокИспользуемыхПолей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ИмяТаблицыПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.НастроитьПрава</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.Attribute.КодАльфа2</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.НаборыЗначенийДоступа.Attribute.Чтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ЗадаватьВопросПриЗагрузкеДанныхПриОткрытииОбработки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ПодписанЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ВидыДоступа.Attribute.ВидДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.Данные</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ДатаНачала</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ОтправительПредставление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Подпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяВременногоФайлаПротоколаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Удалить_Рассмотрено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FILEКаталогОбменаИнформацией</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Dimension.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.Участники</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.КомуВыданСертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТипУдаленияРегистрацииИзмененийДляУзловОбменаПослеВыгрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.КлючВарианта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Редактирует</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Dimension.УникальныйИдентификаторИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ДатаОкончания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаНеутвержденныхСвязей.Attribute.ТипПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.Attribute.Тип</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.НаборыЗначенийДоступа.Attribute.НомерНабора</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.Подсказка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ПользовательИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.УстановившийПодпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.Размещение.Attribute.УдалитьПодсистема</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Назначение.Attribute.УдалитьПолноеИмяОбъектаМетаданных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ИмяФайлаСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиОтвета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ФлагОшибки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.УстановившийПодпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.СписокУчастников</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаПротоколаОбменаЗагрузка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ЗначенияДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.НаборыЗначенийДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникПоле1</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Тема</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КоличествоОбработанныхОбъектовДляОбновленияСтатуса</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.НаборыЗначенийДоступа.Attribute.Чтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ПутьКФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ИсточникОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.НаборыЗначенийДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Содержание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.TabularSection.НастройкиОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ИспользоватьДляОтправки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Версия2Разряд</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.РезультатОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВерсииФайлов.Command.ОткрытьВерсииФайла</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.TabularSection.НаборыЗначенийДоступа.Attribute.Чтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Зашифрован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.TabularSection.НастройкиОбмена.Attribute.ВыполняемоеДействие</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.ДатаНачала</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.КоличествоОбъектовВИсточнике</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.НаборыЗначенийДоступа.Attribute.НомерНабора</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ВидыДоступа.Attribute.ВидДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.Участники.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Идентификатор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ГруппаИсполнителейЗадач</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ИмяМакетаПравил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОткрыватьПротоколыОбменаПослеВыполненияОпераций</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Dimension.УникальныйИдентификаторПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.КодПользователяСервераОбновлений</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникПоле5</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.Участники.Attribute.КакСвязаться</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ОдинКоМногим</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ТипХраненияФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Редактирует</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.СписокПолучателейПисьма</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.Resource.ЕстьФайлы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ТипИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ВидыДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ИмяПланаОбменаИзПравил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиПисьма.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.Executed</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.RoutePoint</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.BusinessProcess</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.ЗначенияПолей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникПоле2</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ВидТранспортаСообщенийОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяСервераИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиПисьма.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ФайлОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.СтатусИзвлеченияТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.Dimension.ДействиеПриОбмене</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FILEСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ИсточникПравил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ВидыДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.КодЗадачиПланировщика</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.Размещение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиПисьма.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.Resource.Путь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ИдентификаторНаСервере</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ИмяФайлаПравил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.ФорматСвойства</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.SMTPАутентификация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КаталогИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ТекстХранилище</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ОставлятьКопииСообщенийНаСервере</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.РежимОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВыводВПротоколСообщенийОбОшибках</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.Attribute.ИдентификаторПользователяИБ</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.БезопасныйРежим</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.Resource.ХранимыйФайл</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Resource.РаспространяетсяВИерархии</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ТекстХранилище</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.Attribute.РедактированиеТолькоВДиалоге</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОбработкиНастройкиВыгрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.Resource.РезультатВыполненияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.БлокировкаРаботыПользователей.Attribute.ОкончаниеДействияБлокировки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.НаборыЗначенийДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Проверяющий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаEMAIL.Attribute.ШаблонИмениФайлаСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ВариантРаботыМастера</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.НомерДискаИТС</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ИдентификаторСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.Dimension.Исполнитель</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.НаборыЗначенийДоступа.Attribute.Изменение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Dimension.Таблица</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Том</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаОбработчиковСобытий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КоличествоЭлементовВТранзакцииПриВыгрузкеДляПлановОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.ВидТранспортаСообщенийОбменаПоУмолчанию</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFILE.Attribute.ПарольАрхиваСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаEMAIL.Attribute.EMAILСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.АутентификацияWindowsИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Удалить_РассмотретьПосле</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникПоле5</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.СтатусИзвлеченияТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.СрокИсполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТаблицаПравилВыгрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ТипИсточникаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТипИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.Attribute.Профиль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеПользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ПоляПоиска</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.ДатаЗавершения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.ШаблонИмениФайлаСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.Dimension.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ЭтоНастройкаРаспределеннойИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Расширение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Файлы.Command.РедактируемыеФайлы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Версия</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.НаборыЗначенийДоступа.Attribute.НомерНабора</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.НеВыводитьНикакихИнформационныхСообщенийПользователю</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ВнутреннийЗаголовок</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonForm.НастройкиПравОбъектов</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ДатаМодификацииУниверсальная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.EMAILМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.Dimension.ПрисоединенныйФайл</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.Dimension.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеПароль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ТипТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаСортировки.Attribute.Использование</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Кодировка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.УдалитьОтветственныйЗаОбработкуПисем</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.Пользователи.Attribute.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИспользоватьПараметрыТранспортаFILE</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.Resource.ИспользоватьЗаполнениеОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КоличествоОбъектовНаТранзакцию</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.ВидимостьПоУмолчанию</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИспользоватьПараметрыТранспортаEMAIL</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиСкрытыхКопий.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВыводВОкноСообщенийИнформационныхСообщений</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ДатаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ВладелецФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.EMAILСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Файлы.Command.Файлы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникПоле2</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.НаборыЗначенийДоступа.Attribute.Изменение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.СохраненныеНастройки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Наименование</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.Роли</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ДатаВремяОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИмяФайлаНастроекСинхронизацииДанныхДляЗагрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Подпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.Attribute.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.Dimension.ДополнительныйОтчетИлиОбработка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаВнешнейОбработкиОбработчиковСобытий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Вид</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ИдентификаторСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.Attribute.ИспользоватьРегламентноеЗадание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.Attribute.Использование</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Исполнитель</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.ПарольАрхиваСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.СрокИсполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.СтатусИзвлеченияТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.TabularSection.НастройкиОбмена.Attribute.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиПисьма</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ПравилаЗачитанные</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.НеЗадаватьВопросПриЗагрузкеДанныхПриОткрытииОбработки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ЗначенияДоступа.Attribute.ВидДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.АдресЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.TabularSection.Состав</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиКопий.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИспользоватьДляФормыОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ПортСервераИсходящейПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСоединениеМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.АбонентКакСвязаться</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Тема</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ЗаписыватьРегистрыНаборамиЗаписей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Подпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Attribute.ОбъектВыгруженПоСсылке</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Стартован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Удалить_Рассмотрено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.НаборыЗначенийДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.TabularSection.НаборыЗначенийДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.Dimension.УдалитьТипОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.НомерТелефонаБезКодов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеПассивноеСоединение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Dimension.ИмяПланаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСоединениеПорт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ПодписанЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.Attribute.ВидТранспортаСообщенийОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.ТипОтчета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.СинхронизироватьПоИдентификатору</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиОтвета.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.МестоПроведенияВстречи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ТипХраненияФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Состояние</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ИдентификаторыОснований</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ВидыДоступа.Attribute.ВсеРазрешены</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ДатаСоздания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Resource.ИнформацияОПравилах</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ИмяФайлаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ИдентификаторОснования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.РежимОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОбработкиНастройкиЗагрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.СерверВходящейПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Удалить_РассмотретьПосле</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ДатаПринятияКИсполнению</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ИдентификаторОснования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ЕстьВложения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ТипХраненияФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Dimension.БизнесПроцесс</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.EMAILМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ЗначенияДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ТипПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.Участники.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.ПометкаУдаления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.НомерИтерации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.Attribute.ИмяВременногоКаталогаСообщенийОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FILEКаталогОбменаИнформацией</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.Resource.ДатаНачала</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиОтвета.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИмяФайлаНастроекСинхронизацииДанных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.Dimension.Свойство</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТаблицаНастройкиПараметров</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.Resource.Номер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаНеутвержденныхСвязей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КомментарийПриВыгрузкеДанных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Назначение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ПутьКФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.ГлавнаяЗадача</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Resource.ДатаПомещенияВРабочийКаталог</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ТипПриемникаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиПисьма</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.Dimension.РольИсполнителя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Resource.УникальныйИдентификаторИсточникаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ДатаСоздания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТаблицаПравилОчистки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиОтвета.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Расширение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ГрупповоеИзменениеРеквизитов.Attribute.ИзменятьВТранзакции</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.Type</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DocumentJournal.Взаимодействия.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВерсияПлатформыИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ЭтоУдалениеОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ВидыДоступа.Attribute.ВсеРазрешены</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.КоличествоОбъектовВПриемнике</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.АрхивироватьФайл</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ПользовательSMTP</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеПуть</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.СертификатыШифрования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.БлокировкаРаботыПользователей.Attribute.КодДляРазблокировки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиКопий.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВыгружатьТолькоРазрешенные</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.МногострочноеПолеВвода</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ТекстХранилище</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.КонвертацияОбъектовРаспределенныхИнформационныхБаз.Attribute.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ИмяТаблицыПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.УдалитьИсключенияБыстрогоДоступа.Attribute.УдалитьПользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ИспользоватьРасписаниеДляПроверкиОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ЗапомнитьПарольСервераОбновлений</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Расширение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ДатаСоздания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.Resource.ИспользоватьСозданиеСвязанныхОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ГрупповоеИзменениеРеквизитов.Attribute.ИспользуютсяДопРеквизиты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Изменил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разделы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Входящий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ИспользоватьПредварительныйПросмотр</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.Resource.Доступно</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВестиДополнительныйКонтрольЗаписиВXML</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.TabularSection.НаборыЗначенийДоступа.Attribute.Изменение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ИспользоватьДляПолучения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.AddressingAttribute.Исполнитель</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ВладелецФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ВосстанавливатьИнформационнуюБазу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВерсияПравилОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ИмяФайлаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ПутьКЛокальномуФайлуОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияОбменовДанными.Resource.ДатаОкончания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Разделы.Attribute.УдалитьИмяРаздела</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ТипХраненияФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.КоличествоОбъектовСопоставленных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.Ключ</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ДатаСоздания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.TabularSection.УдалитьИсключенияБыстрогоДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ТипХраненияФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFILE.Attribute.FILEКаталогОбменаИнформацией</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.Attribute.МаксимальныйРазмер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Подпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.КомуВыданСертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ОтправительАдрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОбрезатьСтрокиСправа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИспользоватьТранзакции</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиОтвета.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.РезультатВыполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Dimension.Объект</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.Attribute.ПолныйПутьLinux</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ВремяОжидания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ДатаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПапкиФайлов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениям("Справочник.ПапкиФайлов", "", "",
"НастройкиПрав", "Ссылка", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениям("Справочник.ПапкиФайлов", "", "",
"НастройкиПрав", "Ссылка", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениям("Справочник.ПапкиФайлов", "", "",
"НастройкиПрав", "Ссылка", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","", "","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ПарольАрхиваСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ТекстХранилище</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ИмяКаталогаРезервнойКопииИБ</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.Участники.Attribute.ПредставлениеКонтакта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Удалить_РассмотретьПосле</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ТипОбъектаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ИмяФайлаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиСкрытыхКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИспользоватьОтборПоДатеДляВсехОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Resource.ВРабочемКаталогеВладельца</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.АдресЭлектроннойПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Dimension.Версия</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.СертификатыШифрования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.КомуВыданСертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.Attribute.РеквизитДопУпорядочивания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.УчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ПутьКФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ЗаписыватьВИнформационнуюБазуТолькоИзмененныеОбъекты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.Attribute.ИдентификаторОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ИдентификаторыОснований</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.Attribute.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ФлагРежимОтладкиОбработчиков</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Подпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.Attribute.ИдентификаторПользователяИБ</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ПоляТаблицыПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаПравилОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ИмяФайлаОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеПользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.Attribute.НомерОтправленного</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.Dimension.ДействиеПриОбмене</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеНастройкиДоступаКОбработкам.Dimension.ИдентификаторКоманды</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.Attribute.ТипыДополнительногоОбъектаАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ПроцентСопоставленияОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Редактирует</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Подтверждено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ЗначенияДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.СрокПроверки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.Dimension.ДополнительныйОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Регион</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиОтвета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Attribute.ИспользоватьФильтрВыборочнойРегистрацииОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.НаборыЗначенийДоступа.Attribute.Изменение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ПриемникПоле4</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Dimension.ВидПравил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonForm.НастройкаОсновногоРабочегоКаталога</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.УдалитьВПредставлениеВключатьИмяПользователя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ТекстХранилище</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ДатаНачала</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиСкрытыхКопий.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ПарольИнформационнойБазыДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ДатаМодификацииУниверсальная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.РазмерФайлаОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Наименование</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Dimension.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.РасписаниеПроверкиНаличияОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.СертификатыШифрования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.Attribute.ИмяПланаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ДатаВыгрузкиДанных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникПоле1</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаНеутвержденныхСвязей.Attribute.ТипИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Вид</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаEMAIL.Attribute.EMAILМаксимальныйДопустимыйРазмерСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.Resource.Значение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ПутьКФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.НепосредственноеЧтениеВИБПриемнике</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ИмяФайлаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.БлокировкаРаботыПользователей.Attribute.НачалоДействияБлокировки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ВерсияДляОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Том</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.Attribute.Вес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.ValueType</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ОбъектыАдресацииЗадач.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИмяФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Dimension.Узел</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиОтвета.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.НаборыЗначенийДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ЭтоИнтерактивныйРежим</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.Attribute.УдалитьТипОбъектовАвторизации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Dimension.ТипПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ВладелецФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Версия4Разряд</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.Attribute.ДополнительныйОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Изменил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.НаборыЗначенийДоступа.Attribute.Чтение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ОтправительПредставление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗначенияСвойствОбъектов.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ПовторныйЗапуск</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяИнформационнойБазыНаСервереДляПодключения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.УдалитьПарольАрхиваСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.TabularSection.ДополнительныеРеквизиты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ИмяФайлаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ПортСервераВходящейПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.РежимОтладкиАлгоритмов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ПарольДляРаспаковкиФайлаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.EMAILСжиматьФайлИсходящегоСообщения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Зашифрован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ДатаМодификацииУниверсальная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.СтатусПисьма</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ПериодХраненияСообщенийНаСервере</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>CommonCommand.ПрисоединенныеФайлы</name>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ЛокальныйОтносительныйКаталог</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИспользоватьТранзакцииПриВыгрузкеДляПлановОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиКопий.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ТехническаяИнформацияОбОшибке</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.TabularSection.Состав</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.Resource.Макет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Версия1Разряд</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.НомерТелефона</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.Attribute.УдалитьПароль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.TabularSection.НаборыЗначенийДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.EMAILУчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.AddressingAttribute.РольИсполнителя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ХранилищеОбработки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.КомуВыданСертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ЗагрузкаПравилРегистрацииОбъектов.Attribute.ИмяПланаОбменаДляЗагрузки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.ДатаСоздания</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.НаборыДополнительныхРеквизитовИСведений.TabularSection.ДополнительныеРеквизиты.Attribute.Свойство</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеПароль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Публикация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ДатаМодификацииУниверсальная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.Dimension.ТипФормы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ДописыватьДанныеВПротоколОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Расширение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.Attribute.ИспользуетсяСОбъектамиАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.TabularSection.ПолучателиПисьма.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиКопий.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ПарольСервераОбновлений</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ПредметСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПапкиФайлов.TabularSection.ДополнительныеРеквизиты.Attribute.ТекстоваяСтрока</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ОтправительКонтакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОбработчикиСобытийЧитаемИзФайлаПравилОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.СписокУчастников</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Dimension.Право</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.Attribute.ПорядокЗаполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.ДополнительныеРеквизитыИСведения.Attribute.УдалитьСклоненияПредмета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.СостояниеБизнесПроцесса</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Текст</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПравилаДляОбменаДанными.Attribute.ПравилаЗагружены</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ДатаМодификацииУниверсальная</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Удалить_РассмотретьПосле</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.УстановившийПодпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеПассивноеСоединение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.ПутьКФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ТипПриемникаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ТипИсточникаСтрокой</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.Attribute.ТипыОсновногоОбъектаАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.ИмяПользователя</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.КомуВыданСертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДополнительныеСведения.Dimension.Объект</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Тип</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиКопий.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НаличиеПрисоединенныхФайлов.Dimension.ОбъектСФайлами</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.TabularSection.Состав.Attribute.ВнешнийПользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Изменил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыПользователей.TabularSection.Состав.Attribute.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВидыКонтактнойИнформации.Attribute.МожноИзменятьСпособРедактирования</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.УникальныйИдентификаторПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ПостроительОтчета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.Dimension.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникПоле4</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ДатаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.Attribute.ПолныйПутьWindows</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ИндексКартинки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.Attribute.ВсеОбъектыАвторизации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.УстановившийПодпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Том</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.ValueType</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>ChartOfCharacteristicTypes.УдалитьВидыДоступа.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ЗначенияДоступа.Attribute.ЗначениеДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.FTPСоединениеПуть</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НазначениеДополнительныхОбработок.Resource.ИспользоватьОтчеты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Версия3Разряд</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.Attribute.УстановитьРолиНепосредственно</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ВладелецФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.НаборыЗначенийДоступа.Attribute.НомерНабора</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СостоянияУспешныхОбменовДанными.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.ДатаЗавершения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Кодировка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.ВладелецФайла</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВнешниеПользователи.Attribute.ОбъектАвторизации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.УдалитьFTPСоединениеПароль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.НаборыЗначенийДоступа.Attribute.Изменение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.КомментарийПриЗагрузкеДанных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.НуженФайлОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ОптимизированнаяЗаписьОбъектов</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов</name>
		<right>
			<name>Read</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТомаХраненияФайлов.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.СтатусИзвлеченияТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.Attribute.КодАльфа3</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ТаблицаПравилКонвертации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Удалить_РассмотретьПосле</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.Пометка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.АдресЭлектроннойПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.Started</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.HeadTask</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.Completed</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.Attribute.ПоставляемыйПрофильИзменен</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСоединениеПользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.TabularSection.Команды.Attribute.ВариантЗапуска</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.Attribute.Расширение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСоединениеПассивноеСоединение</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Resource.Размер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.КонвертацияОбъектовРаспределенныхИнформационныхБаз.Attribute.КоличествоЭлементовВТранзакции</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоответствияОбъектовИнформационныхБаз.Dimension.ТипИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Важность</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.АбонентКонтакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ПарольДляСжатияФайлаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДатыЗапретаИзменения.Dimension.Раздел</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.Resource.ДатаПолучения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.УзелИнформационнойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ИмяТипаОбъектаТаблицыИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Зашифрован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Том</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.Attribute.СтатусИзвлеченияТекста</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.КонвертацияОбъектовРаспределенныхИнформационныхБаз.Attribute.КлючСообщенияЖурналаРегистрации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаFTP.Attribute.FTPСоединениеПорт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ИспользоватьПараметрыТранспортаFTP</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.НаборыЗначенийДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ОбщиеНастройкиУзловИнформационныхБаз.Resource.ВыполнитьКорректировкуИнформацииСопоставления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.СписокПолейТаблицы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.Параметры</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.НаборыЗначенийДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.БлокировкаРаботыПользователей.Attribute.ВременноЗапретитьРаботуПользователей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.Текст</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ПроверятьНаличиеОбновленияПриЗапуске</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.ДатаПодписи</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.ЕстьВложения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.ТекстHTML</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.Dimension.Идентификатор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПользовательскиеМакетыПечати.Dimension.ИмяМакета</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.ПрефиксИнформационнойБазыИсточникаУстановлен</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.ПодписанЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.ИсточникПоле3</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.Attribute.Изменил</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Файлы</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("Справочник.Файлы", "", "",
"",
"",
"Объект","Т.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Insert</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("Справочник.Файлы", "", "",
"",
"",
"Объект","Т.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")
</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("Справочник.Файлы", "", "",
"",
"",
"Объект","Т.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")
</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveInsert</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.Ответственный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.Участники</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ДанныеУспешноЗагружены</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ПринятаКИсполнению</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ДанныеБизнесПроцессов.Resource.Номер</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.TabularSection.ИнформацияСтатистики.Attribute.ЭтоУдалениеОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиКопий.Attribute.Адрес</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Сертификат</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяВременногоФайлаОбработчиковСобытий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВерсииФайлов</name>
		<right>
			<name>Read</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("Справочник.ВерсииФайлов", "", "",
"",
"",
"Объект","Т.Владелец.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")
</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>Update</name>
			<value>true</value>
			<restrictionByCondition>
				<condition>#ПоЗначениямИНаборамРасширенный("Справочник.ВерсииФайлов", "", "",
"",
"",
"Объект","Т.Владелец.ВладелецФайла","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","", "","","")</condition>
			</restrictionByCondition>
		</right>
		<right>
			<name>View</name>
			<value>true</value>
		</right>
		<right>
			<name>Edit</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveSetDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InteractiveClearDeletionMark</name>
			<value>true</value>
		</right>
		<right>
			<name>InputByString</name>
			<value>true</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникСозданияОбменаДанными.Attribute.НаименованиеЭтойБазы</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.Информация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ТелефонныйЗвонокПрисоединенныеФайлы.TabularSection.СертификатыШифрования.Attribute.Представление</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Предмет</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ПрисоединенныеФайлы.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.ВыслатьОтчетНаПочту</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ТранспортСообщенийОбменаEMAIL.Attribute.ПарольАрхиваСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.РолиИсполнителей.Attribute.ИспользуетсяБезОбъектовАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИдентификаторыПолученныхЭлектронныхПисем.Dimension.УчетнаяЗапись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.УстановившийПодпись</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыДоступа.TabularSection.ЗначенияДоступа.Attribute.ВидДоступа</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.СерверИсходящейПочты</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.TabularSection.Участники.Attribute.КакСвязаться</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.НастройкаАвтоматическойЗагрузкиДанных</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыИсполнителейЗадач.Attribute.ОсновнойОбъектАдресации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.УдалитьПредставлениеОбъекта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.StandardAttribute.Active</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.StandardAttribute.LineNumber</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.StandardAttribute.Recorder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.РабочиеКаталогиФайлов.StandardAttribute.Period</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Версия</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>BusinessProcess.Задание.Attribute.НаПроверке</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВстречаПрисоединенныеФайлы.Attribute.Зашифрован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НастройкиТранспортаОбмена.Resource.FTPСоединениеПуть</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.Attribute.СписокПолучателейПисьма</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВыполнитьОбменДаннымиВОптимизированномФормате</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.Зашифрован</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.TabularSection.Роли</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Predefined</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.IsFolder</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Owner</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Parent</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Description</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.StandardAttribute.Code</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоВходящееПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Отпечаток</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.Attribute.СоздаватьРезервнуюКопию</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ГруппыВнешнихПользователей.TabularSection.Роли.Attribute.УдалитьРоль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.Роли.Attribute.УдалитьРоль</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.Встреча.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.TabularSection.ПолучателиОтвета.Attribute.Контакт</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.ДоменноеИмяСервера</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СценарииОбменовДанными.TabularSection.НастройкиОбмена.Attribute.ВидТранспортаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.StandardAttribute.Posted</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.StandardAttribute.Ref</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.StandardAttribute.DeletionMark</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.StandardAttribute.Date</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоВходящее.StandardAttribute.Number</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ПутьКЛокальномуФайлу</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.Описание</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЭлектронноеПисьмоИсходящее.Attribute.СписокПолучателейСкрытыхКопий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПомощникИнтерактивногоОбменаДанными.Attribute.ИмяФайлаСообщенияОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ИсполнителиЗадач.Attribute.ГруппаИсполнителейЗадач</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.СтраныМира.Attribute.НаименованиеПолное</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.ДатаИсполнения</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ВариантыОтчетов.Attribute.Настройки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ЗапланированноеВзаимодействие.TabularSection.Участники.Attribute.ПредставлениеКонтакта</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.ПутьКФайлуОбновления</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ФлагРежимОтладки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаСортировки.Attribute.НаправлениеСортировки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.Attribute.Удалить_Рассмотрено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.Attribute.ПодписанЭП</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.ФайлыВРабочемКаталоге.Dimension.Пользователь</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ЗапланированноеВзаимодействиеПрисоединенныеФайлы.TabularSection.ЭлектронныеПодписи.Attribute.Комментарий</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.Attribute.ПоляПоискаТаблицыПриемника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.СоставыГруппПользователей.Dimension.ГруппаПользователей</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ПрофилиГруппДоступа.TabularSection.ВидыДоступа.Attribute.Предустановленный</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.НомераОтсканированныхФайлов.Dimension.Владелец</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ИмяФайлаПротоколаОбмена</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.УниверсальныйОбменДаннымиXML.Attribute.ВыводВПротоколИнформационныхСообщений</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Поставщик</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.ПоискИУстановкаОбновлений.TabularSection.ДоступныеОбновления.Attribute.Конфигурация</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаСортировки</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Task.ЗадачаИсполнителя.Attribute.Автор</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.ДополнительныеОтчетыИОбработки.Attribute.ИспользоватьДляФормыСписка</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.Пользователи.TabularSection.КонтактнаяИнформация.Attribute.Город</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>DataProcessor.СопоставлениеОбъектовИнформационныхБаз.TabularSection.ТаблицаАвтоматическиСопоставленныхОбъектов.Attribute.УникальныйИдентификаторИсточника</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Catalog.УчетныеЗаписиЭлектроннойПочты.Attribute.СпособPOP3Аутентификации</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>InformationRegister.УдалитьПраваПоЗначениямДоступа.Resource.Запрещено</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<object>
		<name>Document.ТелефонныйЗвонок.TabularSection.НаборыЗначенийДоступа.Attribute.НомерНабора</name>
		<right>
			<name>View</name>
			<value>false</value>
		</right>
		<right>
			<name>Edit</name>
			<value>false</value>
		</right>
	</object>
	<restrictionTemplate>
		<name>ПоЗначениям</name>
		<condition>// ПоЗначениям(Таблица, -, Модификатор, В1,П1, В2,П2, ...,  В(n), П(n)).
// № параметра:      1, 2,           3,  4, 5,  6, 7, ..., 2+n*2,3+n*2.
// Читается так: "ограничение доступа по значениям".
// Параметры:
//     Таблица   - Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника. 
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     В(n)      - Вид доступа - имя вида доступа, например, "Организации". Для полей составного типа, с целью повышения
//                  производительности, лучше указать несколько имен, например, "Организации,ГруппыФизическихЛиц",
//                  чем использовать несколько блоков параметров, с одним и тем же именем поля.
//                  Специальные виды доступа "Условие", "НастройкиПрав", "ПравоЧтения", "ПравоИзменения"
//                  можно использовать только отдельно.
//                 Когда В(n) = "Условие" (или ""), тогда П(n) содержит строку условия на языке запросов, например
//                  "Т.Автор = &amp;АвторизованныйПользователь",
//                  "ТИПЗНАЧЕНИЯ(Т.Владелец) = ТИП(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" Или "ПравоИзменения",
//                  выполняется проверка наличия права на таблицу значения Т.П(n).
//     П(n)      - Поле проверяемого значения, кроме случая В(n) = "Условие" (или "").
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И &lt;Условие по группе параметров 2&gt; И ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениям("Документ.ПоступлениеТоваровИУслуг", "", "",
//      "Организации","Организация",
//      "Поставщики","Контрагент", "","", ...)

// Проверка правильности параметра Право.
#Если Не ("#Параметр(2)" = "Чтение"    Или "#Параметр(2)" = "Добавление" Или
          "#Параметр(2)" = "Изменение" Или "#Параметр(2)" = "Удаление"   Или "#Параметр(2)" = "")
      Или #ИмяТекущегоПраваДоступа &lt;&gt; "Чтение" И "#Параметр(2)"  = "Чтение"
      Или #ИмяТекущегоПраваДоступа  = "Чтение" И "#Параметр(2)" &lt;&gt; "Чтение" И "#Параметр(2)" &lt;&gt; "" #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Проверка правильности параметра ИмяТаблицы.
#Если "#Параметр(1)" &lt;&gt; #ИмяТекущейТаблицы #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверноеИмяТекущейТаблицы: "#Параметр(1)"
#КонецЕсли

// Проверка правильности параметра Модификатор.
#Если Не ("#Параметр(3)" = "НеОграничиватьДоступКГруппам" Или "#Параметр(3)" = "") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверныйМодификатор: #Параметр(3)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей и
// проверка использования хотя бы одного ограничения из указанных видов доступа.
#Если &amp;ОграничиватьДоступНаУровнеЗаписей
  И Не (Истина
      И ("#Параметр(4)" = "" И "#Параметр(5)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(4),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(4),"))
      И ("#Параметр(6)" = "" И "#Параметр(7)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(6),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),"))
      И ("#Параметр(8)" = "" И "#Параметр(9)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(8),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(8),"))
      И ("#Параметр(10)" = "" И "#Параметр(11)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(10),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(10),"))
      И ("#Параметр(12)" = "" И "#Параметр(13)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(12),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),"))
      И ("#Параметр(14)" = "" И "#Параметр(15)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(14),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(14),"))
      И ("#Параметр(16)" = "" И "#Параметр(17)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(16),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(16),"))
      И ("#Параметр(18)" = "" И "#Параметр(19)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(18),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),"))
      И ("#Параметр(20)" = "" И "#Параметр(21)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(20),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(20),"))
      И ("#Параметр(22)" = "" И "#Параметр(23)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(22),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(22),"))
      И ("#Параметр(24)" = "" И "#Параметр(25)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(24),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),"))
      И ("#Параметр(26)" = "" И "#Параметр(27)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(26),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(26),"))
      И ("#Параметр(28)" = "" И "#Параметр(29)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(28),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(28),"))
      И ("#Параметр(30)" = "" И "#Параметр(31)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(30),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),"))
      И ("#Параметр(32)" = "" И "#Параметр(33)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(32),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(32),"))
      И ("#Параметр(34)" = "" И "#Параметр(35)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(34),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(34),"))
       ) #Тогда

Т ГДЕ // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" #Тогда
	Т.ЭтоГруппа ИЛИ
#КонецЕсли

ИСТИНА В
(	// Проверка права пользователя на текущую таблицу в целом.
	// Права на таблицы формируются по составу ролей профиля группы доступа.
	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
	ИЗ
		Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
		ПО
			  СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
			И ИСТИНА В
			  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ
					РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
					ГДЕ
						  ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
						И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
					#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
						И ТаблицыГруппДоступа.Изменение
					#КонецЕсли
			  )
			И ГруппыДоступа.Ссылка В
			  (
				ВЫБРАТЬ
					ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
				ИЗ
					Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
					ПО
						  СоставыГруппПользователей.Пользователь = &amp;АвторизованныйПользователь
						И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
			  )
	ГДЕ
  ( // Поиск значений заданных полей в разрешенных значениях групп доступа (пользователей).

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(4)" = "Условие" Или "#Параметр(4)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	( #Параметр(5) )
#ИначеЕсли "#Параметр(4)" = "ПравоЧтения" Или "#Параметр(4)" = "ПравоИзменения" #Тогда
	  Т.#Параметр(5) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(5))
		#Если Не "#Параметр(4)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(4)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(5)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(5)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(4),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(4)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(4)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(4)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(4),") #Тогда
	
	 (
			ЕСТЬNULL(Т.#Параметр(5), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(4),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(4),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(5)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(4),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(5)
		#ИначеЕсли "Т.#Параметр(5)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(4)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(4)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(4),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(5)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(5)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(5))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#Иначе
	ИСТИНА
#КонецЕсли

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(6)" = "" И "#Параметр(7)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(6)" = "Условие" Или "#Параметр(6)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" Или "#Параметр(6)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(7) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(7))
		#Если Не "#Параметр(6)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(6)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(7)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(7)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(6),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(6)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(6)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(6)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(7), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(6),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(6),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(7)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(6),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(7)
		#ИначеЕсли "Т.#Параметр(7)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(6)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(6)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(6),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(7)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(7)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(7))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(8)" = "" И "#Параметр(9)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(8)" = "Условие" Или "#Параметр(8)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(9) )
#ИначеЕсли "#Параметр(8)" = "ПравоЧтения" Или "#Параметр(8)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(9) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(9))
		#Если Не "#Параметр(8)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(8)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(9)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(9)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(8),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(8)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(8)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(8)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(8),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(9), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(8),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(8),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(9)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(8),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(9)
		#ИначеЕсли "Т.#Параметр(9)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(8)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(8)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(8),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(9)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(9)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(9))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(10)" = "" И "#Параметр(11)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(10)" = "Условие" Или "#Параметр(10)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(11) )
#ИначеЕсли "#Параметр(10)" = "ПравоЧтения" Или "#Параметр(10)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(11) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(11))
		#Если Не "#Параметр(10)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(10)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(11)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(11)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(10),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(10)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(10)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(10)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(10),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(11), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(10),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(10),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(11)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(10),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(11)
		#ИначеЕсли "Т.#Параметр(11)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(10)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(10)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(10),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(11)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(11)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(11))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" Или "#Параметр(12)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" Или "#Параметр(12)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(13) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(13))
		#Если Не "#Параметр(12)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(12)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(13)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(13)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(12),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(12)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(12)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(12)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(13), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(12),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(12),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(13)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(12),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(13)
		#ИначеЕсли "Т.#Параметр(13)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(12)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(12)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(12),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(13)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(13)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(13))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(14)" = "" И "#Параметр(15)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(14)" = "Условие" Или "#Параметр(14)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(15) )
#ИначеЕсли "#Параметр(14)" = "ПравоЧтения" Или "#Параметр(14)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(15) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(15))
		#Если Не "#Параметр(14)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(14)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(15)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(15)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(14),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(14)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(14)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(14)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(14),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(15), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(14),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(14),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(15)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(14),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(15)
		#ИначеЕсли "Т.#Параметр(15)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(14)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(14)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(14),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(15)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(15)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(15))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(16)" = "" И "#Параметр(17)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(16)" = "Условие" Или "#Параметр(16)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(17) )
#ИначеЕсли "#Параметр(16)" = "ПравоЧтения" Или "#Параметр(16)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(17) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(17))
		#Если Не "#Параметр(16)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(16)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(17)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(17)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(16),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(16)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(16)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(16)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(16),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(17), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(16),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(16),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(17)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(16),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(17)
		#ИначеЕсли "Т.#Параметр(17)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(16)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(16)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(16),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(17)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(17)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(17))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" Или "#Параметр(18)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" Или "#Параметр(18)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(19) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(19))
		#Если Не "#Параметр(18)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(18)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(19)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(19)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(18),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(18)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(18)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(18)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(19), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(18),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(18),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(19)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(18),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(19)
		#ИначеЕсли "Т.#Параметр(19)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(18)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(18)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(18),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(19)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(19)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(19))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(20)" = "" И "#Параметр(21)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(20)" = "Условие" Или "#Параметр(20)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(21) )
#ИначеЕсли "#Параметр(20)" = "ПравоЧтения" Или "#Параметр(20)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(21) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(21))
		#Если Не "#Параметр(20)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(20)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(21)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(21)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(20),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(20)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(20)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(20)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(20),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(21), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(20),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(20),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(21)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(20),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(21)
		#ИначеЕсли "Т.#Параметр(21)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(20)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(20)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(20),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(21)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(21)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(21))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(22)" = "" И "#Параметр(23)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(22)" = "Условие" Или "#Параметр(22)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(23) )
#ИначеЕсли "#Параметр(22)" = "ПравоЧтения" Или "#Параметр(22)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(23) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(23))
		#Если Не "#Параметр(22)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(22)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(23)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(23)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(22),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(22)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(22)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(22)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(22),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(23), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(22),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(22),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(23)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(22),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(23)
		#ИначеЕсли "Т.#Параметр(23)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(22)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(22)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(22),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(23)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(23)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(23))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" Или "#Параметр(24)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" Или "#Параметр(24)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(25) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(25))
		#Если Не "#Параметр(24)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(24)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(25)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(25)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(24),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(24)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(24)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(24)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(25), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(24),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(24),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(25)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(24),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(25)
		#ИначеЕсли "Т.#Параметр(25)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(24)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(24)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(24),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(25)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(25)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(25))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(26)" = "" И "#Параметр(27)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(26)" = "Условие" Или "#Параметр(26)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(27) )
#ИначеЕсли "#Параметр(26)" = "ПравоЧтения" Или "#Параметр(26)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(27) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(27))
		#Если Не "#Параметр(26)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(26)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(27)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(27)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(26),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(26)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(26)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(26)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(26),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(27), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(26),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(26),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(27)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(26),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(27)
		#ИначеЕсли "Т.#Параметр(27)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(26)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(26)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(26),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(27)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(27)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(27))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(28)" = "" И "#Параметр(29)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(28)" = "Условие" Или "#Параметр(28)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(29) )
#ИначеЕсли "#Параметр(28)" = "ПравоЧтения" Или "#Параметр(28)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(29) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(29))
		#Если Не "#Параметр(28)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(28)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(29)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(29)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(28),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(28)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(28)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(28)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(28),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(29), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(28),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(28),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(29)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(28),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(29)
		#ИначеЕсли "Т.#Параметр(29)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(28)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(28)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(28),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(29)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(29)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(29))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" Или "#Параметр(30)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" Или "#Параметр(30)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(31) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(31))
		#Если Не "#Параметр(30)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(30)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(31)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(31)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(30),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(30)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(30)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(30)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(31), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(30),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(30),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(31)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(30),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(31)
		#ИначеЕсли "Т.#Параметр(31)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(30)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(30)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(30),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(31)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(31)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(31))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(32)" = "" И "#Параметр(33)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(32)" = "Условие" Или "#Параметр(32)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(33) )
#ИначеЕсли "#Параметр(32)" = "ПравоЧтения" Или "#Параметр(32)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(33) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(33))
		#Если Не "#Параметр(32)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(32)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(33)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(33)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(32),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(32)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(32)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(32)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(32),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(33), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(32),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(32),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(33)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(32),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(33)
		#ИначеЕсли "Т.#Параметр(33)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(32)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(32)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(32),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(33)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(33)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(33))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(34)" = "" И "#Параметр(35)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(34)" = "Условие" Или "#Параметр(34)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	И ( #Параметр(35) )
#ИначеЕсли "#Параметр(34)" = "ПравоЧтения" Или "#Параметр(34)" = "ПравоИзменения" #Тогда
	И Т.#Параметр(35) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(Т.#Параметр(35))
		#Если Не "#Параметр(34)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(34)" = "НастройкиПрав" #Тогда
	И
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(35)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = Т.#Параметр(35)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(34),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(34)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(34)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(34)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(34),") #Тогда
	И
	 (
			ЕСТЬNULL(Т.#Параметр(35), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(34),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(34),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = Т.#Параметр(35)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(34),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.#Параметр(35)
		#ИначеЕсли "Т.#Параметр(35)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(34)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(34)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(34),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = Т.#Параметр(35)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = Т.#Параметр(35)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(Т.#Параметр(35))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )
#КонецЕсли

  )
)
#КонецЕсли

</condition>
	</restrictionTemplate>
	<restrictionTemplate>
		<name>ПоЗначениямИНаборамРасширенный</name>
		<condition>// ПоЗначениямИНаборамРасширенный(Таблица, -, Модификатор, ПрисоединяемыеТаблицы, О, В1,П1,О1, В2,П2,О2,..., В(n), П(n), О(n)).
// № параметра:                         1, 2,           3,                     4, 5,  6, 7, 8,  9,10,11,...,3+n*3,4+n*3,5+n*3.
// Читается так: "ограничение доступа по значениям и наборам расширенный".
// Параметры:
//     Таблица   - Имя текущей таблицы, например "Документ.ПоступлениеТоваровИУслуг".
//     Модификатор - изменяет шаблон.
//                 1-й модификатор - строка "НеОграничиватьДоступКГруппам" указывает
//                  безусловно выбирать группы иерархического справочника.
//                 2-й модификатор - строка "РасширенноеИЛИ" указывает для ограничений,
//                  например, "ПоОрганизациям или ПоУчетнымЗаписям" делать расширенную
//                  проверку, при которой вариант настройки вида доступа в группах доступа
//                  "Все разрешены, без запрещенных" считается, как "Вид доступа не используется".
//                  Если этого модификатора нет, тогда результат проверки Истина, что приводит
//                  к итоговому результату Истина, если "Все разрешены, без запрещенных"
//                  хотя бы по одному из видов доступа (либо ПоОрганизациям, либо ПоУчетнымЗаписям).
//                  Модификатор имеет смысл только при проверке наборов значений доступа.
//                  Можно использовать комбинации модификаторов: "НеОграничиватьДоступКГруппам",
//                  "РасширенноеИЛИ", "НеОграничиватьДоступКГруппам,РасширенноеИЛИ".
//                 Других модификаторов в этой версии шаблона не предусмотрено.
//     ПрисоединяемыеТаблицы - текст присоедиения дополнительных таблиц на языке запросов, например,
//                 "ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.ОплатаПоставщикам КАК Т1
//                  ПО Т.Ссылка = Т1.Ссылка".
//                 Присоединение позволяет указать поля таблицы ОплатаПоставщикам, как поля основной таблицы
//                  для проверки их значений, как значений основной таблицы.
//                 Следует помнить, что при размножении строк в результате соединения, достаточно чтобы
//                  всего одна строка прошла условия проверки, т.е. результаты проверки строк объединяются по "ИЛИ".
//     О         - Начальные скобки "(".
//     В(n)      - Вид доступа - имя вида доступа, например, "Организации". Для полей составного типа, с целью повышения
//                  производительности, лучше указать несколько имен, например, "Организации,ГруппыФизическихЛиц",
//                  чем использовать несколько блоков параметров, с одним и тем же именем поля.
//                  Специальные виды доступа "Объект", "Условие", "НастройкиПрав", "ПравоЧтения", "ПравоИзменения"
//                  можно использовать только отдельно.
//                 Когда В(n) = "Условие" (или ""), Тогда П(n) содержит строку условия на языке запросов, например
//                   "Т.Автор = &amp;АвторизованныйПользователь",
//                   "ТИПЗНАЧЕНИЯ(Т.Владелец) = ТИП(Справочник.Организации)", где Т - псевдоним текущей таблицы.
//                 Когда В(n) = "ПравоЧтения" ИЛИ "ПравоИзменения",
//                   выполняется проверка наличия права на таблицу значения Т.П(n).
//                 Когда В(n) = "Объект" (или " "), то
//                   когда есть запись зависимости прав в регистре сведений ЗависимостиПравДоступа тогда
//                     выполняется проверка права чтения Т.П(n) и наборов значений доступа
//                     в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.П(n) для права чтения;
//                   иначе используется стандартное правило:
//                     когда Право = "Чтение" тогда выполняется проверка права чтения Т.П(n) и наборов значений доступа
//                       в регистре сведений НаборыЗначенийДоступа, считываемых по ссылке Т.П(n) для права чтения;
//                     когда Право = "Изменение" тогда выполняется проверка права изменения Т.П(n)
//                       и наборов значений доступа, считываемых по ссылке Т.П(n) для права изменения.
//     П(n)     - Поле проверяемого значения с псевдонимом, например "Т.Организация",
//                кроме случая В(n) = "Условие" (или "").
//     О(n)      - Логические операции "И", "ИЛИ" в сочетании с скобками "(", ")".
//  Примечение: максимальное количество одновременно проверяемых значений полей можно увеличить, изменив шаблон, но
// необходимо будет указывать все параметры шаблона, т.е. указывать пустые строки, когда количество полей меньше максимального.
//  Шаблон имеет структуру:
//     &lt;Соединение по таблице1&gt;  &lt;Соединение по таблице2&gt;  ... &lt;Соединение по таблице(m)&gt;
//     &lt;Общая часть условий&gt; &lt;Условие по группе параметров 1&gt; И/ИЛИ &lt;Условие по группе параметров 1&gt; И/ИЛИ ... &lt;Условие по группе параметров(n)&gt;
//  Пример:
//      ПоЗначениямИНаборамРасширенный("ЖурналДокументов.СкладскиеДокументы", "", "",
//      "",
//      "",
//      "Объект","Т.Ссылка","И",
//      "Объект","Т.ОсновнойДокумент","", "","","", ...)

// Проверка правильности параметра Право.
#Если Не ("#Параметр(2)" = "Чтение"    Или "#Параметр(2)" = "Добавление" Или
          "#Параметр(2)" = "Изменение" Или "#Параметр(2)" = "Удаление"   Или "#Параметр(2)" = "")
      Или #ИмяТекущегоПраваДоступа &lt;&gt; "Чтение" И "#Параметр(2)"  = "Чтение"
      Или #ИмяТекущегоПраваДоступа  = "Чтение" И "#Параметр(2)" &lt;&gt; "Чтение" И "#Параметр(2)" &lt;&gt; "" #Тогда
    // Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
    НеверноеПраво: #Параметр(2)
#КонецЕсли

// Проверка правильности параметра ИмяТаблицы.
#Если "#Параметр(1)" &lt;&gt; #ИмяТекущейТаблицы #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверноеИмяТекущейТаблицы: "#Параметр(1)"
#КонецЕсли

// Проверка правильности параметра Модификатор.
#Если Не (    "#Параметр(3)" = "НеОграничиватьДоступКГруппам"
          Или "#Параметр(3)" = "РасширенноеИЛИ"
          Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ"
          Или "#Параметр(3)" = "") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	НеверныйМодификатор: #Параметр(3)
#КонецЕсли

// Общая проверка использования ограничений доступа на уровне записей и
// проверка использования хотя бы одного ограничения из указанных видов доступа.
#Если &amp;ОграничиватьДоступНаУровнеЗаписей
  И Не (Истина
      И ("#Параметр(6)" = "" И "#Параметр(7)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(6),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),"))
      И ("#Параметр(9)" = "" И "#Параметр(10)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(9),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(9),"))
      И ("#Параметр(12)" = "" И "#Параметр(13)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(12),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),"))
      И ("#Параметр(15)" = "" И "#Параметр(16)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(15),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(15),"))
      И ("#Параметр(18)" = "" И "#Параметр(19)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(18),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),"))
      И ("#Параметр(21)" = "" И "#Параметр(22)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(21),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(21),"))
      И ("#Параметр(24)" = "" И "#Параметр(25)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(24),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),"))
      И ("#Параметр(27)" = "" И "#Параметр(28)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(27),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(27),"))
      И ("#Параметр(30)" = "" И "#Параметр(31)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(30),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),"))
      И ("#Параметр(33)" = "" И "#Параметр(34)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(33),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(33),"))
      И ("#Параметр(36)" = "" И "#Параметр(37)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(36),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(36),"))
      И ("#Параметр(39)" = "" И "#Параметр(40)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(39),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(39),"))
      И ("#Параметр(42)" = "" И "#Параметр(43)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(42),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(42),"))
      И ("#Параметр(45)" = "" И "#Параметр(46)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(45),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(45),"))
      И ("#Параметр(48)" = "" И "#Параметр(49)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(48),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(48),"))
      И ("#Параметр(51)" = "" И "#Параметр(52)" = ""
         Или &amp;ВидыДоступаСОтключеннымИспользованием = "Все"
           И Не СтрСодержит(",Условие,,НастройкиПрав,Объект, ,ПравоЧтения,ПравоИзменения,", ",#Параметр(51),")
         Или СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(51),"))
       ) #Тогда

Т ИЗ Т // Т - псевдоним текущей таблицы (выбран коротким, чтобы сократить количество символов в тексте параметра-условия на языке запросов).

// Присоединяемые таблицы к проверяемой строке текущей таблицы "Т".
#Параметр(4)

ГДЕ

// Безусловная выборка групп в иерархическом объекте метаданных (если нужно).
#Если "#Параметр(3)" = "НеОграничиватьДоступКГруппам" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
	Т.ЭтоГруппа ИЛИ
#КонецЕсли

ИСТИНА В
(	// Проверка права пользователя на текущую таблицу в целом.
	// Права на таблицы формируются по составу ролей профиля группы доступа.
	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
	ИЗ
		Справочник.ИдентификаторыОбъектовМетаданных КАК СвойстваТекущейТаблицы
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступа КАК ГруппыДоступа
		ПО
			  СвойстваТекущейТаблицы.ПолноеИмя = "#Параметр(1)"
			И ИСТИНА В
			  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ
					РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступа
					ГДЕ
						  ТаблицыГруппДоступа.Таблица       = СвойстваТекущейТаблицы.Ссылка
						И ТаблицыГруппДоступа.ГруппаДоступа = ГруппыДоступа.Ссылка
					#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
						И ТаблицыГруппДоступа.Изменение
					#КонецЕсли
			  )
			И ГруппыДоступа.Ссылка В
			  (
				ВЫБРАТЬ
					ГруппыДоступаПользователи.Ссылка КАК ГруппаДоступа
				ИЗ
					Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
					ПО
						  СоставыГруппПользователей.Пользователь = &amp;АвторизованныйПользователь
						И СоставыГруппПользователей.ГруппаПользователей = ГруппыДоступаПользователи.Пользователь
			  )
	ГДЕ
  ( // Поиск значений заданных полей в разрешенных значениях групп доступа (пользователей).

	#Параметр(5)  // [([(][(]...] 0-n открывающихся скобок.

//// Проверка значения поля группы параметров 1.
#Если "#Параметр(6)" = "Условие" Или "#Параметр(6)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	( #Параметр(7) )
#ИначеЕсли "#Параметр(6)" = "ПравоЧтения" Или "#Параметр(6)" = "ПравоИзменения" #Тогда
	  #Параметр(7) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
		#Если Не "#Параметр(6)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(6)" = "Объект" Или "#Параметр(6)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(7))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(7)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(7)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(7)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(7)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(7)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(7))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(7)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(7)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(6)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(7)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(7)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(6),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(6)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(6)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(6)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(6),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(7), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(6),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(6),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(7)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(6),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(7)
		#ИначеЕсли "#Параметр(7)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(6)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(6)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(6),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(7)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(7)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(7))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(8)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 2.
#Если "#Параметр(9)" = "" И "#Параметр(10)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(9)" = "Условие" Или "#Параметр(9)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(10) )
#ИначеЕсли "#Параметр(9)" = "ПравоЧтения" Или "#Параметр(9)" = "ПравоИзменения" #Тогда
	 #Параметр(10) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
		#Если Не "#Параметр(9)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(9)" = "Объект" Или "#Параметр(9)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(10))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(10)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(10)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(10)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(10)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(10)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(10))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(10)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(10)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(9)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(10)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(10)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(9),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(9)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(9)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(9)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(9),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(10), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(9),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(9),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(10)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(9),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(10)
		#ИначеЕсли "#Параметр(10)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(9)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(9)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(9),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(10)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(10)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(10))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(11)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 3.
#Если "#Параметр(12)" = "" И "#Параметр(13)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(12)" = "Условие" Или "#Параметр(12)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(13) )
#ИначеЕсли "#Параметр(12)" = "ПравоЧтения" Или "#Параметр(12)" = "ПравоИзменения" #Тогда
	 #Параметр(13) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
		#Если Не "#Параметр(12)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(12)" = "Объект" Или "#Параметр(12)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(13))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(13)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(13)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(13)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(13)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(13)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(13))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(13)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(13)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(12)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(13)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(13)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(12),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(12)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(12)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(12)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(12),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(13), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(12),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(12),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(13)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(12),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(13)
		#ИначеЕсли "#Параметр(13)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(12)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(12)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(12),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(13)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(13)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(13))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(14)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 4.
#Если "#Параметр(15)" = "" И "#Параметр(16)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(15)" = "Условие" Или "#Параметр(15)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(16) )
#ИначеЕсли "#Параметр(15)" = "ПравоЧтения" Или "#Параметр(15)" = "ПравоИзменения" #Тогда
	 #Параметр(16) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
		#Если Не "#Параметр(15)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(15)" = "Объект" Или "#Параметр(15)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(16))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(16)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(16)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(16)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(16)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(16)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(16))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(16)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(16)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(15)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(16)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(16)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(15),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(15)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(15)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(15)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(15),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(16), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(15),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(15),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(16)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(15),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(16)
		#ИначеЕсли "#Параметр(16)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(15)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(15)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(15),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(16)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(16)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(16))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(17)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 5.
#Если "#Параметр(18)" = "" И "#Параметр(19)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(18)" = "Условие" Или "#Параметр(18)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(19) )
#ИначеЕсли "#Параметр(18)" = "ПравоЧтения" Или "#Параметр(18)" = "ПравоИзменения" #Тогда
	 #Параметр(19) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
		#Если Не "#Параметр(18)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(18)" = "Объект" Или "#Параметр(18)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(19))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(19)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(19)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(19)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(19)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(19)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(19))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(19)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(19)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(18)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(19)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(19)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(18),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(18)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(18)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(18)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(18),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(19), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(18),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(18),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(19)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(18),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(19)
		#ИначеЕсли "#Параметр(19)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(18)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(18)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(18),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(19)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(19)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(19))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(20)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 6.
#Если "#Параметр(21)" = "" И "#Параметр(22)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(21)" = "Условие" Или "#Параметр(21)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(22) )
#ИначеЕсли "#Параметр(21)" = "ПравоЧтения" Или "#Параметр(21)" = "ПравоИзменения" #Тогда
	 #Параметр(22) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
		#Если Не "#Параметр(21)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(21)" = "Объект" Или "#Параметр(21)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(22))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(22)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(22)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(22)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(22)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(22)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(22))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(22)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(22)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(21)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(22)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(22)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(21),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(21)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(21)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(21)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(21),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(22), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(21),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(21),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(22)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(21),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(22)
		#ИначеЕсли "#Параметр(22)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(21)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(21)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(21),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(22)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(22)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(22))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(23)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 7.
#Если "#Параметр(24)" = "" И "#Параметр(25)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(24)" = "Условие" Или "#Параметр(24)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(25) )
#ИначеЕсли "#Параметр(24)" = "ПравоЧтения" Или "#Параметр(24)" = "ПравоИзменения" #Тогда
	 #Параметр(25) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
		#Если Не "#Параметр(24)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(24)" = "Объект" Или "#Параметр(24)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(25))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(25)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(25)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(25)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(25)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(25)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(25))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(25)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(25)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(24)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(25)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(25)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(24),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(24)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(24)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(24)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(24),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(25), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(24),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(24),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(25)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(24),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(25)
		#ИначеЕсли "#Параметр(25)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(24)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(24)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(24),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(25)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(25)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(25))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(26)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 8.
#Если "#Параметр(27)" = "" И "#Параметр(28)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(27)" = "Условие" Или "#Параметр(27)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(28) )
#ИначеЕсли "#Параметр(27)" = "ПравоЧтения" Или "#Параметр(27)" = "ПравоИзменения" #Тогда
	 #Параметр(28) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
		#Если Не "#Параметр(27)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(27)" = "Объект" Или "#Параметр(27)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(28))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(28)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(28)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(28)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(28)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(28)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(28))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(28)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(28)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(27)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(28)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(28)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(27),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(27)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(27)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(27)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(27),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(28), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(27),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(27),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(28)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(27),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(28)
		#ИначеЕсли "#Параметр(28)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(27)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(27)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(27),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(28)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(28)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(28))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(29)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 9.
#Если "#Параметр(30)" = "" И "#Параметр(31)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(30)" = "Условие" Или "#Параметр(30)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(31) )
#ИначеЕсли "#Параметр(30)" = "ПравоЧтения" Или "#Параметр(30)" = "ПравоИзменения" #Тогда
	 #Параметр(31) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
		#Если Не "#Параметр(30)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(30)" = "Объект" Или "#Параметр(30)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(31))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(31)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(31)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(31)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(31)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(31)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(31))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(31)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(31)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(30)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(31)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(31)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(30),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(30)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(30)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(30)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(30),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(31), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(30),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(30),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(31)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(30),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(31)
		#ИначеЕсли "#Параметр(31)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(30)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(30)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(30),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(31)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(31)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(31))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(32)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 10.
#Если "#Параметр(33)" = "" И "#Параметр(34)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(33)" = "Условие" Или "#Параметр(33)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(34) )
#ИначеЕсли "#Параметр(33)" = "ПравоЧтения" Или "#Параметр(33)" = "ПравоИзменения" #Тогда
	 #Параметр(34) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
		#Если Не "#Параметр(33)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(33)" = "Объект" Или "#Параметр(33)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(34))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(34)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(34)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(34)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(34)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(34)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(34))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(34)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(34)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(33)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(34)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(34)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(33),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(33)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(33)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(33)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(33),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(34), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(33),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(33),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(34)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(33),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(34)
		#ИначеЕсли "#Параметр(34)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(33)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(33)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(33),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(34)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(34)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(34))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(35)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 11.
#Если "#Параметр(36)" = "" И "#Параметр(37)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(36)" = "Условие" Или "#Параметр(36)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(37) )
#ИначеЕсли "#Параметр(36)" = "ПравоЧтения" Или "#Параметр(36)" = "ПравоИзменения" #Тогда
	 #Параметр(37) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
		#Если Не "#Параметр(36)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(36)" = "Объект" Или "#Параметр(36)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(37))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(37)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(37)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(37)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(37)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(37)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(37))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(37)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(37)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(36)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(37)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(37)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(36),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(36)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(36)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(36)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(36),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(37), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(36),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(36),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(37)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(36),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(37)
		#ИначеЕсли "#Параметр(37)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(36)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(36)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(36),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(37)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(37)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(37))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(38)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 12.
#Если "#Параметр(39)" = "" И "#Параметр(40)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(39)" = "Условие" Или "#Параметр(39)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(40) )
#ИначеЕсли "#Параметр(39)" = "ПравоЧтения" Или "#Параметр(39)" = "ПравоИзменения" #Тогда
	 #Параметр(40) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
		#Если Не "#Параметр(39)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(39)" = "Объект" Или "#Параметр(39)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(40))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(40)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(40)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(40)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(40)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(40)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(40))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(40)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(40)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(39)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(40)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(40)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(39),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(39)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(39)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(39)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(39),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(40), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(39),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(39),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(40)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(39),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(40)
		#ИначеЕсли "#Параметр(40)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(39)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(39)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(39),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(40)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(40)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(40))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(41)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 13.
#Если "#Параметр(42)" = "" И "#Параметр(43)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(42)" = "Условие" Или "#Параметр(42)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(43) )
#ИначеЕсли "#Параметр(42)" = "ПравоЧтения" Или "#Параметр(42)" = "ПравоИзменения" #Тогда
	 #Параметр(43) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
		#Если Не "#Параметр(42)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(42)" = "Объект" Или "#Параметр(42)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(43))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(43)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(43)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(43)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(43)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(43)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(43))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(43)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(43)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(42)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(43)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(43)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(42),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(42)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(42)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(42)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(42),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(43), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(42),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(42),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(43)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(42),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(43)
		#ИначеЕсли "#Параметр(43)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(42)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(42)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(42),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(43)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(43)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(43))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(44)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 14.
#Если "#Параметр(45)" = "" И "#Параметр(46)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(45)" = "Условие" Или "#Параметр(45)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(46) )
#ИначеЕсли "#Параметр(45)" = "ПравоЧтения" Или "#Параметр(45)" = "ПравоИзменения" #Тогда
	 #Параметр(46) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
		#Если Не "#Параметр(45)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(45)" = "Объект" Или "#Параметр(45)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(46))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(46)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(46)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(46)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(46)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(46)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(46))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(46)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(46)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(45)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(46)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(46)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(45),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(45)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(45)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(45)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(45),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(46), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(45),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(45),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(46)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(45),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(46)
		#ИначеЕсли "#Параметр(46)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(45)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(45)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(45),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(46)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(46)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(46))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(47)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 15.
#Если "#Параметр(48)" = "" И "#Параметр(49)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(48)" = "Условие" Или "#Параметр(48)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(49) )
#ИначеЕсли "#Параметр(48)" = "ПравоЧтения" Или "#Параметр(48)" = "ПравоИзменения" #Тогда
	 #Параметр(49) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
		#Если Не "#Параметр(48)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(48)" = "Объект" Или "#Параметр(48)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(49))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(49)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(49)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(49)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(49)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(49)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(49))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(49)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(49)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(48)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(49)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(49)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(48),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(48)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(48)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(48)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(48),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(49), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(48),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(48),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(49)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(48),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(49)
		#ИначеЕсли "#Параметр(49)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(48)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(48)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(48),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(49)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(49)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(49))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(50)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

//// Проверка значения поля группы параметров 16.
#Если "#Параметр(51)" = "" И "#Параметр(52)" = "" #Тогда
	// Группа параметров не используется.
#ИначеЕсли "#Параметр(51)" = "Условие" Или "#Параметр(51)" = "" #Тогда
	// Когда имя вида доступа "Условие" (или ""), тогда вместо имени поля задано условие.
	 ( #Параметр(52) )
#ИначеЕсли "#Параметр(51)" = "ПравоЧтения" Или "#Параметр(51)" = "ПравоИзменения" #Тогда
	 #Параметр(52) &lt;&gt; НЕОПРЕДЕЛЕНО
	И ИСТИНА В
	 (	// Проверка права пользователя на таблицу Значения, установленного в поле.
		ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
		ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПрава
		ГДЕ
			  ТаблицыГруппДоступаПроверкаПрава.ГруппаДоступа = ГруппыДоступа.Ссылка
			И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПрава.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
		#Если Не "#Параметр(51)" = "ПравоЧтения" #Тогда
			И ТаблицыГруппДоступаПроверкаПрава.Изменение
		#КонецЕсли
	 )
#ИначеЕсли "#Параметр(51)" = "Объект" Или "#Параметр(51)" = " " #Тогда
	(
		// Проверка права объекта ведущей таблицы (зависимость по правам)
		(
			ИСТИНА В
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваОбъекта
			ГДЕ
				  ТаблицыГруппДоступаПроверкаПраваОбъекта.ГруппаДоступа = ГруппыДоступа.Ссылка
				И ТИПЗНАЧЕНИЯ(ТаблицыГруппДоступаПроверкаПраваОбъекта.ТипТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Проверка ведущего права для права Чтение
				// Право Чтение может зависеть только от права Чтение
			#Иначе
				// Проверка ведущего права для права Изменение
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И НЕ
				(	  ТаблицыГруппДоступаПроверкаПраваОбъекта.Изменение = ЛОЖЬ
					И НЕ ИСТИНА В
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
					ГДЕ
						  ЗависимостиПравДоступа.ПодчиненнаяТаблица = СвойстваТекущейТаблицы.Ссылка
						И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
					)
				)
			#КонецЕсли
			)
		)
		// Проверка ограничения права объекта ведущей таблицы
		И 
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		ВЫБОР КОГДА ИСТИНА В
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК Идентификаторы
					ГДЕ
						  ТИПЗНАЧЕНИЯ(Идентификаторы.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(#Параметр(52))
						И Идентификаторы.ЗначениеПустойСсылки В (&amp;ТипыВладельцевНастроекПрав)
				)
		ТОГДА
			(
				ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(52)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
				И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
					(
					ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
					ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
						ПО
							  НаследованиеНастроек.Объект = #Параметр(52)
							И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
						#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
						#Иначе
						  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
							И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
						  #Иначе
							И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
						  #КонецЕсли
							И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
						#КонецЕсли
						ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
						ПО
							  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
							И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
					)
			)
		ИНАЧЕ
	#КонецЕсли
	#Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
		НЕ
		 (
		  ИСТИНА В // Не все проверки отключены.
		  (
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора с не отключенной проверкой.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
				ГДЕ
					  НомераНаборов.Объект = #Параметр(52)
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					// Право Чтение может зависеть только от права Чтение
					И НомераНаборов.Чтение = ИСТИНА
				#Иначе
					// Право Изменение может зависеть от ведущих прав Чтение, Изменение
					И ВЫБОР
						КОГДА ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
							ГДЕ
								  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
							)
						ТОГДА НомераНаборов.Чтение
						ИНАЧЕ НомераНаборов.Изменение
					  КОНЕЦ
				#КонецЕсли
					И
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(52)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
		  ) И НЕ
	#Иначе
		 (
	#КонецЕсли
		  ИСТИНА В
		  (
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первого набора по которому доступ разрешен.
			ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НомераНаборов
			ГДЕ
				  НомераНаборов.Объект = #Параметр(52)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				И НомераНаборов.Чтение = ИСТИНА
			#Иначе
				// Право Изменение может зависеть от ведущих прав Чтение, Изменение
				И ВЫБОР
					КОГДА ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗависимостиПравДоступа КАК ЗависимостиПравДоступа
						ГДЕ
							  ЗависимостиПравДоступа.ПодчиненнаяТаблица             = СвойстваТекущейТаблицы.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗависимостиПравДоступа.ТипВедущейТаблицы) = ТИПЗНАЧЕНИЯ(#Параметр(52))
						)
					ТОГДА НомераНаборов.Чтение
					ИНАЧЕ НомераНаборов.Изменение
				  КОНЕЦ
			#КонецЕсли
				И
			  #Если "#Параметр(3)" = "РасширенноеИЛИ" Или "#Параметр(3)" = "НеОграничиватьДоступКГруппам,РасширенноеИЛИ" #Тогда
				ИСТИНА В // Не все проверки текущего набора отключены.
				(
					ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Выбор первой не отключенной проверки текущего набора.
					ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
					ГДЕ
						  НаборыЗначений.Объект      = #Параметр(52)
						И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
						И НЕ ИСТИНА В
							(
								ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА // Поиск настроек ограничений доступа
								ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ГДЕ
									  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
									И ЗначенияПоУмолчанию.БезНастройки = ИСТИНА
							)
				)
				И
			  #КонецЕсли
				  НЕ ЛОЖЬ В // Все проверки успешны.
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ // Выбор первого не разрешенного значения доступа.
				ИЗ РегистрСведений.НаборыЗначенийДоступа КАК НаборыЗначений
				ГДЕ
					  НаборыЗначений.Объект      = #Параметр(52)
					И НаборыЗначений.НомерНабора = НомераНаборов.НомерНабора
					И НЕ
				ВЫБОР
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
			  #Если НЕ &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				КОГДА НаборыЗначений.ЗначениеБезГрупп
				ТОГДА
					ИСТИНА В
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
							ПО
								  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
								И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
						ГДЕ
							  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
							И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
						)
			  #КонецЕсли
				КОГДА НаборыЗначений.СтандартноеЗначение
			#Иначе
				КОГДА
					ИСТИНА В
					(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
						ГДЕ
							ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
					)
			#КонецЕсли
			#Если &amp;ВидыДоступаСОтключеннымИспользованием = "Все" #Тогда
				ТОГДА
					ИСТИНА
			#Иначе
				ТОГДА
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ВЫБОР
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					КОГДА
						НЕ ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ Справочник.ИдентификаторыОбъектовМетаданных КАК ТипыСсылок
							ГДЕ
								  ТИПЗНАЧЕНИЯ(ТипыСсылок.ЗначениеПустойСсылки) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ТипыСсылок.ЗначениеПустойСсылки В (&amp;ТипыЗначенийДоступаСГруппами)
							)
					ТОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = НаборыЗначений.ЗначениеДоступа
							ГДЕ
								  ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
								И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								И ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#КонецЕсли
				#Если Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОГДА
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
							ГДЕ
								  ГруппыЗначенийДоступа.ЗначениеДоступа       = НаборыЗначений.ЗначениеДоступа
								И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
							)
					ТОГДА
						ИСТИНА
				#КонецЕсли
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					ИНАЧЕ
				#КонецЕсли
						ИСТИНА В
							(
							ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
							ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
								ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
								ПО
									  ГруппыЗначений.ЗначениеДоступа    = НаборыЗначений.ЗначениеДоступа
									И ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
									И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа)
								
								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияГруппДоступа КАК Значения
								ПО
									  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
									И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаЗначенийДоступа
							ГДЕ
								ЕСТЬNULL(Значения.ЗначениеРазрешено, ЗначенияПоУмолчанию.ВсеРазрешены)
							)
				#Если Не #ИмяТекущегоПраваДоступа = "Чтение"
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")
				  Или Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") #Тогда
					КОНЕЦ
				#КонецЕсли
			#КонецЕсли
				// Проверка заведомого ложного или истинного однострочного набора значений.
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступРазрешен)
				ТОГДА ИСТИНА
				КОГДА НаборыЗначений.ЗначениеДоступа = ЗНАЧЕНИЕ(Перечисление.ДополнительныеЗначенияДоступа.ДоступЗапрещен)
				ТОГДА ЛОЖЬ
				// Проверка права доступа пользователя к таблице ЗначенияДоступа.
				КОГДА ТИПЗНАЧЕНИЯ(НаборыЗначений.ЗначениеДоступа) = ТИП(Справочник.ИдентификаторыОбъектовМетаданных)
			#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
				// Право Чтение может зависеть только от права Чтение
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
					)
			#Иначе
				ТОГДА ИСТИНА В
					(	ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.ТаблицыГруппДоступа КАК ТаблицыГруппДоступаПроверкаПраваНаОбъект
						ГДЕ
							  ТаблицыГруппДоступаПроверкаПраваНаОбъект.ГруппаДоступа = ГруппыДоступа.Ссылка
							И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Таблица = НаборыЗначений.ЗначениеДоступа
							И НЕ(НаборыЗначений.Уточнение &lt;&gt; ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
									И ТаблицыГруппДоступаПроверкаПраваНаОбъект.Изменение = ЛОЖЬ)
					)
			#КонецЕсли
			#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
				ИНАЧЕ
					(
					ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено
						(
						ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
						ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
							ПО
								  НаследованиеНастроек.Объект = НаборыЗначений.ЗначениеДоступа
								И НастройкиПрав.Объект        = НаследованиеНастроек.Родитель
							#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
							#Иначе
								И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
								И НастройкиПрав.Таблица = ВЫБОР
									КОГДА НаборыЗначений.Уточнение В (&amp;ИдентификаторыТаблицСОтдельнымиНастройкамиПрав)
									ТОГДА НаборыЗначений.Уточнение
									ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка) КОНЕЦ
							#КонецЕсли
							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
							ПО
								  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
								И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
						)
					)
			#Иначе
				ИНАЧЕ
					ЛОЖЬ
			#КонецЕсли
				КОНЕЦ
				) // НЕ ЛОЖЬ В
		  )
		 )
	#Если Не &amp;ТипыВладельцевНастроекПрав = "" #Тогда
		КОНЕЦ
	#КонецЕсли
	)

#ИначеЕсли "#Параметр(51)" = "НастройкиПрав" #Тогда
	
	 (
		ИСТИНА В // Проверка, что пользователю или какой-нибудь группе пользователя право разрешено
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(52)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньРазрешенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
		 И НЕ ЛОЖЬ В // Проверка, что пользователю или какой-нибудь группе пользователя право запрещено.
			(
			ВЫБРАТЬ ПЕРВЫЕ 1 ЛОЖЬ
			ИЗ РегистрСведений.НастройкиПравОбъектов КАК НастройкиПрав
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаследованиеНастроекПравОбъектов КАК НаследованиеНастроек
				ПО
					  НаследованиеНастроек.Объект = #Параметр(52)
					И НастройкиПрав.Объект  = НаследованиеНастроек.Родитель
				#Если #ИмяТекущегоПраваДоступа = "Чтение" #Тогда
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияЧтения
				#Иначе
				  #Если СтрСодержит(&amp;ТаблицыСОтдельнымиНастройкамиПрав, "|#Параметр(1);") #Тогда
					И НастройкиПрав.Таблица = СвойстваТекущейТаблицы.Ссылка
				  #Иначе
					И НастройкиПрав.Таблица = ЗНАЧЕНИЕ(Справочник.ИдентификаторыОбъектовМетаданных.ПустаяСсылка)
				  #КонецЕсли
					И НаследованиеНастроек.УровеньИспользования &lt; НастройкиПрав.УровеньЗапрещенияИзменения
				#КонецЕсли
				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
				ПО
					  СоставыГруппПользователей.Пользователь        = &amp;АвторизованныйПользователь
					И СоставыГруппПользователей.ГруппаПользователей = НастройкиПрав.Пользователь
			)
	 )
#ИначеЕсли Не СтрСодержит(&amp;ВсеВидыДоступаКромеСпециальных, ",#Параметр(51),") #Тогда
	// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
	#Если СтрСодержит("#Параметр(51)", ",") #Тогда
		НеверныйВидДоступа: "#Параметр(51)" - "Список имен видов доступа не найден"
	#Иначе
		НеверныйВидДоступа: "#Параметр(51)" - "Имя вида доступа не найдено"
	#КонецЕсли
#ИначеЕсли &amp;ВидыДоступаСОтключеннымИспользованием &lt;&gt; "Все"
         И Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",#Параметр(51),") #Тогда
	
	 (
			ЕСТЬNULL(#Параметр(52), НЕОПРЕДЕЛЕНО) &lt;&gt; НЕОПРЕДЕЛЕНО
			И
		#Если (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",Пользователи,")        И СтрСодержит(",#Параметр(51),", ",Пользователи,"))
		  Или (Не СтрСодержит(&amp;ВидыДоступаСОтключеннымИспользованием, ",ВнешниеПользователи,") И СтрСодержит(",#Параметр(51),", ",ВнешниеПользователи,")) #Тогда
			НЕ
			(
			НЕ ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначенийДоступа
				ГДЕ
					  ГруппыЗначенийДоступа.ЗначениеДоступа       = #Параметр(52)
					И ГруппыЗначенийДоступа.ГруппаЗначенийДоступа = &amp;АвторизованныйПользователь
				)
			И НЕ
		#Иначе
			(
		#КонецЕсли
			ВЫБОР
			КОГДА ИСТИНА В
				(
		#Если СтрСодержит(&amp;ВидыДоступаБезГруппДляЗначенияДоступа, ",#Параметр(51),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = #Параметр(52)
		#ИначеЕсли "#Параметр(52)" = "Т.Ссылка" #Тогда
			#Если СтрСодержит("#Параметр(51)", ",") #Тогда
				// Когда параметр задан неверно, вставляется строка, чтобы вызвать ошибку сборки ограничения доступа.
				НеверныйВидДоступа: "#Параметр(51)" - "При проверке таблицы значения доступа можно указывать только один вид доступа"
			#ИначеЕсли СтрСодержит(&amp;ВидыДоступаСОднойГруппойДляЗначенияДоступа, ",#Параметр(51),") #Тогда
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
				ГДЕ
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = Т.ГруппаДоступа
			#Иначе // Значения доступа, для которых можно указать несколько групп значений доступа.
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Параметр(1).ГруппыДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа   = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа = ГруппыЗначений.ГруппаДоступа
					И ГруппыЗначений.Ссылка    = #Параметр(52)
			#КонецЕсли
		#Иначе
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступа КАК Значения
					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГруппыЗначенийДоступа КАК ГруппыЗначений
				ПО
					  Значения.ГруппаДоступа         = ГруппыДоступа.Ссылка
					И Значения.ЗначениеДоступа       = ГруппыЗначений.ГруппаЗначенийДоступа
					И ГруппыЗначений.ЗначениеДоступа = #Параметр(52)
		#КонецЕсли
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			=
			ВЫБОР
			КОГДА ИСТИНА В
				(
				ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА
				ИЗ РегистрСведений.ЗначенияГруппДоступаПоУмолчанию КАК ЗначенияПоУмолчанию
				ГДЕ
				      ЗначенияПоУмолчанию.ГруппаДоступа = ГруппыДоступа.Ссылка
				    И ТИПЗНАЧЕНИЯ(ЗначенияПоУмолчанию.ТипЗначенийДоступа) = ТИПЗНАЧЕНИЯ(#Параметр(52))
				    И ЗначенияПоУмолчанию.ВсеРазрешены = ЛОЖЬ
				)
			ТОГДА ИСТИНА
			ИНАЧЕ ЛОЖЬ
			КОНЕЦ
			)
	 )

#Иначе
	ИСТИНА
#КонецЕсли

	#Параметр(53)  // [)[)][)]...] [ИЛИ|И] [([(][(]...] оператор И/ИЛИ с/без скобок.

  )
)
#КонецЕсли

</condition>
	</restrictionTemplate>
</Rights>